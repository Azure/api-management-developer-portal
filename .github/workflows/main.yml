name: CI
on:
  push:
    branches: [ develop, release/**, feature/** ]
  pull_request:
    branches: [ develop, master ]

  workflow_dispatch:

jobs:
  build:
    name: Build
    environment: dev
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Execute JavaScript inline
        uses: satackey/action-js-inline@v0.0.2
        with:
          required-packages: moment
          script: |
            const core = require('@actions/core')
            const moment = require('moment');
            const crypto = require('crypto');

            const id = "${{ secrets.AZURE_APIM_ID }}";
            const key = "${{ secrets.AZURE_APIM_MANAGEMENT_API_KEY }}";
            const now = moment.utc(moment());
            const expiry = now.clone().add(3600, 'seconds');
            const expiryString = expiry.format(`YYYY-MM-DD[T]HH:mm:ss.SSSSSSS[Z]`);
            const dataToSign = `${id}\n${expiryString}`;
            const signedData = crypto.createHmac('sha512', key).update(dataToSign).digest('base64');
            const sasToken = `SharedAccessSignature uid=${id}&ex=${expiryString}&sn=${signedData}`;
            core.exportVariable('AZURE_APIM_MANAGEMENT_SAS_ACCESS_TOKEN', sasToken);
      - name: Npm install
        run: npm install
                
      - name: Replace token
        uses: cschleiden/replace-tokens@v1
        env:
          AZURE_APIM_DEVELOPER_PORTAL_URL: ${{ secrets.AZURE_APIM_DEVELOPER_PORTAL_URL }}
          AZURE_APIM_ID: ${{ secrets.AZURE_APIM_ID }}
          AZURE_APIM_MANAGEMENT_SAS_ACCESS_TOKEN:  ${{ env.AZURE_APIM_MANAGEMENT_SAS_ACCESS_TOKEN }}
          AZURE_APIM_MANAGEMENT_URL:  ${{ secrets.AZURE_APIM_MANAGEMENT_URL }}
          AZURE_STORAGE_SAS_URL: ${{ secrets.AZURE_STORAGE_SAS_URL }}
          DOCUMENTATION_CONTAINER_URL: ${{ secrets.DOCUMENTATION_CONTAINER_URL }}
        with:
          files: '["**/config.*.json"]'
      
      - name: Publish
        run: npm run publish
        
      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.2
        with: 
          path: dist/website
        
  dev:
    name: Dev
    needs: build
    # if:  success() && github.ref == 'refs/heads/develop'
    environment: dev
    runs-on: ubuntu-latest
        
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2.0.8
    
      - name: Deploy to Azure Storage
        uses: TravisSpomer/deploy-to-azure-storage@v1.3.0
        with:
          source-path: artifact
          sas-url: ${{ secrets.AZURE_STORAGE_SAS_URL }}
          
  uat:
    name: Uat
    needs: [build, dev]
    environment: uat
    runs-on: ubuntu-latest
        
    steps:
      - name: Deploy to Azure Storage
        uses: TravisSpomer/deploy-to-azure-storage@v1.3.0
        with:
          source-path: artifact
          sas-url: ${{ secrets.AZURE_STORAGE_SAS_URL }}
          
  sdx:
    name: Sdx
    needs: build
    if: github.head_ref == 'release/**'
    environment: sdx
    runs-on: ubuntu-latest
        
    steps:
      - name: Deploy to Azure Storage
        uses: TravisSpomer/deploy-to-azure-storage@v1.3.0
        with:
          source-path: artifact
          sas-url: ${{ secrets.AZURE_STORAGE_SAS_URL }}
