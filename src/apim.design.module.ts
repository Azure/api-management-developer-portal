import * as Constants from "./constants";
import "./bindingHandlers/codeEditor";
import "./bindingHandlers/copyToClipboard";
import { UnsavedChangesRouteGuard } from "./routing/unsavedChangesRouteGuard";
import { MapiObjectStorage, MapiBlobStorage } from "./persistence";
import { DefaultAuthenticator } from "./components/defaultAuthenticator";
import { IInjector, IInjectorModule } from "@paperbits/common/injection";
import { ConsoleLogger } from "@paperbits/common/logging";
import { DefaultSessionManager } from "@paperbits/common/persistence/defaultSessionManager";
import { HistoryRouteHandler } from "@paperbits/common/routing";
import { RoleBasedSecurityDesignModule } from "@paperbits/core/security/roleBasedSecurity.design.module";
import { ListOfApisDesignModule } from "./components/apis/list-of-apis/ko/listOfApisEditor.module";
import { DetailsOfApiDesignModule } from "./components/apis/details-of-api/ko/detailsOfApiEditor.module";
import { HistoryOfApiEditorModule as HistoryOfApiDesignModule } from "./components/apis/history-of-api/ko/historyOfApiEditor.module";
import { SigninDesignModule } from "./components/users/signin/signin.design.module";
import { SigninSocialEditorModule as SigninSocialDesignModule } from "./components/users/signin-social/signinSocial.design.module";
import { SignupSocialDesignModule } from "./components/users/signup-social/signupSocial.design.module";
import { SignupDesignModule } from "./components/users/signup/signup.design.module";
import { ProfileDesignModule } from "./components/users/profile/profile.design.module";
import { SubscriptionsDesignModule } from "./components/users/subscriptions/subscriptions.design.module";
import { ProductDetailsDesignModule } from "./components/products/product-details/productDetails.design.module";
import { MapiClient, IdentityService } from "./services";
import { SetupModule } from "./components/setup/setup.module";
import { ContentModule } from "./components/content";
import { CustomWidgetListModule } from "./components/custom-widget-list";
import { OperationListEditorModule as OperationListDesignModule } from "./components/operations/operation-list/ko/operationListEditor.module";
import { OperationDetailsDesignModule } from "./components/operations/operation-details/operationDetails.design.module";
import { ProductListEditorModule as ProductListDesignModule } from "./components/products/product-list/ko/productListEditor.module";
import { ProductSubscribeEditorModule as ProductSubscribeDesignModule } from "./components/products/product-subscribe/ko/productSubscribeEditor.module";
import { ProductApisEditorModule as ProductApisDesignModule } from "./components/products/product-apis/ko/productApisEditor.module";
import { ProductSubscriptionsEditorModule as ProductSubscriptionsDesignModule } from "./components/products/product-subscriptions/ko/productSubscriptionsEditor.module";
import { App } from "./components/app/app";
import { ReportsEditorModule as ReportsDesignModule } from "./components/reports/ko/reportsEditor.module";
import { ResetPasswordDesignModule } from "./components/users/reset-password/resetPassword.design.module";
import { ConfirmPasswordEditorModule as ConfirmPasswordDesignModule } from "./components/users/confirm-password/ko/confirmPasswordEditor.module";
import { HelpModule } from "./components/help";
import { ChangePasswordEditorModule as ChangePasswordDesignModule } from "./components/users/change-password/ko/changePasswordEditor.module";
import { TenantService } from "./services/tenantService";
import { ValidationSummaryDesignModule } from "./components/users/validation-summary/validationSummary.design.module";
import { BackendService } from "./services/backendService";
import { StaticRoleService } from "./services/roleService";
import { ProvisionService } from "./services/provisioningService";
import { PolicyService } from "./services/policyService";
import { OAuthService } from "./services/oauthService";
import { OldContentRouteGuard } from "./routing/oldContentRouteGuard";
import { AccessTokenRefrsher } from "./authentication/accessTokenRefresher";
import { ApiProductsDesignModule } from "./components/apis/api-products/ko/apiProductsEditor.module";
import { RuntimeConfigurator } from "./services/runtimeConfigurator";
import { CustomHtmlDesignModule } from "./components/custom-html/customHtml.design.module";
import { CustomWidgetDesignModule } from "./components/custom-widget/customWidget.design.module";
import { CodeEditor } from "./components/code-editor/code-editor";


export class ApimDesignModule implements IInjectorModule {
    public register(injector: IInjector): void {
        injector.bindModule(new SetupModule());
        injector.bindModule(new ListOfApisDesignModule());
        injector.bindModule(new ApiProductsDesignModule());
        injector.bindModule(new DetailsOfApiDesignModule());
        injector.bindModule(new HistoryOfApiDesignModule());
        injector.bindModule(new SigninDesignModule());
        injector.bindModule(new SigninSocialDesignModule());
        injector.bindModule(new SignupSocialDesignModule());
        injector.bindModule(new SignupDesignModule());
        injector.bindModule(new ProfileDesignModule());
        injector.bindModule(new SubscriptionsDesignModule());
        injector.bindModule(new ProductListDesignModule());
        injector.bindModule(new ProductApisDesignModule());
        injector.bindModule(new ProductSubscriptionsDesignModule());
        injector.bindModule(new ProductDetailsDesignModule());
        injector.bindModule(new ProductSubscribeDesignModule());
        injector.bindModule(new OperationListDesignModule());
        injector.bindModule(new OperationDetailsDesignModule());
        injector.bindModule(new ReportsDesignModule());
        injector.bindModule(new ResetPasswordDesignModule());
        injector.bindModule(new ConfirmPasswordDesignModule());
        injector.bindModule(new ChangePasswordDesignModule());
        injector.bindModule(new ValidationSummaryDesignModule());
        injector.bindModule(new CustomHtmlDesignModule());
        injector.bindModule(new CustomWidgetDesignModule());
        injector.bindModule(new RoleBasedSecurityDesignModule());
        injector.bindSingleton("app", App);
        injector.bindSingleton("logger", ConsoleLogger);
        injector.bindSingleton("tenantService", TenantService);
        injector.bindSingleton("backendService", BackendService);
        injector.bindSingleton("roleService", StaticRoleService);
        injector.bindSingleton("provisioningService", ProvisionService);
        injector.bindSingleton("identityService", IdentityService);
        injector.bindSingleton("policyService", PolicyService);
        injector.bindSingleton("mapiClient", MapiClient);
        injector.bindSingleton("authenticator", DefaultAuthenticator);
        injector.bindSingleton("objectStorage", MapiObjectStorage);
        injector.bindSingleton("blobStorage", MapiBlobStorage);
        injector.bindToCollection("routeGuards", OldContentRouteGuard);
        injector.bindToCollection("routeGuards", UnsavedChangesRouteGuard);
        injector.bindInstance("reservedPermalinks", Constants.reservedPermalinks);
        injector.bindSingleton("oauthService", OAuthService);
        injector.bindToCollection("autostart", HistoryRouteHandler);
        injector.bindToCollection("autostart", AccessTokenRefrsher);
        injector.bindToCollection("autostart", RuntimeConfigurator);
        injector.bindSingleton("sessionManager", DefaultSessionManager);
        injector.bind("CodeEditor", CodeEditor);
        injector.bindModule(new CustomWidgetListModule()); // needs "blobStorage"
        injector.bindModule(new ContentModule());
        injector.bindModule(new HelpModule());
    }
}