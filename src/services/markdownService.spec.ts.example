/** Remove .example in the file name when the solution for an incompitability with ts-node is found */

import { expect } from "chai";
import { describe, it } from "mocha";
import { MarkdownService } from "./markdownService";

describe("Markdown service", async () => {
    it("Combined Makrdown/HTML input processing", async () => {
        const markdownService = new MarkdownService();

        const input = `This API method allows you to send an SMS message to an end user. Note that the Sandbox version of this API will not work end-to-end, ie. an SMS will not arrive on a handset.
            [This link](http://microsoft.com/) has no title attribute. www.microsoft.com
            
            <p>This is rendered!</p>
            <ul>
                <li>The</li>
                <li>list</li>
                <li>is</li>
                <li>rendered</li>
            </ul>
            
            
            <h3>Test Scenarios</h3>
            To test various scenarios in the Sandbox environment, use the following values when making API requests. Any other combination of values will give a successful response.
            <a href="https://www.microsoft.com">link</a>
            
            
            This is [an example](http://microsoft.com/ "Title") inline link.
            
            *   Red
            *   Green
            *   Blue
            
            This is an H1
            =============
            
            Use the \`printf()\` function.
            
            <div role="table" class="table-preset table-preset-schema">
                <div class="d-contents" role="rowgroup">
                    <div class="d-contents" role="row">
                        <div role="cell" class="table-preset-head text-truncate">Input Field</div>
                        <div role="cell" class="table-preset-head text-truncate">Input Value</div>
                        <div role="cell" class="table-preset-head text-truncate">Status</div>
                        <div role="cell" class="table-preset-head">User Friendly Message</div>
                    </div>
                    <div class="d-contents" role="row">
                        <div role="cell">username</div>
                        <div role="cell" style="font-style: italic;">{blank}</div>
                        <div role="cell">91</div>
                        <div role="cell">There is no account specified for the username and password</div>
                    </div>
                    <div class="d-contents" role="row">
                        <div role="cell">md5Hash</div>
                        <div role="cell" style="font-style: italic;">{blank}</div>
                        <div role="cell">92</div>
                        <div role="cell">The MD5 hash supplied was invalid</div>
                    </div>
                    <div class="d-contents" role="row">
                        <div role="cell">scheduleFor</div>
                        <div role="cell" style="font-style: italic;">{blank}</div>
                        <div role="cell">94</div>
                        <div role="cell">The ScheduleFor DateTime is invalid</div>
                    </div>
                </div>
            </div>`;
        

        const expected = `<p>This API method allows you to send an SMS message to an end user. Note that the Sandbox version of this API will not work end-to-end, ie. an SMS will not arrive on a handset.
            <a href="http://microsoft.com/">This link</a> has no title attribute. <a href="http://www.microsoft.com">www.microsoft.com</a></p>
            <p>This is rendered!</p>
            <ul>
                <li>The</li>
                <li>list</li>
                <li>is</li>
                <li>rendered</li>
            </ul>
            <h3>Test Scenarios</h3>
            To test various scenarios in the Sandbox environment, use the following values when making API requests. Any other combination of values will give a successful response.
            <a href="https://www.microsoft.com">link</a>
            <p>This is <a href="http://microsoft.com/">an example</a> inline link.</p>
            <ul>
            <li>Red</li>
            <li>Green</li>
            <li>Blue</li>
            </ul>
            <h1>This is an H1</h1>
            <p>Use the <code>printf()</code> function.</p>
            <div role="table" class="table-preset table-preset-schema">
                <div class="d-contents" role="rowgroup">
                    <div class="d-contents" role="row">
                        <div role="cell" class="table-preset-head text-truncate">Input Field</div>
                        <div role="cell" class="table-preset-head text-truncate">Input Value</div>
                        <div role="cell" class="table-preset-head text-truncate">Status</div>
                        <div role="cell" class="table-preset-head">User Friendly Message</div>
                    </div>
                    <div class="d-contents" role="row">
                        <div role="cell">username</div>
                        <div role="cell" style="font-style: italic;">{blank}</div>
                        <div role="cell">91</div>
                        <div role="cell">There is no account specified for the username and password</div>
                    </div>
                    <div class="d-contents" role="row">
                        <div role="cell">md5Hash</div>
                        <div role="cell" style="font-style: italic;">{blank}</div>
                        <div role="cell">92</div>
                        <div role="cell">The MD5 hash supplied was invalid</div>
                    </div>
                    <div class="d-contents" role="row">
                        <div role="cell">scheduleFor</div>
                        <div role="cell" style="font-style: italic;">{blank}</div>
                        <div role="cell">94</div>
                        <div role="cell">The ScheduleFor DateTime is invalid</div>
                    </div>
                </div>
            </div>`;

        const output = markdownService.processMarkdown(input);

        expect(output).to.equals(expected);
    });
    
    it("Makrdown input processing", async () => {
        const markdownService = new MarkdownService();

        const input = `This is a sample paragraph.

        This is an H1
        =============
        This is an H2
        -------------
        
        # This is an H1 #
        ## This is an H2 ##
        ### This is an H3 ######
        
        > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
        consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
        Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
        
        > ## This is a header.
        > 
        > 1.   This is the first list item.
        > 2.   This is the second list item.
        
        *   Red
        *   Green
        *   Blue
        
        1.  Bird
        2.  McHale
        3.  Parish
        
        *   Bird
        
        *   Magic
        
        *   This is a list item with two paragraphs.
        
            This is the second paragraph in the list item. You're
        only required to indent the first line. Lorem ipsum dolor
        sit amet, consectetuer adipiscing elit.
        
        *   Another item in the same list.
        
        Here is an example of AppleScript:
        
            tell application "Foo"
                beep
            end tell
        
        - - -
        
            <div class="footer">
                &copy; 2004 Foo Corporation
            </div>
        
        This is [an example](http://example.com/ "Title") inline link.
        
        [This link](http://example.net/) has no title attribute.
        
        I get 10 times more traffic from [Google][] than from
        [Yahoo][] or [MSN][].
        
          [google]: http://google.com/        "Google"
          [yahoo]:  http://search.yahoo.com/  "Yahoo Search"
          [msn]:    http://search.msn.com/    "MSN Search"
        
        
        *single asterisks*
        
        _single underscores_
        
        **double asterisks**
        
        __double underscores__
        
        Use the \`printf()\` function.
        
        \`\`There is a literal backtick (\`) here.\`\`
        
        ![Alt text](https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg  "Optional title attribute")
        
        | abc | defghi |
        :-: | -----------:
        bar | baz
        
        *****
        
        | abc | def |
        | --- | --- |
        | bar |
        | bar | baz | boo |`;

        const expected = `<p>This is a sample paragraph.</p>
        <h1>This is an H1</h1>
        <h2>This is an H2</h2>
        <h1>This is an H1</h1>
        <h2>This is an H2</h2>
        <h3>This is an H3</h3>
        <blockquote>
        <p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
        consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
        Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
        </blockquote>
        <blockquote>
        <h2>This is a header.</h2>
        <ol>
        <li>This is the first list item.</li>
        <li>This is the second list item.</li>
        </ol>
        </blockquote>
        <ul>
        <li>Red</li>
        <li>Green</li>
        <li>Blue</li>
        </ul>
        <ol>
        <li>Bird</li>
        <li>McHale</li>
        <li>Parish</li>
        </ol>
        <ul>
        <li>
        <p>Bird</p>
        </li>
        <li>
        <p>Magic</p>
        </li>
        <li>
        <p>This is a list item with two paragraphs.</p>
        <p>This is the second paragraph in the list item. You're
        only required to indent the first line. Lorem ipsum dolor
        sit amet, consectetuer adipiscing elit.</p>
        </li>
        <li>
        <p>Another item in the same list.</p>
        </li>
        </ul>
        <p>Here is an example of AppleScript:</p>
        <pre><code>tell application "Foo"
            beep
        end tell
        </code></pre>
        <hr>
        <pre><code>&lt;div class="footer"&gt;
            &amp;copy; 2004 Foo Corporation
        &lt;/div&gt;
        </code></pre>
        <p>This is <a href="http://example.com/">an example</a> inline link.</p>
        <p><a href="http://example.net/">This link</a> has no title attribute.</p>
        <p>I get 10 times more traffic from <a href="http://google.com/">Google</a> than from
        <a href="http://search.yahoo.com/">Yahoo</a> or <a href="http://search.msn.com/">MSN</a>.</p>
        <p><em>single asterisks</em></p>
        <p><em>single underscores</em></p>
        <p><strong>double asterisks</strong></p>
        <p><strong>double underscores</strong></p>
        <p>Use the <code>printf()</code> function.</p>
        <p><code>There is a literal backtick (\`) here.</code></p>
        <p><img src="https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg" alt="Alt text"></p>
        <table><thead><tr><th>abc</th><th>defghi</th></tr></thead><tbody><tr><td>bar</td><td>baz</td></tr></tbody></table>
        <hr>
        <table><thead><tr><th>abc</th><th>def</th></tr></thead><tbody><tr><td>bar</td><td></td></tr><tr><td>bar</td><td>baz</td></tr></tbody></table>`

        const output = markdownService.processMarkdown(input);

        expect(output).to.equals(expected);
    });

    it("HTML input processing", async () => {
        const markdownService = new MarkdownService();

        const input = `<h1 title="this is omitted">This is an H1</h1>
        <p>This is a paragraph</p>
        <ul>
        <li>Red</li>
        <li>Green</li>
        <li>Blue</li>
        </ul>
        <blockquote>
                <h2>This is a header.</h2>
                <ol>
                <li>This is the first list item.</li>
                <li>This is the second list item.</li>
                </ol>
        </blockquote>
        <code>there is some function()</code><br>
        <a href="https://www.microsoft.com" target="_blank">This is a sample link</a>
        <hr>
        <img src="https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg" alt="Girl in a jacket" width="300" height="400">
        <div role="table" class="table-preset table-preset-schema">
            <div class="d-contents" role="rowgroup">
                <div class="d-contents" role="row">
                    <div role="cell" class="table-preset-head text-truncate">Input Field</div>
                    <div role="cell" class="table-preset-head text-truncate">Input Value</div>
                    <div role="cell" class="table-preset-head text-truncate">Status</div>
                    <div role="cell" class="table-preset-head">User Friendly Message</div>
                </div>
                <div class="d-contents" role="row">
                    <div role="cell">username</div>
                    <div role="cell" style="font-style: italic;">{blank}</div>
                    <div role="cell">91</div>
                    <div role="cell">There is no account specified for the username and password</div>
                </div>
                <div class="d-contents" role="row">
                    <div role="cell">md5Hash</div>
                    <div role="cell" style="font-style: italic;">{blank}</div>
                    <div role="cell">92</div>
                    <div role="cell">The MD5 hash supplied was invalid</div>
                </div>
                <div class="d-contents" role="row">
                    <div role="cell">scheduleFor</div>
                    <div role="cell" style="font-style: italic;">{blank}</div>
                    <div role="cell">94</div>
                    <div role="cell">The ScheduleFor DateTime is invalid</div>
                </div>
            </div>
        </div>`;

        const expected = `<h1>This is an H1</h1>
        <p>This is a paragraph</p>
        <ul>
        <li>Red</li>
        <li>Green</li>
        <li>Blue</li>
        </ul>
        <blockquote>
                <h2>This is a header.</h2>
                <ol>
                <li>This is the first list item.</li>
                <li>This is the second list item.</li>
                </ol>
        </blockquote>
        <code>there is some function()</code><br>
        <a href="https://www.microsoft.com" target="_blank">This is a sample link</a>
        <hr>
        <img src="https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg" alt="Girl in a jacket" width="300" height="400">
        <div role="table" class="table-preset table-preset-schema">
            <div class="d-contents" role="rowgroup">
                <div class="d-contents" role="row">
                    <div role="cell" class="table-preset-head text-truncate">Input Field</div>
                    <div role="cell" class="table-preset-head text-truncate">Input Value</div>
                    <div role="cell" class="table-preset-head text-truncate">Status</div>
                    <div role="cell" class="table-preset-head">User Friendly Message</div>
                </div>
                <div class="d-contents" role="row">
                    <div role="cell">username</div>
                    <div role="cell" style="font-style: italic;">{blank}</div>
                    <div role="cell">91</div>
                    <div role="cell">There is no account specified for the username and password</div>
                </div>
                <div class="d-contents" role="row">
                    <div role="cell">md5Hash</div>
                    <div role="cell" style="font-style: italic;">{blank}</div>
                    <div role="cell">92</div>
                    <div role="cell">The MD5 hash supplied was invalid</div>
                </div>
                <div class="d-contents" role="row">
                    <div role="cell">scheduleFor</div>
                    <div role="cell" style="font-style: italic;">{blank}</div>
                    <div role="cell">94</div>
                    <div role="cell">The ScheduleFor DateTime is invalid</div>
                </div>
            </div>
        </div>`;

        const output = markdownService.processMarkdown(input);

        expect(output).to.equals(expected);
    });
});
