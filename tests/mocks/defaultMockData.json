{
    "/config.json": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=UTF-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "environment": "runtime",
            "managementApiUrl": "https://contoso.management.azure-api.net",
            "backendUrl": "https://contoso.developer.azure-api.net"
        }
    },
    "/config-apim.json": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=UTF-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "aad": {
                "clientId": "e87c98aa-6f4b-4a72-95d0-fc830a64ee06",
                "authority": "login.microsoftonline.com"
            }
        }
    },
    "/auth-servers.json": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=UTF-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": [
            {
                "name": "test",
                "displayName": "test",
                "description": "test",
                "clientId": "00000000-0000-0000-0000-000000000000",
                "authorizationEndpoint": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
                "tokenEndpoint": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
                "scopes": [
                    "api://00000000-0000-0000-0000-000000000000/blabla2"
                ],
                "grantTypes": [
                    "authorization_code"
                ]
            }
        ]
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api",
                    "type": "Microsoft.ApiManagement/service/apis",
                    "name": "echo-api",
                    "properties": {
                        "displayName": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": [
                            "https"
                        ],
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                },
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/http-bin",
                    "type": "Microsoft.ApiManagement/service/apis",
                    "name": "http-bin",
                    "properties": {
                        "displayName": "Http Bin",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "https://demo.saleor.io/graphql/",
                        "path": "graphql",
                        "protocols": [
                            "http",
                            "https"
                        ],
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "type": "graphql",
                        "isCurrent": true
                    }
                },
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/test",
                    "type": "Microsoft.ApiManagement/service/apis",
                    "name": "test",
                    "properties": {
                        "displayName": "test",
                        "apiRevision": "1",
                        "description": "",
                        "subscriptionRequired": true,
                        "serviceUrl": "ws://www.example.com/test",
                        "path": "",
                        "protocols": [
                            "ws",
                            "wss"
                        ],
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "type": "websocket",
                        "isCurrent": true
                    }
                }
            ],
            "count": 3
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/tags": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [],
            "count": 0
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "echo-api",
            "properties": {
                "displayName": "Echo API",
                "apiRevision": "1",
                "description": null,
                "subscriptionRequired": true,
                "serviceUrl": "http://echoapi.cloudapp.net/api",
                "path": "echo",
                "protocols": [
                    "https"
                ],
                "authenticationSettings": {
                    "oAuth2": {
                        "authorizationServerId": "test",
                        "scope": null
                    },
                    "openid": null
                },
                "subscriptionKeyParameterNames": {
                    "header": "Ocp-Apim-Subscription-Key",
                    "query": "subscription-key"
                },
                "isCurrent": true
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apisByTags": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "tag": {
                        "id": "/tags/test",
                        "name": "test"
                    },
                    "api": {
                        "id": "/apis/echo-api",
                        "name": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": null,
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                },
                {
                    "tag": {
                        "id": "/tags/test10",
                        "name": "test10"
                    },
                    "api": {
                        "id": "/apis/echo-api",
                        "name": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": null,
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                },
                {
                    "tag": {
                        "id": "/tags/test11",
                        "name": "test11"
                    },
                    "api": {
                        "id": "/apis/echo-api",
                        "name": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": null,
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                },
                {
                    "tag": {
                        "id": "/tags/test12",
                        "name": "test12"
                    },
                    "api": {
                        "id": "/apis/echo-api",
                        "name": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": null,
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                },
                {
                    "tag": {
                        "id": "/tags/test2",
                        "name": "test2"
                    },
                    "api": {
                        "id": "/apis/echo-api",
                        "name": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": null,
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                },
                {
                    "tag": {
                        "id": "/tags/test3",
                        "name": "test3"
                    },
                    "api": {
                        "id": "/apis/echo-api",
                        "name": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": null,
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                },
                {
                    "tag": {
                        "id": "/tags/test4",
                        "name": "test4"
                    },
                    "api": {
                        "id": "/apis/echo-api",
                        "name": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": null,
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                },
                {
                    "tag": {
                        "id": "/tags/test5",
                        "name": "test5"
                    },
                    "api": {
                        "id": "/apis/echo-api",
                        "name": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": null,
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                },
                {
                    "tag": {
                        "id": "/tags/test6",
                        "name": "test6"
                    },
                    "api": {
                        "id": "/apis/echo-api",
                        "name": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": null,
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                },
                {
                    "tag": {
                        "id": "/tags/test7",
                        "name": "test7"
                    },
                    "api": {
                        "id": "/apis/echo-api",
                        "name": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": null,
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                },
                {
                    "tag": {
                        "id": "/tags/test8",
                        "name": "test8"
                    },
                    "api": {
                        "id": "/apis/echo-api",
                        "name": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": null,
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                },
                {
                    "tag": {
                        "id": "/tags/test9",
                        "name": "test9"
                    },
                    "api": {
                        "id": "/apis/echo-api",
                        "name": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": null,
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                },
                {
                    "api": {
                        "id": "/apis/http-bin",
                        "name": "Http Bin",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "https://demo.saleor.io/graphql/",
                        "path": "graphql",
                        "protocols": null,
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "type": "graphql",
                        "isCurrent": true
                    }
                },
                {
                    "api": {
                        "id": "/apis/test",
                        "name": "test",
                        "apiRevision": "1",
                        "description": "",
                        "subscriptionRequired": true,
                        "serviceUrl": "ws://www.example.com/test",
                        "path": "",
                        "protocols": null,
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "type": "websocket",
                        "isCurrent": true
                    }
                }
            ],
            "count": 14,
            "nextLink": null
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/hostnames": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "contoso_azure-api_net",
                    "type": "Microsoft.ApiManagement/service/apis/hostnames",
                    "name": "contoso_azure-api_net",
                    "properties": {
                        "value": "contoso.azure-api.net"
                    }
                }
            ],
            "count": 1
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/create-resource",
                    "type": "Microsoft.ApiManagement/service/apis/operations",
                    "name": "create-resource",
                    "properties": {
                        "displayName": "Create resource",
                        "method": "POST",
                        "urlTemplate": "/resource",
                        "templateParameters": [],
                        "description": "A demonstration of a POST call based on the echo backend above. The request body is expected to contain JSON-formatted data (see example below). A policy is used to automatically transform any request sent in JSON directly to XML. In a real-world scenario this could be used to enable modern clients to speak to a legacy backend.",
                        "request": {
                            "queryParameters": [],
                            "headers": [],
                            "representations": [
                                {
                                    "contentType": "application/json",
                                    "examples": {
                                        "default": {
                                            "value": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}"
                                        }
                                    },
                                    "generatedSample": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}",
                                    "sample": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}"
                                }
                            ]
                        },
                        "responses": [
                            {
                                "statusCode": 200,
                                "description": "",
                                "representations": [],
                                "headers": []
                            }
                        ],
                        "policies": null
                    }
                },
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/modify-resource",
                    "type": "Microsoft.ApiManagement/service/apis/operations",
                    "name": "modify-resource",
                    "properties": {
                        "displayName": "Modify Resource",
                        "method": "PUT",
                        "urlTemplate": "/resource",
                        "templateParameters": [],
                        "description": "A demonstration of a PUT call handled by the same \"echo\" backend as above. You can now specify a request body in addition to headers and it will be returned as well.",
                        "responses": [
                            {
                                "statusCode": 200,
                                "representations": [],
                                "headers": []
                            }
                        ],
                        "policies": null
                    }
                },
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/remove-resource",
                    "type": "Microsoft.ApiManagement/service/apis/operations",
                    "name": "remove-resource",
                    "properties": {
                        "displayName": "Remove resource",
                        "method": "DELETE",
                        "urlTemplate": "/resource",
                        "templateParameters": [],
                        "description": "A demonstration of a DELETE call which traditionally deletes the resource. It is based on the same \"echo\" backend as in all other operations so nothing is actually deleted.",
                        "responses": [
                            {
                                "statusCode": 200,
                                "representations": [],
                                "headers": []
                            }
                        ],
                        "policies": null
                    }
                },
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/retrieve-header-only",
                    "type": "Microsoft.ApiManagement/service/apis/operations",
                    "name": "retrieve-header-only",
                    "properties": {
                        "displayName": "Retrieve header only",
                        "method": "HEAD",
                        "urlTemplate": "/resource",
                        "templateParameters": [],
                        "description": "The HEAD operation returns only headers. In this demonstration a policy is used to set additional headers when the response is returned and to enable JSONP.",
                        "responses": [
                            {
                                "statusCode": 200,
                                "representations": [],
                                "headers": []
                            }
                        ],
                        "policies": null
                    }
                },
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/retrieve-resource",
                    "type": "Microsoft.ApiManagement/service/apis/operations",
                    "name": "retrieve-resource",
                    "properties": {
                        "displayName": "Retrieve resource",
                        "method": "GET",
                        "urlTemplate": "/resource",
                        "templateParameters": [],
                        "description": "A demonstration of a GET call on a sample resource. It is handled by an \"echo\" backend which returns a response equal to the request (the supplied headers and body are being returned as received).",
                        "request": {
                            "queryParameters": [
                                {
                                    "name": "param1",
                                    "description": "A sample parameter that is required and has a default value of \"sample\".",
                                    "type": "string",
                                    "defaultValue": "sample",
                                    "required": true,
                                    "values": [
                                        "sample"
                                    ]
                                },
                                {
                                    "name": "param2",
                                    "description": "Another sample parameter, set to not required.",
                                    "type": "number",
                                    "values": []
                                }
                            ],
                            "headers": [],
                            "representations": []
                        },
                        "responses": [
                            {
                                "statusCode": 200,
                                "description": "Returned in all cases.",
                                "representations": [
                                    {
                                        "contentType": "application/json",
                                        "examples": {
                                            "default": {
                                                "value": {
                                                    "a": "a"
                                                }
                                            }
                                        },
                                        "generatedSample": "{\r\n  \"a\": \"a\"\r\n}",
                                        "sample": "{\r\n  \"a\": \"a\"\r\n}"
                                    }
                                ],
                                "headers": []
                            }
                        ],
                        "policies": null
                    }
                },
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/retrieve-resource-cached",
                    "type": "Microsoft.ApiManagement/service/apis/operations",
                    "name": "retrieve-resource-cached",
                    "properties": {
                        "displayName": "Retrieve resource (cached)",
                        "method": "GET",
                        "urlTemplate": "/resource-cached",
                        "templateParameters": [],
                        "description": "A demonstration of a GET call with caching enabled on the same \"echo\" backend as above. Cache TTL is set to 1 hour. When you make the first request the headers you supplied will be cached. Subsequent calls will return the same headers as the first time even if you change them in your request.",
                        "request": {
                            "queryParameters": [
                                {
                                    "name": "param1",
                                    "description": "A sample parameter that is required and has a default value of \"sample\".",
                                    "type": "string",
                                    "defaultValue": "sample",
                                    "required": true,
                                    "values": [
                                        "sample"
                                    ]
                                },
                                {
                                    "name": "param2",
                                    "description": "Another sample parameter, set to not required.",
                                    "type": "string",
                                    "values": []
                                }
                            ],
                            "headers": [],
                            "representations": []
                        },
                        "responses": [
                            {
                                "statusCode": 200,
                                "representations": [],
                                "headers": []
                            }
                        ],
                        "policies": null
                    }
                }
            ],
            "count": 6
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/create-resource": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/create-resource",
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "name": "create-resource",
            "properties": {
                "displayName": "Create resource",
                "method": "POST",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a POST call based on the echo backend above. The request body is expected to contain JSON-formatted data (see example below). A policy is used to automatically transform any request sent in JSON directly to XML. In a real-world scenario this could be used to enable modern clients to speak to a legacy backend.",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": [
                        {
                            "contentType": "application/json",
                            "examples": {
                                "default": {
                                    "value": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}"
                                }
                            },
                            "generatedSample": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}",
                            "sample": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}"
                        }
                    ]
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "",
                        "representations": [],
                        "headers": []
                    }
                ],
                "policies": null
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/create-resource/tags": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [],
            "count": 0
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/releases": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [],
            "count": 0
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/products": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/products/starter",
                    "type": "Microsoft.ApiManagement/service/apis/products",
                    "name": "starter",
                    "properties": {
                        "displayName": "Starter",
                        "description": "Subscribers will be able to run 5 calls/minute up to a maximum of 100 calls/week.",
                        "terms": "",
                        "subscriptionRequired": true,
                        "approvalRequired": false,
                        "subscriptionsLimit": 1,
                        "state": "published"
                    }
                },
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/products/unlimited",
                    "type": "Microsoft.ApiManagement/service/apis/products",
                    "name": "unlimited",
                    "properties": {
                        "displayName": "Unlimited",
                        "description": "Subscribers have completely unlimited access to the API. Administrator approval is required.",
                        "terms": null,
                        "subscriptionRequired": true,
                        "approvalRequired": true,
                        "subscriptionsLimit": 1,
                        "state": "published"
                    }
                }
            ],
            "count": 2
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999/subscriptions": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999/subscriptions/61fd37461359a02500aad62f",
                    "type": "Microsoft.ApiManagement/service/users/subscriptions",
                    "name": "61fd37461359a02500aad62f",
                    "properties": {
                        "ownerId": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999",
                        "scope": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/products/unlimited",
                        "displayName": "test",
                        "state": "submitted",
                        "createdDate": "2022-02-04T14:25:11.157Z",
                        "startDate": null,
                        "expirationDate": null,
                        "endDate": null,
                        "notificationDate": null,
                        "stateComment": null
                    }
                }
            ],
            "count": 1
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999/subscriptions/61fd37461359a02500aad62f/listSecrets": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "primaryKey": "primary-test",
            "secondaryKey": "secondary-test"
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/modify-resource": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/modify-resource",
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "name": "modify-resource",
            "properties": {
                "displayName": "Modify Resource",
                "method": "PUT",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a PUT call handled by the same \"echo\" backend as above. You can now specify a request body in addition to headers and it will be returned as well.",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ],
                "policies": null
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/modify-resource/tags": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [],
            "count": 0
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/remove-resource": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/remove-resource",
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "name": "remove-resource",
            "properties": {
                "displayName": "Remove resource",
                "method": "DELETE",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a DELETE call which traditionally deletes the resource. It is based on the same \"echo\" backend as in all other operations so nothing is actually deleted.",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ],
                "policies": null
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/remove-resource/tags": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [],
            "count": 0
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/retrieve-header-only": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/retrieve-header-only",
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "name": "retrieve-header-only",
            "properties": {
                "displayName": "Retrieve header only",
                "method": "HEAD",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "The HEAD operation returns only headers. In this demonstration a policy is used to set additional headers when the response is returned and to enable JSONP.",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ],
                "policies": null
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/retrieve-header-only/tags": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [],
            "count": 0
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/retrieve-resource": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/retrieve-resource",
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "name": "retrieve-resource",
            "properties": {
                "displayName": "Retrieve resource",
                "method": "GET",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a GET call on a sample resource. It is handled by an \"echo\" backend which returns a response equal to the request (the supplied headers and body are being returned as received).",
                "request": {
                    "queryParameters": [
                        {
                            "name": "param1",
                            "description": "A sample parameter that is required and has a default value of \"sample\".",
                            "type": "string",
                            "defaultValue": "sample",
                            "required": true,
                            "values": [
                                "sample"
                            ]
                        },
                        {
                            "name": "param2",
                            "description": "Another sample parameter, set to not required.",
                            "type": "number",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "Returned in all cases.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "examples": {
                                    "default": {
                                        "value": {
                                            "a": "a"
                                        }
                                    }
                                },
                                "generatedSample": "{\r\n  \"a\": \"a\"\r\n}",
                                "sample": "{\r\n  \"a\": \"a\"\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ],
                "policies": null
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/retrieve-resource/tags": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [],
            "count": 0
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/retrieve-resource-cached": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/retrieve-resource-cached",
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "name": "retrieve-resource-cached",
            "properties": {
                "displayName": "Retrieve resource (cached)",
                "method": "GET",
                "urlTemplate": "/resource-cached",
                "templateParameters": [],
                "description": "A demonstration of a GET call with caching enabled on the same \"echo\" backend as above. Cache TTL is set to 1 hour. When you make the first request the headers you supplied will be cached. Subsequent calls will return the same headers as the first time even if you change them in your request.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "param1",
                            "description": "A sample parameter that is required and has a default value of \"sample\".",
                            "type": "string",
                            "defaultValue": "sample",
                            "required": true,
                            "values": [
                                "sample"
                            ]
                        },
                        {
                            "name": "param2",
                            "description": "Another sample parameter, set to not required.",
                            "type": "string",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ],
                "policies": null
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operations/retrieve-resource-cached/tags": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [],
            "count": 0
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/http-bin": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/http-bin",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "http-bin",
            "properties": {
                "displayName": "Http Bin",
                "apiRevision": "1",
                "description": null,
                "subscriptionRequired": true,
                "serviceUrl": "https://demo.saleor.io/graphql/",
                "path": "graphql",
                "protocols": [
                    "http",
                    "https"
                ],
                "authenticationSettings": {
                    "oAuth2": null,
                    "openid": null
                },
                "subscriptionKeyParameterNames": {
                    "header": "Ocp-Apim-Subscription-Key",
                    "query": "subscription-key"
                },
                "type": "graphql",
                "isCurrent": true
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/http-bin/operations": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [],
            "count": 0
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/http-bin/hostnames": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "contoso_azure-api_net",
                    "type": "Microsoft.ApiManagement/service/apis/hostnames",
                    "name": "contoso_azure-api_net",
                    "properties": {
                        "value": "contoso.azure-api.net"
                    }
                }
            ],
            "count": 1
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/http-bin/schemas": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/http-bin/schemas/graphql",
                    "type": "Microsoft.ApiManagement/service/apis/schemas",
                    "name": "graphql",
                    "properties": {
                        "contentType": "application/vnd.ms-azure-apim.graphql.schema",
                        "document": {
                            "value": "schema {\r\n  query: Query\r\n  mutation: Mutation\r\n}\r\n\r\n# Create a new address for the customer.\r\ntype AccountAddressCreate {\r\n  # A user instance for which the address was created.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  address: Address\r\n}\r\n\r\n# Delete an address of the logged-in user.\r\ntype AccountAddressDelete {\r\n  # A user instance for which the address was deleted.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  address: Address\r\n}\r\n\r\n# Updates an address of the logged-in user.\r\ntype AccountAddressUpdate {\r\n  # A user object for which the address was edited.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  address: Address\r\n}\r\n\r\n# Remove user account.\r\ntype AccountDelete {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  user: User\r\n}\r\n\r\ntype AccountError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: AccountErrorCode!\r\n  # A type of address that causes the error.\r\n  addressType: AddressTypeEnum\r\n}\r\n\r\n# An enumeration.\r\nenum AccountErrorCode {\r\n  ACTIVATE_OWN_ACCOUNT\r\n  ACTIVATE_SUPERUSER_ACCOUNT\r\n  DUPLICATED_INPUT_ITEM\r\n  DEACTIVATE_OWN_ACCOUNT\r\n  DEACTIVATE_SUPERUSER_ACCOUNT\r\n  DELETE_NON_STAFF_USER\r\n  DELETE_OWN_ACCOUNT\r\n  DELETE_STAFF_ACCOUNT\r\n  DELETE_SUPERUSER_ACCOUNT\r\n  GRAPHQL_ERROR\r\n  INACTIVE\r\n  INVALID\r\n  INVALID_PASSWORD\r\n  LEFT_NOT_MANAGEABLE_PERMISSION\r\n  INVALID_CREDENTIALS\r\n  NOT_FOUND\r\n  OUT_OF_SCOPE_USER\r\n  OUT_OF_SCOPE_GROUP\r\n  OUT_OF_SCOPE_PERMISSION\r\n  PASSWORD_ENTIRELY_NUMERIC\r\n  PASSWORD_TOO_COMMON\r\n  PASSWORD_TOO_SHORT\r\n  PASSWORD_TOO_SIMILAR\r\n  REQUIRED\r\n  UNIQUE\r\n  JWT_SIGNATURE_EXPIRED\r\n  JWT_INVALID_TOKEN\r\n  JWT_DECODE_ERROR\r\n  JWT_MISSING_TOKEN\r\n  JWT_INVALID_CSRF_TOKEN\r\n  CHANNEL_INACTIVE\r\n  MISSING_CHANNEL_SLUG\r\n}\r\n\r\ninput AccountInput {\r\n  # Given name.\r\n  firstName: String\r\n  # Family name.\r\n  lastName: String\r\n  # Billing address of the customer.\r\n  defaultBillingAddress: AddressInput\r\n  # Shipping address of the customer.\r\n  defaultShippingAddress: AddressInput\r\n  # User language code.\r\n  languageCode: LanguageCodeEnum\r\n}\r\n\r\n# Register a new user.\r\ntype AccountRegister {\r\n  # Informs whether users need to confirm their email address.\r\n  requiresConfirmation: Boolean\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  user: User\r\n}\r\n\r\ninput AccountRegisterInput {\r\n  # The email address of the user.\r\n  email: String!\r\n  # Password.\r\n  password: String!\r\n  # Base of frontend URL that will be needed to create confirmation URL.\r\n  redirectUrl: String\r\n  # User language code.\r\n  languageCode: LanguageCodeEnum\r\n  # User public metadata.\r\n  metadata: [MetadataInput!]\r\n  # Slug of a channel which will be used to notify users. Optional when only one channel exists.\r\n  channel: String\r\n}\r\n\r\n# Sends an email with the account removal link for the logged-in user.\r\ntype AccountRequestDeletion {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Sets a default address for the authenticated user.\r\ntype AccountSetDefaultAddress {\r\n  # An updated user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Updates the account of the logged-in user.\r\ntype AccountUpdate {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  user: User\r\n}\r\n\r\n# Represents user address data.\r\ntype Address implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  firstName: String!\r\n  lastName: String!\r\n  companyName: String!\r\n  streetAddress1: String!\r\n  streetAddress2: String!\r\n  city: String!\r\n  cityArea: String!\r\n  postalCode: String!\r\n  # Shop's default country.\r\n  country: CountryDisplay!\r\n  countryArea: String!\r\n  phone: String\r\n  # Address is user's default shipping address.\r\n  isDefaultShippingAddress: Boolean\r\n  # Address is user's default billing address.\r\n  isDefaultBillingAddress: Boolean\r\n}\r\n\r\n# Creates user address.\r\ntype AddressCreate {\r\n  # A user instance for which the address was created.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  address: Address\r\n}\r\n\r\n# Deletes an address.\r\ntype AddressDelete {\r\n  # A user instance for which the address was deleted.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  address: Address\r\n}\r\n\r\ninput AddressInput {\r\n  # Given name.\r\n  firstName: String\r\n  # Family name.\r\n  lastName: String\r\n  # Company or organization.\r\n  companyName: String\r\n  # Address.\r\n  streetAddress1: String\r\n  # Address.\r\n  streetAddress2: String\r\n  # City.\r\n  city: String\r\n  # District.\r\n  cityArea: String\r\n  # Postal code.\r\n  postalCode: String\r\n  # Country.\r\n  country: CountryCode\r\n  # State or province.\r\n  countryArea: String\r\n  # Phone number.\r\n  phone: String\r\n}\r\n\r\n# Sets a default address for the given user.\r\ntype AddressSetDefault {\r\n  # An updated user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum AddressTypeEnum {\r\n  BILLING\r\n  SHIPPING\r\n}\r\n\r\n# Updates an address.\r\ntype AddressUpdate {\r\n  # A user object for which the address was edited.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  address: Address\r\n}\r\n\r\ntype AddressValidationData {\r\n  countryCode: String\r\n  countryName: String\r\n  addressFormat: String\r\n  addressLatinFormat: String\r\n  allowedFields: [String]\r\n  requiredFields: [String]\r\n  upperFields: [String]\r\n  countryAreaType: String\r\n  countryAreaChoices: [ChoiceValue]\r\n  cityType: String\r\n  cityChoices: [ChoiceValue]\r\n  cityAreaType: String\r\n  cityAreaChoices: [ChoiceValue]\r\n  postalCodeType: String\r\n  postalCodeMatchers: [String]\r\n  postalCodeExamples: [String]\r\n  postalCodePrefix: String\r\n}\r\n\r\n# Represents allocation.\r\ntype Allocation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Quantity allocated for orders.\r\n  quantity: Int!\r\n  # The warehouse were items were allocated.\r\n  warehouse: Warehouse!\r\n}\r\n\r\n# Represents app data.\r\ntype App implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Name of the app.\r\n  name: String\r\n  # The date and time when the app was created.\r\n  created: DateTime\r\n  # Determine if app will be set active or not.\r\n  isActive: Boolean\r\n  # List of the app's permissions.\r\n  permissions: [Permission]\r\n  # Last 4 characters of the tokens.\r\n  tokens: [AppToken]\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Type of the app.\r\n  type: AppTypeEnum\r\n  # List of webhooks assigned to this app.\r\n  webhooks: [Webhook]\r\n  # Description of this app.\r\n  aboutApp: String\r\n  # Description of the data privacy defined for this app.\r\n  dataPrivacy: String\r\n  # Url to details about the privacy policy on the app owner page.\r\n  dataPrivacyUrl: String\r\n  # Homepage of the app.\r\n  homepageUrl: String\r\n  # Support page for the app.\r\n  supportUrl: String\r\n  # Url to iframe with the configuration for the app.\r\n  configurationUrl: String\r\n  # Url to iframe with the app.\r\n  appUrl: String\r\n  # Version number of the app.\r\n  version: String\r\n  # JWT token used to authenticate by thridparty app.\r\n  accessToken: String\r\n}\r\n\r\n# Activate the app.\r\ntype AppActivate {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  app: App\r\n}\r\n\r\ntype AppCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [AppCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype AppCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: App!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new app.\r\ntype AppCreate {\r\n  # The newly created authentication token.\r\n  authToken: String\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  app: App\r\n}\r\n\r\n# Deactivate the app.\r\ntype AppDeactivate {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  app: App\r\n}\r\n\r\n# Deletes an app.\r\ntype AppDelete {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  app: App\r\n}\r\n\r\n# Delete failed installation.\r\ntype AppDeleteFailedInstallation {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  appInstallation: AppInstallation\r\n}\r\n\r\ntype AppError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: AppErrorCode!\r\n  # List of permissions which causes the error.\r\n  permissions: [PermissionEnum!]\r\n}\r\n\r\n# An enumeration.\r\nenum AppErrorCode {\r\n  FORBIDDEN\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  INVALID_STATUS\r\n  INVALID_PERMISSION\r\n  INVALID_URL_FORMAT\r\n  INVALID_MANIFEST_FORMAT\r\n  MANIFEST_URL_CANT_CONNECT\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  OUT_OF_SCOPE_APP\r\n  OUT_OF_SCOPE_PERMISSION\r\n}\r\n\r\n# Fetch and validate manifest.\r\ntype AppFetchManifest {\r\n  manifest: Manifest\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n}\r\n\r\ninput AppFilterInput {\r\n  search: String\r\n  isActive: Boolean\r\n  type: AppTypeEnum\r\n}\r\n\r\ninput AppInput {\r\n  # Name of the app.\r\n  name: String\r\n  # List of permission code names to assign to this app.\r\n  permissions: [PermissionEnum]\r\n}\r\n\r\n# Install new app by using app manifest.\r\ntype AppInstall {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  appInstallation: AppInstallation\r\n}\r\n\r\ninput AppInstallInput {\r\n  # Name of the app to install.\r\n  appName: String\r\n  # Url to app's manifest in JSON format.\r\n  manifestUrl: String\r\n  # Determine if app will be set active or not.\r\n  activateAfterInstallation: Boolean = true\r\n  # List of permission code names to assign to this app.\r\n  permissions: [PermissionEnum]\r\n}\r\n\r\n# Represents ongoing installation of app.\r\ntype AppInstallation implements Node & Job {\r\n  appName: String!\r\n  manifestUrl: String!\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Job status.\r\n  status: JobStatusEnum!\r\n  # Created date time of job in ISO 8601 format.\r\n  createdAt: DateTime!\r\n  # Date time of job last update in ISO 8601 format.\r\n  updatedAt: DateTime!\r\n  # Job message.\r\n  message: String\r\n}\r\n\r\n# Retry failed installation of new app.\r\ntype AppRetryInstall {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  appInstallation: AppInstallation\r\n}\r\n\r\nenum AppSortField {\r\n  # Sort apps by name.\r\n  NAME\r\n  # Sort apps by creation date.\r\n  CREATION_DATE\r\n}\r\n\r\ninput AppSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort apps by the selected field.\r\n  field: AppSortField!\r\n}\r\n\r\n# Represents token data.\r\ntype AppToken implements Node {\r\n  # Name of the authenticated token.\r\n  name: String\r\n  # Last 4 characters of the token.\r\n  authToken: String\r\n  # The ID of the object.\r\n  id: ID!\r\n}\r\n\r\n# Creates a new token.\r\ntype AppTokenCreate {\r\n  # The newly created authentication token.\r\n  authToken: String\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  appToken: AppToken\r\n}\r\n\r\n# Deletes an authentication token assigned to app.\r\ntype AppTokenDelete {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  appToken: AppToken\r\n}\r\n\r\ninput AppTokenInput {\r\n  # Name of the token.\r\n  name: String\r\n  # ID of app.\r\n  app: ID!\r\n}\r\n\r\n# Verify provided app token.\r\ntype AppTokenVerify {\r\n  # Determine if token is valid or not.\r\n  valid: Boolean!\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n}\r\n\r\n# Enum determining type of your App.\r\nenum AppTypeEnum {\r\n  # Local Saleor App. The app is fully manageable from dashboard. You can change assigned permissions, add webhooks, or authentication token\r\n  LOCAL\r\n  # Third party external App. Installation is fully automated. Saleor uses a defined App manifest to gather all required information.\r\n  THIRDPARTY\r\n}\r\n\r\n# Updates an existing app.\r\ntype AppUpdate {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  app: App\r\n}\r\n\r\n# An enumeration.\r\nenum AreaUnitsEnum {\r\n  SQ_CM\r\n  SQ_M\r\n  SQ_KM\r\n  SQ_FT\r\n  SQ_YD\r\n  SQ_INCH\r\n}\r\n\r\n# Assigns storefront's navigation menus.\r\ntype AssignNavigation {\r\n  # Assigned navigation menu.\r\n  menu: Menu\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n}\r\n\r\n# Custom attribute of a product. Attributes can be assigned to products and variants at the product type level.\r\ntype Attribute implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  productTypes(before: String, after: String, first: Int, last: Int): ProductTypeCountableConnection!\r\n  productVariantTypes(before: String, after: String, first: Int, last: Int): ProductTypeCountableConnection!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # The input type to use for entering attribute values in the dashboard.\r\n  inputType: AttributeInputTypeEnum\r\n  # The entity type which can be used as a reference.\r\n  entityType: AttributeEntityTypeEnum\r\n  # Name of an attribute displayed in the interface.\r\n  name: String\r\n  # Internal representation of an attribute name.\r\n  slug: String\r\n  # The attribute type.\r\n  type: AttributeTypeEnum\r\n  # The unit of attribute values.\r\n  unit: MeasurementUnitsEnum\r\n  # List of attribute's values.\r\n  choices(\r\n    # Sort attribute choices.\r\n    sortBy: AttributeChoicesSortingInput\r\n    # Filtering options for attribute choices.\r\n    filter: AttributeValueFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): AttributeValueCountableConnection\r\n  # Whether the attribute requires values to be passed or not.\r\n  valueRequired: Boolean!\r\n  # Whether the attribute should be visible or not in storefront.\r\n  visibleInStorefront: Boolean!\r\n  # Whether the attribute can be filtered in storefront.\r\n  filterableInStorefront: Boolean!\r\n  # Whether the attribute can be filtered in dashboard.\r\n  filterableInDashboard: Boolean!\r\n  # Whether the attribute can be displayed in the admin product list.\r\n  availableInGrid: Boolean!\r\n  # Returns translated attribute fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for attribute.\r\n    languageCode: LanguageCodeEnum!\r\n  ): AttributeTranslation\r\n  # The position of the attribute in the storefront navigation (0 by default).\r\n  storefrontSearchPosition: Int!\r\n  # Flag indicating that attribute has predefined choices.\r\n  withChoices: Boolean!\r\n}\r\n\r\n# Deletes attributes.\r\ntype AttributeBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n}\r\n\r\nenum AttributeChoicesSortField {\r\n  # Sort attribute choice by name.\r\n  NAME\r\n  # Sort attribute choice by slug.\r\n  SLUG\r\n}\r\n\r\ninput AttributeChoicesSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort attribute choices by the selected field.\r\n  field: AttributeChoicesSortField!\r\n}\r\n\r\ntype AttributeCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [AttributeCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype AttributeCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Attribute!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates an attribute.\r\ntype AttributeCreate {\r\n  attribute: Attribute\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n}\r\n\r\ninput AttributeCreateInput {\r\n  # The input type to use for entering attribute values in the dashboard.\r\n  inputType: AttributeInputTypeEnum\r\n  # The entity type which can be used as a reference.\r\n  entityType: AttributeEntityTypeEnum\r\n  # Name of an attribute displayed in the interface.\r\n  name: String!\r\n  # Internal representation of an attribute name.\r\n  slug: String\r\n  # The attribute type.\r\n  type: AttributeTypeEnum!\r\n  # The unit of attribute values.\r\n  unit: MeasurementUnitsEnum\r\n  # List of attribute's values.\r\n  values: [AttributeValueCreateInput]\r\n  # Whether the attribute requires values to be passed or not.\r\n  valueRequired: Boolean\r\n  # Whether the attribute is for variants only.\r\n  isVariantOnly: Boolean\r\n  # Whether the attribute should be visible or not in storefront.\r\n  visibleInStorefront: Boolean\r\n  # Whether the attribute can be filtered in storefront.\r\n  filterableInStorefront: Boolean\r\n  # Whether the attribute can be filtered in dashboard.\r\n  filterableInDashboard: Boolean\r\n  # The position of the attribute in the storefront navigation (0 by default).\r\n  storefrontSearchPosition: Int\r\n  # Whether the attribute can be displayed in the admin product list.\r\n  availableInGrid: Boolean\r\n}\r\n\r\n# Deletes an attribute.\r\ntype AttributeDelete {\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n  attribute: Attribute\r\n}\r\n\r\n# An enumeration.\r\nenum AttributeEntityTypeEnum {\r\n  PAGE\r\n  PRODUCT\r\n}\r\n\r\ntype AttributeError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: AttributeErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum AttributeErrorCode {\r\n  ALREADY_EXISTS\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\ninput AttributeFilterInput {\r\n  valueRequired: Boolean\r\n  isVariantOnly: Boolean\r\n  visibleInStorefront: Boolean\r\n  filterableInStorefront: Boolean\r\n  filterableInDashboard: Boolean\r\n  availableInGrid: Boolean\r\n  metadata: [MetadataFilter]\r\n  search: String\r\n  ids: [ID]\r\n  type: AttributeTypeEnum\r\n  inCollection: ID\r\n  inCategory: ID\r\n  # Specifies the channel by which the data should be filtered. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n}\r\n\r\ninput AttributeInput {\r\n  # Internal representation of an attribute name.\r\n  slug: String!\r\n  # Internal representation of a value (unique per attribute).\r\n  values: [String]\r\n  # The range that the returned values should be in.\r\n  valuesRange: IntRangeInput\r\n  # The date time range that the returned values should be in.\r\n  dateTime: DateTimeRangeInput\r\n  # The date range that the returned values should be in.\r\n  date: DateRangeInput\r\n  # The boolean value of the attribute.\r\n  boolean: Boolean\r\n}\r\n\r\n# An enumeration.\r\nenum AttributeInputTypeEnum {\r\n  DROPDOWN\r\n  MULTISELECT\r\n  FILE\r\n  REFERENCE\r\n  NUMERIC\r\n  RICH_TEXT\r\n  BOOLEAN\r\n  DATE\r\n  DATE_TIME\r\n}\r\n\r\n# Reorder the values of an attribute.\r\ntype AttributeReorderValues {\r\n  # Attribute from which values are reordered.\r\n  attribute: Attribute\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n}\r\n\r\nenum AttributeSortField {\r\n  # Sort attributes by name\r\n  NAME\r\n  # Sort attributes by slug\r\n  SLUG\r\n  # Sort attributes by the value required flag\r\n  VALUE_REQUIRED\r\n  # Sort attributes by the variant only flag\r\n  IS_VARIANT_ONLY\r\n  # Sort attributes by visibility in the storefront\r\n  VISIBLE_IN_STOREFRONT\r\n  # Sort attributes by the filterable in storefront flag\r\n  FILTERABLE_IN_STOREFRONT\r\n  # Sort attributes by the filterable in dashboard flag\r\n  FILTERABLE_IN_DASHBOARD\r\n  # Sort attributes by their position in storefront\r\n  STOREFRONT_SEARCH_POSITION\r\n  # Sort attributes based on whether they can be displayed or not in a product grid.\r\n  AVAILABLE_IN_GRID\r\n}\r\n\r\ninput AttributeSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort attributes by the selected field.\r\n  field: AttributeSortField!\r\n}\r\n\r\ntype AttributeTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # Returns translated attribute fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for attribute.\r\n    languageCode: LanguageCodeEnum!\r\n  ): AttributeTranslation\r\n  # Custom attribute of a product.\r\n  attribute: Attribute @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\n# Creates/updates translations for an attribute.\r\ntype AttributeTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  attribute: Attribute\r\n}\r\n\r\ntype AttributeTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\n# An enumeration.\r\nenum AttributeTypeEnum {\r\n  PRODUCT_TYPE\r\n  PAGE_TYPE\r\n}\r\n\r\n# Updates attribute.\r\ntype AttributeUpdate {\r\n  attribute: Attribute\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n}\r\n\r\ninput AttributeUpdateInput {\r\n  # Name of an attribute displayed in the interface.\r\n  name: String\r\n  # Internal representation of an attribute name.\r\n  slug: String\r\n  # The unit of attribute values.\r\n  unit: MeasurementUnitsEnum\r\n  # IDs of values to be removed from this attribute.\r\n  removeValues: [ID]\r\n  # New values to be created for this attribute.\r\n  addValues: [AttributeValueCreateInput]\r\n  # Whether the attribute requires values to be passed or not.\r\n  valueRequired: Boolean\r\n  # Whether the attribute is for variants only.\r\n  isVariantOnly: Boolean\r\n  # Whether the attribute should be visible or not in storefront.\r\n  visibleInStorefront: Boolean\r\n  # Whether the attribute can be filtered in storefront.\r\n  filterableInStorefront: Boolean\r\n  # Whether the attribute can be filtered in dashboard.\r\n  filterableInDashboard: Boolean\r\n  # The position of the attribute in the storefront navigation (0 by default).\r\n  storefrontSearchPosition: Int\r\n  # Whether the attribute can be displayed in the admin product list.\r\n  availableInGrid: Boolean\r\n}\r\n\r\n# Represents a value of an attribute.\r\ntype AttributeValue implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Name of a value displayed in the interface.\r\n  name: String\r\n  # Internal representation of a value (unique per attribute).\r\n  slug: String\r\n  # Represents the value of the attribute value.\r\n  value: String\r\n  # Returns translated attribute value fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for attribute value.\r\n    languageCode: LanguageCodeEnum!\r\n  ): AttributeValueTranslation\r\n  # The input type to use for entering attribute values in the dashboard.\r\n  inputType: AttributeInputTypeEnum\r\n  # The ID of the attribute reference.\r\n  reference: ID\r\n  # Represents file URL and content type (if attribute value is a file).\r\n  file: File\r\n  # Represents the text (JSON) of the attribute value.\r\n  richText: JSONString\r\n  # Represents the boolean value of the attribute value.\r\n  boolean: Boolean\r\n  # Represents the date value of the attribute value.\r\n  date: Date\r\n  # Represents the date time value of the attribute value.\r\n  dateTime: DateTime\r\n}\r\n\r\n# Deletes values of attributes.\r\ntype AttributeValueBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n}\r\n\r\ntype AttributeValueCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [AttributeValueCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype AttributeValueCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: AttributeValue!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a value for an attribute.\r\ntype AttributeValueCreate {\r\n  # The updated attribute.\r\n  attribute: Attribute\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n  attributeValue: AttributeValue\r\n}\r\n\r\ninput AttributeValueCreateInput {\r\n  # Name of a value displayed in the interface.\r\n  name: String!\r\n  # Represents the value of the attribute value.\r\n  value: String\r\n  # Represents the text (JSON) of the attribute value.\r\n  richText: JSONString\r\n}\r\n\r\n# Deletes a value of an attribute.\r\ntype AttributeValueDelete {\r\n  # The updated attribute.\r\n  attribute: Attribute\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n  attributeValue: AttributeValue\r\n}\r\n\r\ninput AttributeValueFilterInput {\r\n  search: String\r\n}\r\n\r\ninput AttributeValueInput {\r\n  # ID of the selected attribute.\r\n  id: ID\r\n  # The value or slug of an attribute to resolve. If the passed value is non-existent, it will be created.\r\n  values: [String!]\r\n  # URL of the file attribute. Every time, a new value is created.\r\n  file: String\r\n  # File content type.\r\n  contentType: String\r\n  # List of entity IDs that will be used as references.\r\n  references: [ID!]\r\n  # Text content in JSON format.\r\n  richText: JSONString\r\n  # Represents the boolean value of the attribute value.\r\n  boolean: Boolean\r\n  # Represents the date value of the attribute value.\r\n  date: Date\r\n  # Represents the date time value of the attribute value.\r\n  dateTime: DateTime\r\n}\r\n\r\ntype AttributeValueTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  richText: JSONString\r\n  # Returns translated attribute value fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for attribute value.\r\n    languageCode: LanguageCodeEnum!\r\n  ): AttributeValueTranslation\r\n  # Represents a value of an attribute.\r\n  attributeValue: AttributeValue @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\n# Creates/updates translations for an attribute value.\r\ntype AttributeValueTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  attributeValue: AttributeValue\r\n}\r\n\r\ntype AttributeValueTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  richText: JSONString\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\ninput AttributeValueTranslationInput {\r\n  name: String\r\n  richText: JSONString\r\n}\r\n\r\n# Updates value of an attribute.\r\ntype AttributeValueUpdate {\r\n  # The updated attribute.\r\n  attribute: Attribute\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n  attributeValue: AttributeValue\r\n}\r\n\r\ninput BulkAttributeValueInput {\r\n  # ID of the selected attribute.\r\n  id: ID\r\n  # The value or slug of an attribute to resolve. If the passed value is non-existent, it will be created.\r\n  values: [String!]\r\n  # The boolean value of an attribute to resolve. If the passed value is non-existent, it will be created.\r\n  boolean: Boolean\r\n}\r\n\r\ntype BulkProductError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ProductErrorCode!\r\n  # List of attributes IDs which causes the error.\r\n  attributes: [ID!]\r\n  # List of attribute values IDs which causes the error.\r\n  values: [ID!]\r\n  # Index of an input list item that caused the error.\r\n  index: Int\r\n  # List of warehouse IDs which causes the error.\r\n  warehouses: [ID!]\r\n  # List of channel IDs which causes the error.\r\n  channels: [ID!]\r\n}\r\n\r\ntype BulkStockError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ProductErrorCode!\r\n  # List of attributes IDs which causes the error.\r\n  attributes: [ID!]\r\n  # List of attribute values IDs which causes the error.\r\n  values: [ID!]\r\n  # Index of an input list item that caused the error.\r\n  index: Int\r\n}\r\n\r\ninput CatalogueInput {\r\n  # Products related to the discount.\r\n  products: [ID]\r\n  # Categories related to the discount.\r\n  categories: [ID]\r\n  # Collections related to the discount.\r\n  collections: [ID]\r\n}\r\n\r\n# Represents a single category of products. Categories allow to organize products in a tree-hierarchies which can be used for navigation in the storefront.\r\ntype Category implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String!\r\n  description: JSONString\r\n  slug: String!\r\n  parent: Category\r\n  level: Int!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Description of the category (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n  # List of ancestors of the category.\r\n  ancestors(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CategoryCountableConnection\r\n  # List of products in the category.\r\n  products(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductCountableConnection\r\n  # List of children of the category.\r\n  children(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CategoryCountableConnection\r\n  backgroundImage(\r\n    # Size of the image.\r\n    size: Int\r\n  ): Image\r\n  # Returns translated category fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for category.\r\n    languageCode: LanguageCodeEnum!\r\n  ): CategoryTranslation\r\n}\r\n\r\n# Deletes categories.\r\ntype CategoryBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\ntype CategoryCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [CategoryCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype CategoryCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Category!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new category.\r\ntype CategoryCreate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  category: Category\r\n}\r\n\r\n# Deletes a category.\r\ntype CategoryDelete {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  category: Category\r\n}\r\n\r\ninput CategoryFilterInput {\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n  ids: [ID]\r\n}\r\n\r\ninput CategoryInput {\r\n  # Category description (JSON).\r\n  description: JSONString\r\n  # Category name.\r\n  name: String\r\n  # Category slug.\r\n  slug: String\r\n  # Search engine optimization fields.\r\n  seo: SeoInput\r\n  # Background image file.\r\n  backgroundImage: Upload\r\n  # Alt text for a product media.\r\n  backgroundImageAlt: String\r\n}\r\n\r\nenum CategorySortField {\r\n  # Sort categories by name.\r\n  NAME\r\n  # Sort categories by product count.\r\n  PRODUCT_COUNT\r\n  # Sort categories by subcategory count.\r\n  SUBCATEGORY_COUNT\r\n}\r\n\r\ninput CategorySortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Specifies the channel in which to sort the data. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n  # Sort categories by the selected field.\r\n  field: CategorySortField!\r\n}\r\n\r\ntype CategoryTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String!\r\n  description: JSONString\r\n  # Description of the category (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n  # Returns translated category fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for category.\r\n    languageCode: LanguageCodeEnum!\r\n  ): CategoryTranslation\r\n  # Represents a single category of products.\r\n  category: Category @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\n# Creates/updates translations for a category.\r\ntype CategoryTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  category: Category\r\n}\r\n\r\ntype CategoryTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String\r\n  description: JSONString\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n  # Translated description of the product (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n}\r\n\r\n# Updates a category.\r\ntype CategoryUpdate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  category: Category\r\n}\r\n\r\n# Represents channel.\r\ntype Channel implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  isActive: Boolean!\r\n  slug: String!\r\n  currencyCode: String!\r\n  # Whether a channel has associated orders.\r\n  hasOrders: Boolean!\r\n  # Default country for the channel. Default country can be used in checkout to determine the stock quantities or calculate taxes when the country was not explicitly provided.\r\n  defaultCountry: CountryDisplay!\r\n}\r\n\r\n# Activate a channel.\r\ntype ChannelActivate {\r\n  # Activated channel.\r\n  channel: Channel\r\n  channelErrors: [ChannelError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ChannelError!]!\r\n}\r\n\r\n# Creates new channel.\r\ntype ChannelCreate {\r\n  channelErrors: [ChannelError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ChannelError!]!\r\n  channel: Channel\r\n}\r\n\r\ninput ChannelCreateInput {\r\n  # isActive flag.\r\n  isActive: Boolean\r\n  # Name of the channel.\r\n  name: String!\r\n  # Slug of the channel.\r\n  slug: String!\r\n  # Currency of the channel.\r\n  currencyCode: String!\r\n  # Default country for the channel. Default country can be used in checkout to determine the stock quantities or calculate taxes when the country was not explicitly provided.\r\n  defaultCountry: CountryCode!\r\n  # List of shipping zones to assign to the channel.\r\n  addShippingZones: [ID!]\r\n}\r\n\r\n# Deactivate a channel.\r\ntype ChannelDeactivate {\r\n  # Deactivated channel.\r\n  channel: Channel\r\n  channelErrors: [ChannelError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ChannelError!]!\r\n}\r\n\r\n# Delete a channel. Orders associated with the deleted channel will be moved to the target channel. Checkouts, product availability, and pricing will be removed.\r\ntype ChannelDelete {\r\n  channelErrors: [ChannelError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ChannelError!]!\r\n  channel: Channel\r\n}\r\n\r\ninput ChannelDeleteInput {\r\n  # ID of channel to migrate orders from origin channel.\r\n  channelId: ID!\r\n}\r\n\r\ntype ChannelError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ChannelErrorCode!\r\n  # List of shipping zone IDs which causes the error.\r\n  shippingZones: [ID!]\r\n}\r\n\r\n# An enumeration.\r\nenum ChannelErrorCode {\r\n  ALREADY_EXISTS\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  CHANNELS_CURRENCY_MUST_BE_THE_SAME\r\n  CHANNEL_WITH_ORDERS\r\n  DUPLICATED_INPUT_ITEM\r\n}\r\n\r\n# Update a channel.\r\ntype ChannelUpdate {\r\n  channelErrors: [ChannelError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ChannelError!]!\r\n  channel: Channel\r\n}\r\n\r\ninput ChannelUpdateInput {\r\n  # isActive flag.\r\n  isActive: Boolean\r\n  # Name of the channel.\r\n  name: String\r\n  # Slug of the channel.\r\n  slug: String\r\n  # Default country for the channel. Default country can be used in checkout to determine the stock quantities or calculate taxes when the country was not explicitly provided.\r\n  defaultCountry: CountryCode\r\n  # List of shipping zones to assign to the channel.\r\n  addShippingZones: [ID!]\r\n  # List of shipping zones to unassign from the channel.\r\n  removeShippingZones: [ID!]\r\n}\r\n\r\n# Checkout object.\r\ntype Checkout implements Node & ObjectWithMetadata {\r\n  created: DateTime!\r\n  lastChange: DateTime!\r\n  user: User\r\n  channel: Channel!\r\n  billingAddress: Address\r\n  shippingAddress: Address\r\n  note: String!\r\n  discount: Money\r\n  discountName: String\r\n  translatedDiscountName: String\r\n  voucherCode: String\r\n  # List of gift cards associated with this checkout.\r\n  giftCards: [GiftCard]\r\n  # The ID of the object.\r\n  id: ID!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Shipping methods that can be used with this order.\r\n  availableShippingMethods: [ShippingMethod]!\r\n  # List of available payment gateways.\r\n  availablePaymentGateways: [PaymentGateway!]!\r\n  # Email of a customer.\r\n  email: String!\r\n  # Returns True, if checkout requires shipping.\r\n  isShippingRequired: Boolean!\r\n  # The number of items purchased.\r\n  quantity: Int!\r\n  # A list of checkout lines, each containing information about an item in the checkout.\r\n  lines: [CheckoutLine]\r\n  # The price of the shipping, with all the taxes included.\r\n  shippingPrice: TaxedMoney\r\n  # The shipping method related with checkout.\r\n  shippingMethod: ShippingMethod\r\n  # The price of the checkout before shipping, with taxes included.\r\n  subtotalPrice: TaxedMoney\r\n  # The checkout's token.\r\n  token: UUID!\r\n  # The sum of the the checkout line prices, with all the taxes,shipping costs, and discounts included.\r\n  totalPrice: TaxedMoney\r\n  # Checkout language code.\r\n  languageCode: LanguageCodeEnum!\r\n}\r\n\r\n# Adds a gift card or a voucher to a checkout.\r\ntype CheckoutAddPromoCode {\r\n  # The checkout with the added gift card or voucher.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Update billing address in the existing checkout.\r\ntype CheckoutBillingAddressUpdate {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Completes the checkout. As a result a new order is created and a payment charge is made. This action requires a successful payment before it can be performed. In case additional confirmation step as 3D secure is required confirmationNeeded flag will be set to True and no order created until payment is confirmed with second call of this mutation.\r\ntype CheckoutComplete {\r\n  # Placed order.\r\n  order: Order\r\n  # Set to true if payment needs to be confirmed before checkout is complete.\r\n  confirmationNeeded: Boolean!\r\n  # Confirmation data used to process additional authorization steps.\r\n  confirmationData: JSONString\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\ntype CheckoutCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [CheckoutCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype CheckoutCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Checkout!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Create a new checkout.\r\ntype CheckoutCreate {\r\n  # Whether the checkout was created or the current active one was returned. Refer to checkoutLinesAdd and checkoutLinesUpdate to merge a cart with an active checkout.DEPRECATED: Will be removed in Saleor 4.0. Always returns True.\r\n  created: Boolean\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n  checkout: Checkout\r\n}\r\n\r\ninput CheckoutCreateInput {\r\n  # Slug of a channel in which to create a checkout.\r\n  channel: String\r\n  # A list of checkout lines, each containing information about an item in the checkout.\r\n  lines: [CheckoutLineInput]!\r\n  # The customer's email address.\r\n  email: String\r\n  # The mailing address to where the checkout will be shipped. Note: the address will be ignored if the checkout doesn't contain shippable items.\r\n  shippingAddress: AddressInput\r\n  # Billing address of the customer.\r\n  billingAddress: AddressInput\r\n  # Checkout language code.\r\n  languageCode: LanguageCodeEnum\r\n}\r\n\r\n# Sets the customer as the owner of the checkout.\r\ntype CheckoutCustomerAttach {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Removes the user assigned as the owner of the checkout.\r\ntype CheckoutCustomerDetach {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Updates email address in the existing checkout object.\r\ntype CheckoutEmailUpdate {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\ntype CheckoutError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: CheckoutErrorCode!\r\n  # List of varint IDs which causes the error.\r\n  variants: [ID!]\r\n  # A type of address that causes the error.\r\n  addressType: AddressTypeEnum\r\n}\r\n\r\n# An enumeration.\r\nenum CheckoutErrorCode {\r\n  BILLING_ADDRESS_NOT_SET\r\n  CHECKOUT_NOT_FULLY_PAID\r\n  GRAPHQL_ERROR\r\n  PRODUCT_NOT_PUBLISHED\r\n  PRODUCT_UNAVAILABLE_FOR_PURCHASE\r\n  INSUFFICIENT_STOCK\r\n  INVALID\r\n  INVALID_SHIPPING_METHOD\r\n  NOT_FOUND\r\n  PAYMENT_ERROR\r\n  QUANTITY_GREATER_THAN_LIMIT\r\n  REQUIRED\r\n  SHIPPING_ADDRESS_NOT_SET\r\n  SHIPPING_METHOD_NOT_APPLICABLE\r\n  SHIPPING_METHOD_NOT_SET\r\n  SHIPPING_NOT_REQUIRED\r\n  TAX_ERROR\r\n  UNIQUE\r\n  VOUCHER_NOT_APPLICABLE\r\n  ZERO_QUANTITY\r\n  MISSING_CHANNEL_SLUG\r\n  CHANNEL_INACTIVE\r\n  UNAVAILABLE_VARIANT_IN_CHANNEL\r\n}\r\n\r\n# Update language code in the existing checkout.\r\ntype CheckoutLanguageCodeUpdate {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Represents an item in the checkout.\r\ntype CheckoutLine implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  variant: ProductVariant!\r\n  quantity: Int!\r\n  # The sum of the checkout line price, taxes and discounts.\r\n  totalPrice: TaxedMoney\r\n  # Indicates whether the item need to be delivered.\r\n  requiresShipping: Boolean\r\n}\r\n\r\ntype CheckoutLineCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [CheckoutLineCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype CheckoutLineCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: CheckoutLine!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Deletes a CheckoutLine.\r\ntype CheckoutLineDelete {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\ninput CheckoutLineInput {\r\n  # The number of items purchased.\r\n  quantity: Int!\r\n  # ID of the product variant.\r\n  variantId: ID!\r\n}\r\n\r\n# Adds a checkout line to the existing checkout.If line was already in checkout, its quantity will be increased.\r\ntype CheckoutLinesAdd {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Updates checkout line in the existing checkout.\r\ntype CheckoutLinesUpdate {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Create a new payment for given checkout.\r\ntype CheckoutPaymentCreate {\r\n  # Related checkout object.\r\n  checkout: Checkout\r\n  # A newly created payment.\r\n  payment: Payment\r\n  paymentErrors: [PaymentError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PaymentError!]!\r\n}\r\n\r\n# Remove a gift card or a voucher from a checkout.\r\ntype CheckoutRemovePromoCode {\r\n  # The checkout with the removed gift card or voucher.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Update shipping address in the existing checkout.\r\ntype CheckoutShippingAddressUpdate {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Updates the shipping address of the checkout.\r\ntype CheckoutShippingMethodUpdate {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\ntype ChoiceValue {\r\n  raw: String\r\n  verbose: String\r\n}\r\n\r\n# Represents a collection of products.\r\ntype Collection implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String!\r\n  description: JSONString\r\n  slug: String!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Channel given to retrieve this collection. Also used by federation gateway to resolve this object in a federated query.\r\n  channel: String\r\n  # Description of the collection (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n  # List of products in this collection.\r\n  products(\r\n    # Filtering options for products.\r\n    filter: ProductFilterInput\r\n    # Sort products.\r\n    sortBy: ProductOrder\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductCountableConnection\r\n  backgroundImage(\r\n    # Size of the image.\r\n    size: Int\r\n  ): Image\r\n  # Returns translated collection fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for collection.\r\n    languageCode: LanguageCodeEnum!\r\n  ): CollectionTranslation\r\n  # List of channels in which the collection is available.\r\n  channelListings: [CollectionChannelListing!]\r\n}\r\n\r\n# Adds products to a collection.\r\ntype CollectionAddProducts {\r\n  # Collection to which products will be added.\r\n  collection: Collection\r\n  collectionErrors: [CollectionError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionError!]!\r\n}\r\n\r\n# Deletes collections.\r\ntype CollectionBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  collectionErrors: [CollectionError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionError!]!\r\n}\r\n\r\n# Represents collection channel listing.\r\ntype CollectionChannelListing implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  publicationDate: Date\r\n  isPublished: Boolean!\r\n  channel: Channel!\r\n}\r\n\r\ntype CollectionChannelListingError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ProductErrorCode!\r\n  # List of attributes IDs which causes the error.\r\n  attributes: [ID!]\r\n  # List of attribute values IDs which causes the error.\r\n  values: [ID!]\r\n  # List of channels IDs which causes the error.\r\n  channels: [ID!]\r\n}\r\n\r\n# Manage collection's availability in channels.\r\ntype CollectionChannelListingUpdate {\r\n  # An updated collection instance.\r\n  collection: Collection\r\n  collectionChannelListingErrors: [CollectionChannelListingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionChannelListingError!]!\r\n}\r\n\r\ninput CollectionChannelListingUpdateInput {\r\n  # List of channels to which the collection should be assigned.\r\n  addChannels: [PublishableChannelListingInput!]\r\n  # List of channels from which the collection should be unassigned.\r\n  removeChannels: [ID!]\r\n}\r\n\r\ntype CollectionCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [CollectionCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype CollectionCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Collection!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new collection.\r\ntype CollectionCreate {\r\n  collectionErrors: [CollectionError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionError!]!\r\n  collection: Collection\r\n}\r\n\r\ninput CollectionCreateInput {\r\n  # Informs whether a collection is published.\r\n  isPublished: Boolean\r\n  # Name of the collection.\r\n  name: String\r\n  # Slug of the collection.\r\n  slug: String\r\n  # Description of the collection (JSON).\r\n  description: JSONString\r\n  # Background image file.\r\n  backgroundImage: Upload\r\n  # Alt text for an image.\r\n  backgroundImageAlt: String\r\n  # Search engine optimization fields.\r\n  seo: SeoInput\r\n  # Publication date. ISO 8601 standard.\r\n  publicationDate: Date\r\n  # List of products to be added to the collection.\r\n  products: [ID]\r\n}\r\n\r\n# Deletes a collection.\r\ntype CollectionDelete {\r\n  collectionErrors: [CollectionError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionError!]!\r\n  collection: Collection\r\n}\r\n\r\ntype CollectionError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # List of products IDs which causes the error.\r\n  products: [ID!]\r\n  # The error code.\r\n  code: CollectionErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum CollectionErrorCode {\r\n  DUPLICATED_INPUT_ITEM\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT\r\n}\r\n\r\ninput CollectionFilterInput {\r\n  published: CollectionPublished\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n  ids: [ID]\r\n  # Specifies the channel by which the data should be filtered. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n}\r\n\r\ninput CollectionInput {\r\n  # Informs whether a collection is published.\r\n  isPublished: Boolean\r\n  # Name of the collection.\r\n  name: String\r\n  # Slug of the collection.\r\n  slug: String\r\n  # Description of the collection (JSON).\r\n  description: JSONString\r\n  # Background image file.\r\n  backgroundImage: Upload\r\n  # Alt text for an image.\r\n  backgroundImageAlt: String\r\n  # Search engine optimization fields.\r\n  seo: SeoInput\r\n  # Publication date. ISO 8601 standard.\r\n  publicationDate: Date\r\n}\r\n\r\nenum CollectionPublished {\r\n  PUBLISHED\r\n  HIDDEN\r\n}\r\n\r\n# Remove products from a collection.\r\ntype CollectionRemoveProducts {\r\n  # Collection from which products will be removed.\r\n  collection: Collection\r\n  collectionErrors: [CollectionError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionError!]!\r\n}\r\n\r\n# Reorder the products of a collection.\r\ntype CollectionReorderProducts {\r\n  # Collection from which products are reordered.\r\n  collection: Collection\r\n  collectionErrors: [CollectionError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionError!]!\r\n}\r\n\r\nenum CollectionSortField {\r\n  # Sort collections by name.\r\n  NAME\r\n  # Sort collections by availability.\r\n  AVAILABILITY\r\n  # Sort collections by product count.\r\n  PRODUCT_COUNT\r\n  # Sort collections by publication date.\r\n  PUBLICATION_DATE\r\n}\r\n\r\ninput CollectionSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Specifies the channel in which to sort the data. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n  # Sort collections by the selected field.\r\n  field: CollectionSortField!\r\n}\r\n\r\ntype CollectionTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String!\r\n  description: JSONString\r\n  # Description of the collection (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n  # Returns translated collection fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for collection.\r\n    languageCode: LanguageCodeEnum!\r\n  ): CollectionTranslation\r\n  # Represents a collection of products.\r\n  collection: Collection @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\n# Creates/updates translations for a collection.\r\ntype CollectionTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  collection: Collection\r\n}\r\n\r\ntype CollectionTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String\r\n  description: JSONString\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n  # Translated description of the product (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n}\r\n\r\n# Updates a collection.\r\ntype CollectionUpdate {\r\n  collectionErrors: [CollectionError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionError!]!\r\n  collection: Collection\r\n}\r\n\r\n# Stores information about a single configuration field.\r\ntype ConfigurationItem {\r\n  # Name of the field.\r\n  name: String!\r\n  # Current value of the field.\r\n  value: String\r\n  # Type of the field.\r\n  type: ConfigurationTypeFieldEnum\r\n  # Help text for the field.\r\n  helpText: String\r\n  # Label for the field.\r\n  label: String\r\n}\r\n\r\ninput ConfigurationItemInput {\r\n  # Name of the field to update.\r\n  name: String!\r\n  # Value of the given field to update.\r\n  value: String\r\n}\r\n\r\n# An enumeration.\r\nenum ConfigurationTypeFieldEnum {\r\n  STRING\r\n  MULTILINE\r\n  BOOLEAN\r\n  SECRET\r\n  PASSWORD\r\n  SECRETMULTILINE\r\n  OUTPUT\r\n}\r\n\r\n# Confirm user account with token sent by email during registration.\r\ntype ConfirmAccount {\r\n  # An activated user account.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Confirm the email change of the logged-in user.\r\ntype ConfirmEmailChange {\r\n  # A user instance with a new email.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum CountryCode {\r\n  AF\r\n  AX\r\n  AL\r\n  DZ\r\n  AS\r\n  AD\r\n  AO\r\n  AI\r\n  AQ\r\n  AG\r\n  AR\r\n  AM\r\n  AW\r\n  AU\r\n  AT\r\n  AZ\r\n  BS\r\n  BH\r\n  BD\r\n  BB\r\n  BY\r\n  BE\r\n  BZ\r\n  BJ\r\n  BM\r\n  BT\r\n  BO\r\n  BQ\r\n  BA\r\n  BW\r\n  BV\r\n  BR\r\n  IO\r\n  BN\r\n  BG\r\n  BF\r\n  BI\r\n  CV\r\n  KH\r\n  CM\r\n  CA\r\n  KY\r\n  CF\r\n  TD\r\n  CL\r\n  CN\r\n  CX\r\n  CC\r\n  CO\r\n  KM\r\n  CG\r\n  CD\r\n  CK\r\n  CR\r\n  CI\r\n  HR\r\n  CU\r\n  CW\r\n  CY\r\n  CZ\r\n  DK\r\n  DJ\r\n  DM\r\n  DO\r\n  EC\r\n  EG\r\n  SV\r\n  GQ\r\n  ER\r\n  EE\r\n  SZ\r\n  ET\r\n  EU\r\n  FK\r\n  FO\r\n  FJ\r\n  FI\r\n  FR\r\n  GF\r\n  PF\r\n  TF\r\n  GA\r\n  GM\r\n  GE\r\n  DE\r\n  GH\r\n  GI\r\n  GR\r\n  GL\r\n  GD\r\n  GP\r\n  GU\r\n  GT\r\n  GG\r\n  GN\r\n  GW\r\n  GY\r\n  HT\r\n  HM\r\n  VA\r\n  HN\r\n  HK\r\n  HU\r\n  IS\r\n  IN\r\n  ID\r\n  IR\r\n  IQ\r\n  IE\r\n  IM\r\n  IL\r\n  IT\r\n  JM\r\n  JP\r\n  JE\r\n  JO\r\n  KZ\r\n  KE\r\n  KI\r\n  KW\r\n  KG\r\n  LA\r\n  LV\r\n  LB\r\n  LS\r\n  LR\r\n  LY\r\n  LI\r\n  LT\r\n  LU\r\n  MO\r\n  MG\r\n  MW\r\n  MY\r\n  MV\r\n  ML\r\n  MT\r\n  MH\r\n  MQ\r\n  MR\r\n  MU\r\n  YT\r\n  MX\r\n  FM\r\n  MD\r\n  MC\r\n  MN\r\n  ME\r\n  MS\r\n  MA\r\n  MZ\r\n  MM\r\n  NA\r\n  NR\r\n  NP\r\n  NL\r\n  NC\r\n  NZ\r\n  NI\r\n  NE\r\n  NG\r\n  NU\r\n  NF\r\n  KP\r\n  MK\r\n  MP\r\n  NO\r\n  OM\r\n  PK\r\n  PW\r\n  PS\r\n  PA\r\n  PG\r\n  PY\r\n  PE\r\n  PH\r\n  PN\r\n  PL\r\n  PT\r\n  PR\r\n  QA\r\n  RE\r\n  RO\r\n  RU\r\n  RW\r\n  BL\r\n  SH\r\n  KN\r\n  LC\r\n  MF\r\n  PM\r\n  VC\r\n  WS\r\n  SM\r\n  ST\r\n  SA\r\n  SN\r\n  RS\r\n  SC\r\n  SL\r\n  SG\r\n  SX\r\n  SK\r\n  SI\r\n  SB\r\n  SO\r\n  ZA\r\n  GS\r\n  KR\r\n  SS\r\n  ES\r\n  LK\r\n  SD\r\n  SR\r\n  SJ\r\n  SE\r\n  CH\r\n  SY\r\n  TW\r\n  TJ\r\n  TZ\r\n  TH\r\n  TL\r\n  TG\r\n  TK\r\n  TO\r\n  TT\r\n  TN\r\n  TR\r\n  TM\r\n  TC\r\n  TV\r\n  UG\r\n  UA\r\n  AE\r\n  GB\r\n  UM\r\n  US\r\n  UY\r\n  UZ\r\n  VU\r\n  VE\r\n  VN\r\n  VG\r\n  VI\r\n  WF\r\n  EH\r\n  YE\r\n  ZM\r\n  ZW\r\n}\r\n\r\ntype CountryDisplay {\r\n  # Country code.\r\n  code: String!\r\n  # Country name.\r\n  country: String!\r\n  # Country tax.\r\n  vat: VAT\r\n}\r\n\r\n# Create JWT token.\r\ntype CreateToken {\r\n  # JWT token, required to authenticate.\r\n  token: String\r\n  # JWT refresh token, required to re-generate access token.\r\n  refreshToken: String\r\n  # CSRF token required to re-generate access token.\r\n  csrfToken: String\r\n  # A user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\ntype CreditCard {\r\n  # Card brand.\r\n  brand: String!\r\n  # First 4 digits of the card number.\r\n  firstDigits: String\r\n  # Last 4 digits of the card number.\r\n  lastDigits: String!\r\n  # Two-digit number representing the card’s expiration month.\r\n  expMonth: Int\r\n  # Four-digit number representing the card’s expiration year.\r\n  expYear: Int\r\n}\r\n\r\n# Deletes customers.\r\ntype CustomerBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Creates a new customer.\r\ntype CustomerCreate {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  user: User\r\n}\r\n\r\n# Deletes a customer.\r\ntype CustomerDelete {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  user: User\r\n}\r\n\r\n# History log of the customer.\r\ntype CustomerEvent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Date when event happened at in ISO 8601 format.\r\n  date: DateTime\r\n  # Customer event type.\r\n  type: CustomerEventsEnum\r\n  # User who performed the action.\r\n  user: User\r\n  # App that performed the action.\r\n  app: App\r\n  # Content of the event.\r\n  message: String\r\n  # Number of objects concerned by the event.\r\n  count: Int\r\n  # The concerned order.\r\n  order: Order\r\n  # The concerned order line.\r\n  orderLine: OrderLine\r\n}\r\n\r\n# An enumeration.\r\nenum CustomerEventsEnum {\r\n  ACCOUNT_CREATED\r\n  PASSWORD_RESET_LINK_SENT\r\n  PASSWORD_RESET\r\n  EMAIL_CHANGED_REQUEST\r\n  PASSWORD_CHANGED\r\n  EMAIL_CHANGED\r\n  PLACED_ORDER\r\n  NOTE_ADDED_TO_ORDER\r\n  DIGITAL_LINK_DOWNLOADED\r\n  CUSTOMER_DELETED\r\n  NAME_ASSIGNED\r\n  EMAIL_ASSIGNED\r\n  NOTE_ADDED\r\n}\r\n\r\ninput CustomerFilterInput {\r\n  dateJoined: DateRangeInput\r\n  numberOfOrders: IntRangeInput\r\n  placedOrders: DateRangeInput\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n}\r\n\r\ninput CustomerInput {\r\n  # Billing address of the customer.\r\n  defaultBillingAddress: AddressInput\r\n  # Shipping address of the customer.\r\n  defaultShippingAddress: AddressInput\r\n  # Given name.\r\n  firstName: String\r\n  # Family name.\r\n  lastName: String\r\n  # The unique email address of the user.\r\n  email: String\r\n  # User account is active.\r\n  isActive: Boolean\r\n  # A note about the user.\r\n  note: String\r\n  # User language code.\r\n  languageCode: LanguageCodeEnum\r\n}\r\n\r\n# Updates an existing customer.\r\ntype CustomerUpdate {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  user: User\r\n}\r\n\r\n# The `Date` scalar type represents a Date\r\n# value as specified by\r\n# [iso8601](https://en.wikipedia.org/wiki/ISO_8601).\r\nscalar Date\r\n\r\ninput DateRangeInput {\r\n  # Start date.\r\n  gte: Date\r\n  # End date.\r\n  lte: Date\r\n}\r\n\r\n# The `DateTime` scalar type represents a DateTime\r\n# value as specified by\r\n# [iso8601](https://en.wikipedia.org/wiki/ISO_8601).\r\nscalar DateTime\r\n\r\ninput DateTimeRangeInput {\r\n  # Start date.\r\n  gte: DateTime\r\n  # End date.\r\n  lte: DateTime\r\n}\r\n\r\n# Deactivate all JWT tokens of the currently authenticated user.\r\ntype DeactivateAllUserTokens {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Delete metadata of an object.\r\ntype DeleteMetadata {\r\n  metadataErrors: [MetadataError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MetadataError!]!\r\n  item: ObjectWithMetadata\r\n}\r\n\r\n# Delete object's private metadata.\r\ntype DeletePrivateMetadata {\r\n  metadataErrors: [MetadataError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MetadataError!]!\r\n  item: ObjectWithMetadata\r\n}\r\n\r\ntype DigitalContent implements Node & ObjectWithMetadata {\r\n  useDefaultSettings: Boolean!\r\n  automaticFulfillment: Boolean!\r\n  contentFile: String!\r\n  maxDownloads: Int\r\n  urlValidDays: Int\r\n  # List of URLs for the digital variant.\r\n  urls: [DigitalContentUrl]\r\n  # The ID of the object.\r\n  id: ID!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Product variant assigned to digital content.\r\n  productVariant: ProductVariant!\r\n}\r\n\r\ntype DigitalContentCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [DigitalContentCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype DigitalContentCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: DigitalContent!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Create new digital content. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\ntype DigitalContentCreate {\r\n  variant: ProductVariant\r\n  content: DigitalContent\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Remove digital content assigned to given variant.\r\ntype DigitalContentDelete {\r\n  variant: ProductVariant\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\ninput DigitalContentInput {\r\n  # Use default digital content settings for this product.\r\n  useDefaultSettings: Boolean!\r\n  # Determines how many times a download link can be accessed by a customer.\r\n  maxDownloads: Int\r\n  # Determines for how many days a download link is active since it was generated.\r\n  urlValidDays: Int\r\n  # Overwrite default automatic_fulfillment setting for variant.\r\n  automaticFulfillment: Boolean\r\n}\r\n\r\n# Update digital content.\r\ntype DigitalContentUpdate {\r\n  variant: ProductVariant\r\n  content: DigitalContent\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\ninput DigitalContentUploadInput {\r\n  # Use default digital content settings for this product.\r\n  useDefaultSettings: Boolean!\r\n  # Determines how many times a download link can be accessed by a customer.\r\n  maxDownloads: Int\r\n  # Determines for how many days a download link is active since it was generated.\r\n  urlValidDays: Int\r\n  # Overwrite default automatic_fulfillment setting for variant.\r\n  automaticFulfillment: Boolean\r\n  # Represents an file in a multipart request.\r\n  contentFile: Upload!\r\n}\r\n\r\ntype DigitalContentUrl implements Node {\r\n  content: DigitalContent!\r\n  created: DateTime!\r\n  downloadNum: Int!\r\n  # The ID of the object.\r\n  id: ID!\r\n  # URL for digital content.\r\n  url: String\r\n  # UUID of digital content.\r\n  token: UUID!\r\n}\r\n\r\n# Generate new URL to digital content.\r\ntype DigitalContentUrlCreate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  digitalContentUrl: DigitalContentUrl\r\n}\r\n\r\ninput DigitalContentUrlCreateInput {\r\n  # Digital content ID which URL will belong to.\r\n  content: ID!\r\n}\r\n\r\ntype DiscountError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # List of products IDs which causes the error.\r\n  products: [ID!]\r\n  # The error code.\r\n  code: DiscountErrorCode!\r\n  # List of channels IDs which causes the error.\r\n  channels: [ID!]\r\n}\r\n\r\n# An enumeration.\r\nenum DiscountErrorCode {\r\n  ALREADY_EXISTS\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT\r\n  DUPLICATED_INPUT_ITEM\r\n}\r\n\r\nenum DiscountStatusEnum {\r\n  ACTIVE\r\n  EXPIRED\r\n  SCHEDULED\r\n}\r\n\r\nenum DiscountValueTypeEnum {\r\n  FIXED\r\n  PERCENTAGE\r\n}\r\n\r\n# An enumeration.\r\nenum DistanceUnitsEnum {\r\n  CM\r\n  M\r\n  KM\r\n  FT\r\n  YD\r\n  INCH\r\n}\r\n\r\n# Represents shop's domain.\r\ntype Domain {\r\n  # The host name of the domain.\r\n  host: String!\r\n  # Inform if SSL is enabled.\r\n  sslEnabled: Boolean!\r\n  # Shop's absolute URL.\r\n  url: String!\r\n}\r\n\r\n# Deletes draft orders.\r\ntype DraftOrderBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Completes creating an order.\r\ntype DraftOrderComplete {\r\n  # Completed order.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Creates a new draft order.\r\ntype DraftOrderCreate {\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n  order: Order\r\n}\r\n\r\ninput DraftOrderCreateInput {\r\n  # Billing address of the customer.\r\n  billingAddress: AddressInput\r\n  # Customer associated with the draft order.\r\n  user: ID\r\n  # Email address of the customer.\r\n  userEmail: String\r\n  # Discount amount for the order.\r\n  discount: PositiveDecimal\r\n  # Shipping address of the customer.\r\n  shippingAddress: AddressInput\r\n  # ID of a selected shipping method.\r\n  shippingMethod: ID\r\n  # ID of the voucher associated with the order.\r\n  voucher: ID\r\n  # A note from a customer. Visible by customers in the order summary.\r\n  customerNote: String\r\n  # ID of the channel associated with the order.\r\n  channelId: ID\r\n  # URL of a view where users should be redirected to see the order details. URL in RFC 1808 format.\r\n  redirectUrl: String\r\n  # Variant line input consisting of variant ID and quantity of products.\r\n  lines: [OrderLineCreateInput]\r\n}\r\n\r\n# Deletes a draft order.\r\ntype DraftOrderDelete {\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n  order: Order\r\n}\r\n\r\ninput DraftOrderInput {\r\n  # Billing address of the customer.\r\n  billingAddress: AddressInput\r\n  # Customer associated with the draft order.\r\n  user: ID\r\n  # Email address of the customer.\r\n  userEmail: String\r\n  # Discount amount for the order.\r\n  discount: PositiveDecimal\r\n  # Shipping address of the customer.\r\n  shippingAddress: AddressInput\r\n  # ID of a selected shipping method.\r\n  shippingMethod: ID\r\n  # ID of the voucher associated with the order.\r\n  voucher: ID\r\n  # A note from a customer. Visible by customers in the order summary.\r\n  customerNote: String\r\n  # ID of the channel associated with the order.\r\n  channelId: ID\r\n  # URL of a view where users should be redirected to see the order details. URL in RFC 1808 format.\r\n  redirectUrl: String\r\n}\r\n\r\n# Deletes order lines.\r\ntype DraftOrderLinesBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Updates a draft order.\r\ntype DraftOrderUpdate {\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n  order: Order\r\n}\r\n\r\ntype ExportError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ExportErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum ExportErrorCode {\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n}\r\n\r\n# History log of export file.\r\ntype ExportEvent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Date when event happened at in ISO 8601 format.\r\n  date: DateTime!\r\n  # Export event type.\r\n  type: ExportEventsEnum!\r\n  # User who performed the action.\r\n  user: User\r\n  # App which performed the action.\r\n  app: App\r\n  # Content of the event.\r\n  message: String!\r\n}\r\n\r\n# An enumeration.\r\nenum ExportEventsEnum {\r\n  EXPORT_PENDING\r\n  EXPORT_SUCCESS\r\n  EXPORT_FAILED\r\n  EXPORT_DELETED\r\n  EXPORTED_FILE_SENT\r\n  EXPORT_FAILED_INFO_SENT\r\n}\r\n\r\n# Represents a job data of exported file.\r\ntype ExportFile implements Node & Job {\r\n  # The ID of the object.\r\n  id: ID!\r\n  user: User\r\n  app: App\r\n  # Job status.\r\n  status: JobStatusEnum!\r\n  # Created date time of job in ISO 8601 format.\r\n  createdAt: DateTime!\r\n  # Date time of job last update in ISO 8601 format.\r\n  updatedAt: DateTime!\r\n  # Job message.\r\n  message: String\r\n  # The URL of field to download.\r\n  url: String\r\n  # List of events associated with the export.\r\n  events: [ExportEvent!]\r\n}\r\n\r\ntype ExportFileCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [ExportFileCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype ExportFileCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: ExportFile!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\ninput ExportFileFilterInput {\r\n  createdAt: DateTimeRangeInput\r\n  updatedAt: DateTimeRangeInput\r\n  status: JobStatusEnum\r\n  user: String\r\n  app: String\r\n}\r\n\r\nenum ExportFileSortField {\r\n  # Sort export file by status.\r\n  STATUS\r\n  # Sort export file by created at.\r\n  CREATED_AT\r\n  # Sort export file by updated at.\r\n  UPDATED_AT\r\n}\r\n\r\ninput ExportFileSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort export file by the selected field.\r\n  field: ExportFileSortField!\r\n}\r\n\r\ninput ExportInfoInput {\r\n  # List of attribute ids witch should be exported.\r\n  attributes: [ID!]\r\n  # List of warehouse ids witch should be exported.\r\n  warehouses: [ID!]\r\n  # List of channels ids which should be exported.\r\n  channels: [ID!]\r\n  # List of product fields witch should be exported.\r\n  fields: [ProductFieldEnum!]\r\n}\r\n\r\n# Export products to csv file.\r\ntype ExportProducts {\r\n  # The newly created export file job which is responsible for export data.\r\n  exportFile: ExportFile\r\n  exportErrors: [ExportError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ExportError!]!\r\n}\r\n\r\ninput ExportProductsInput {\r\n  # Determine which products should be exported.\r\n  scope: ExportScope!\r\n  # Filtering options for products.\r\n  filter: ProductFilterInput\r\n  # List of products IDS to export.\r\n  ids: [ID!]\r\n  # Input with info about fields which should be exported.\r\n  exportInfo: ExportInfoInput\r\n  # Type of exported file.\r\n  fileType: FileTypesEnum!\r\n}\r\n\r\nenum ExportScope {\r\n  # Export all products.\r\n  ALL\r\n  # Export products with given ids.\r\n  IDS\r\n  # Export the filtered products.\r\n  FILTER\r\n}\r\n\r\ntype ExternalAuthentication {\r\n  # ID of external authentication plugin.\r\n  id: String!\r\n  # Name of external authentication plugin.\r\n  name: String\r\n}\r\n\r\n# Prepare external authentication url for user by custom plugin.\r\ntype ExternalAuthenticationUrl {\r\n  # The data returned by authentication plugin.\r\n  authenticationData: JSONString\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Logout user by custom plugin.\r\ntype ExternalLogout {\r\n  # The data returned by authentication plugin.\r\n  logoutData: JSONString\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Obtain external access tokens for user by custom plugin.\r\ntype ExternalObtainAccessTokens {\r\n  # The token, required to authenticate.\r\n  token: String\r\n  # The refresh token, required to re-generate external access token.\r\n  refreshToken: String\r\n  # CSRF token required to re-generate external access token.\r\n  csrfToken: String\r\n  # A user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Refresh user's access by custom plugin.\r\ntype ExternalRefresh {\r\n  # The token, required to authenticate.\r\n  token: String\r\n  # The refresh token, required to re-generate external access token.\r\n  refreshToken: String\r\n  # CSRF token required to re-generate external access token.\r\n  csrfToken: String\r\n  # A user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Verify external authentication data by plugin.\r\ntype ExternalVerify {\r\n  # User assigned to data.\r\n  user: User\r\n  # Determine if authentication data is valid or not.\r\n  isValid: Boolean!\r\n  # External data.\r\n  verifyData: JSONString\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\ntype File {\r\n  # The URL of the file.\r\n  url: String!\r\n  # Content type of the file.\r\n  contentType: String\r\n}\r\n\r\n# An enumeration.\r\nenum FileTypesEnum {\r\n  CSV\r\n  XLSX\r\n}\r\n\r\n# Upload a file. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\ntype FileUpload {\r\n  uploadedFile: File\r\n  uploadErrors: [UploadError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [UploadError!]!\r\n}\r\n\r\n# Represents order fulfillment.\r\ntype Fulfillment implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  fulfillmentOrder: Int!\r\n  status: FulfillmentStatus!\r\n  trackingNumber: String!\r\n  created: DateTime!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # List of lines for the fulfillment.\r\n  lines: [FulfillmentLine]\r\n  # User-friendly fulfillment status.\r\n  statusDisplay: String\r\n  # Warehouse from fulfillment was fulfilled.\r\n  warehouse: Warehouse\r\n}\r\n\r\n# Cancels existing fulfillment and optionally restocks items.\r\ntype FulfillmentCancel {\r\n  # A canceled fulfillment.\r\n  fulfillment: Fulfillment\r\n  # Order which fulfillment was cancelled.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput FulfillmentCancelInput {\r\n  # ID of warehouse where items will be restock.\r\n  warehouseId: ID!\r\n}\r\n\r\n# Represents line of the fulfillment.\r\ntype FulfillmentLine implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  quantity: Int!\r\n  orderLine: OrderLine\r\n}\r\n\r\n# Refund products.\r\ntype FulfillmentRefundProducts {\r\n  # A refunded fulfillment.\r\n  fulfillment: Fulfillment\r\n  # Order which fulfillment was refunded.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Return products.\r\ntype FulfillmentReturnProducts {\r\n  # A return fulfillment.\r\n  returnFulfillment: Fulfillment\r\n  # A replace fulfillment.\r\n  replaceFulfillment: Fulfillment\r\n  # Order which fulfillment was returned.\r\n  order: Order\r\n  # A draft order which was created for products with replace flag.\r\n  replaceOrder: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum FulfillmentStatus {\r\n  # Fulfilled\r\n  FULFILLED\r\n  # Refunded\r\n  REFUNDED\r\n  # Returned\r\n  RETURNED\r\n  # Replaced\r\n  REPLACED\r\n  # Refunded and returned\r\n  REFUNDED_AND_RETURNED\r\n  # Canceled\r\n  CANCELED\r\n}\r\n\r\n# Updates a fulfillment for an order.\r\ntype FulfillmentUpdateTracking {\r\n  # A fulfillment with updated tracking.\r\n  fulfillment: Fulfillment\r\n  # Order for which fulfillment was updated.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput FulfillmentUpdateTrackingInput {\r\n  # Fulfillment tracking number.\r\n  trackingNumber: String\r\n  # If true, send an email notification to the customer.\r\n  notifyCustomer: Boolean = false\r\n}\r\n\r\n# Payment gateway client configuration key and value pair.\r\ntype GatewayConfigLine {\r\n  # Gateway config key.\r\n  field: String!\r\n  # Gateway config value for key.\r\n  value: String\r\n}\r\n\r\n# The `GenericScalar` scalar type represents a generic\r\n# GraphQL scalar value that could be:\r\n# String, Boolean, Int, Float, List or Object.\r\nscalar GenericScalar\r\n\r\n# A gift card is a prepaid electronic payment card accepted in stores. They can be used during checkout by providing a valid gift card codes.\r\ntype GiftCard implements Node {\r\n  # Gift card code.\r\n  code: String\r\n  # The customer who bought a gift card.\r\n  user: User\r\n  created: DateTime!\r\n  startDate: Date!\r\n  endDate: Date\r\n  lastUsedOn: DateTime\r\n  isActive: Boolean!\r\n  initialBalance: Money\r\n  currentBalance: Money\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Code in format which allows displaying in a user interface.\r\n  displayCode: String\r\n}\r\n\r\n# Activate a gift card.\r\ntype GiftCardActivate {\r\n  # A gift card to activate.\r\n  giftCard: GiftCard\r\n  giftCardErrors: [GiftCardError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [GiftCardError!]!\r\n}\r\n\r\ntype GiftCardCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [GiftCardCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype GiftCardCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: GiftCard!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new gift card.\r\ntype GiftCardCreate {\r\n  giftCardErrors: [GiftCardError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [GiftCardError!]!\r\n  giftCard: GiftCard\r\n}\r\n\r\ninput GiftCardCreateInput {\r\n  # Start date of the gift card in ISO 8601 format.\r\n  startDate: Date\r\n  # End date of the gift card in ISO 8601 format.\r\n  endDate: Date\r\n  # Value of the gift card.\r\n  balance: PositiveDecimal\r\n  # The customer's email of the gift card buyer.\r\n  userEmail: String\r\n  # Code to use the gift card.\r\n  code: String\r\n}\r\n\r\n# Deactivate a gift card.\r\ntype GiftCardDeactivate {\r\n  # A gift card to deactivate.\r\n  giftCard: GiftCard\r\n  giftCardErrors: [GiftCardError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [GiftCardError!]!\r\n}\r\n\r\ntype GiftCardError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: GiftCardErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum GiftCardErrorCode {\r\n  ALREADY_EXISTS\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\n# Update a gift card.\r\ntype GiftCardUpdate {\r\n  giftCardErrors: [GiftCardError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [GiftCardError!]!\r\n  giftCard: GiftCard\r\n}\r\n\r\ninput GiftCardUpdateInput {\r\n  # Start date of the gift card in ISO 8601 format.\r\n  startDate: Date\r\n  # End date of the gift card in ISO 8601 format.\r\n  endDate: Date\r\n  # Value of the gift card.\r\n  balance: PositiveDecimal\r\n  # The customer's email of the gift card buyer.\r\n  userEmail: String\r\n}\r\n\r\n# Represents permission group data.\r\ntype Group implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # List of group permissions\r\n  permissions: [Permission]\r\n  # List of group users\r\n  users: [User]\r\n  # True, if the currently authenticated user has rights to manage a group.\r\n  userCanManage: Boolean!\r\n}\r\n\r\ntype GroupCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [GroupCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype GroupCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Group!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Represents an image.\r\ntype Image {\r\n  # The URL of the image.\r\n  url: String!\r\n  # Alt text for an image.\r\n  alt: String\r\n}\r\n\r\ninput IntRangeInput {\r\n  # Value greater than or equal to.\r\n  gte: Int\r\n  # Value less than or equal to.\r\n  lte: Int\r\n}\r\n\r\n# Represents an Invoice.\r\ntype Invoice implements ObjectWithMetadata & Job & Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Job status.\r\n  status: JobStatusEnum!\r\n  number: String\r\n  externalUrl: String\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # Created date time of job in ISO 8601 format.\r\n  createdAt: DateTime!\r\n  # Date time of job last update in ISO 8601 format.\r\n  updatedAt: DateTime!\r\n  # Job message.\r\n  message: String\r\n  # URL to download an invoice.\r\n  url: String\r\n}\r\n\r\n# Creates a ready to send invoice.\r\ntype InvoiceCreate {\r\n  invoiceErrors: [InvoiceError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [InvoiceError!]!\r\n  invoice: Invoice\r\n}\r\n\r\ninput InvoiceCreateInput {\r\n  # Invoice number.\r\n  number: String!\r\n  # URL of an invoice to download.\r\n  url: String!\r\n}\r\n\r\n# Deletes an invoice.\r\ntype InvoiceDelete {\r\n  invoiceErrors: [InvoiceError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [InvoiceError!]!\r\n  invoice: Invoice\r\n}\r\n\r\ntype InvoiceError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: InvoiceErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum InvoiceErrorCode {\r\n  REQUIRED\r\n  NOT_READY\r\n  URL_NOT_SET\r\n  EMAIL_NOT_SET\r\n  NUMBER_NOT_SET\r\n  NOT_FOUND\r\n  INVALID_STATUS\r\n}\r\n\r\n# Request an invoice for the order using plugin.\r\ntype InvoiceRequest {\r\n  # Order related to an invoice.\r\n  order: Order\r\n  invoiceErrors: [InvoiceError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [InvoiceError!]!\r\n  invoice: Invoice\r\n}\r\n\r\n# Requests deletion of an invoice.\r\ntype InvoiceRequestDelete {\r\n  invoiceErrors: [InvoiceError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [InvoiceError!]!\r\n  invoice: Invoice\r\n}\r\n\r\n# Send an invoice notification to the customer.\r\ntype InvoiceSendNotification {\r\n  invoiceErrors: [InvoiceError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [InvoiceError!]!\r\n  invoice: Invoice\r\n}\r\n\r\n# Updates an invoice.\r\ntype InvoiceUpdate {\r\n  invoiceErrors: [InvoiceError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [InvoiceError!]!\r\n  invoice: Invoice\r\n}\r\n\r\n# Allows use of a JSON String for input / output from the GraphQL schema.\r\n# Use of this type is *not recommended* as you lose the benefits of having a defined, static\r\n# schema (one of the key benefits of GraphQL).\r\nscalar JSONString\r\n\r\ninterface Job {\r\n  # Job status.\r\n  status: JobStatusEnum!\r\n  # Created date time of job in ISO 8601 format.\r\n  createdAt: DateTime!\r\n  # Date time of job last update in ISO 8601 format.\r\n  updatedAt: DateTime!\r\n  # Job message.\r\n  message: String\r\n}\r\n\r\n# An enumeration.\r\nenum JobStatusEnum {\r\n  PENDING\r\n  SUCCESS\r\n  FAILED\r\n  DELETED\r\n}\r\n\r\n# An enumeration.\r\nenum LanguageCodeEnum {\r\n  AF\r\n  AF_NA\r\n  AF_ZA\r\n  AGQ\r\n  AGQ_CM\r\n  AK\r\n  AK_GH\r\n  AM\r\n  AM_ET\r\n  AR\r\n  AR_AE\r\n  AR_BH\r\n  AR_DJ\r\n  AR_DZ\r\n  AR_EG\r\n  AR_EH\r\n  AR_ER\r\n  AR_IL\r\n  AR_IQ\r\n  AR_JO\r\n  AR_KM\r\n  AR_KW\r\n  AR_LB\r\n  AR_LY\r\n  AR_MA\r\n  AR_MR\r\n  AR_OM\r\n  AR_PS\r\n  AR_QA\r\n  AR_SA\r\n  AR_SD\r\n  AR_SO\r\n  AR_SS\r\n  AR_SY\r\n  AR_TD\r\n  AR_TN\r\n  AR_YE\r\n  AS\r\n  AS_IN\r\n  ASA\r\n  ASA_TZ\r\n  AST\r\n  AST_ES\r\n  AZ\r\n  AZ_CYRL\r\n  AZ_CYRL_AZ\r\n  AZ_LATN\r\n  AZ_LATN_AZ\r\n  BAS\r\n  BAS_CM\r\n  BE\r\n  BE_BY\r\n  BEM\r\n  BEM_ZM\r\n  BEZ\r\n  BEZ_TZ\r\n  BG\r\n  BG_BG\r\n  BM\r\n  BM_ML\r\n  BN\r\n  BN_BD\r\n  BN_IN\r\n  BO\r\n  BO_CN\r\n  BO_IN\r\n  BR\r\n  BR_FR\r\n  BRX\r\n  BRX_IN\r\n  BS\r\n  BS_CYRL\r\n  BS_CYRL_BA\r\n  BS_LATN\r\n  BS_LATN_BA\r\n  CA\r\n  CA_AD\r\n  CA_ES\r\n  CA_ES_VALENCIA\r\n  CA_FR\r\n  CA_IT\r\n  CCP\r\n  CCP_BD\r\n  CCP_IN\r\n  CE\r\n  CE_RU\r\n  CEB\r\n  CEB_PH\r\n  CGG\r\n  CGG_UG\r\n  CHR\r\n  CHR_US\r\n  CKB\r\n  CKB_IQ\r\n  CKB_IR\r\n  CS\r\n  CS_CZ\r\n  CU\r\n  CU_RU\r\n  CY\r\n  CY_GB\r\n  DA\r\n  DA_DK\r\n  DA_GL\r\n  DAV\r\n  DAV_KE\r\n  DE\r\n  DE_AT\r\n  DE_BE\r\n  DE_CH\r\n  DE_DE\r\n  DE_IT\r\n  DE_LI\r\n  DE_LU\r\n  DJE\r\n  DJE_NE\r\n  DSB\r\n  DSB_DE\r\n  DUA\r\n  DUA_CM\r\n  DYO\r\n  DYO_SN\r\n  DZ\r\n  DZ_BT\r\n  EBU\r\n  EBU_KE\r\n  EE\r\n  EE_GH\r\n  EE_TG\r\n  EL\r\n  EL_CY\r\n  EL_GR\r\n  EN\r\n  EN_AE\r\n  EN_AG\r\n  EN_AI\r\n  EN_AS\r\n  EN_AT\r\n  EN_AU\r\n  EN_BB\r\n  EN_BE\r\n  EN_BI\r\n  EN_BM\r\n  EN_BS\r\n  EN_BW\r\n  EN_BZ\r\n  EN_CA\r\n  EN_CC\r\n  EN_CH\r\n  EN_CK\r\n  EN_CM\r\n  EN_CX\r\n  EN_CY\r\n  EN_DE\r\n  EN_DG\r\n  EN_DK\r\n  EN_DM\r\n  EN_ER\r\n  EN_FI\r\n  EN_FJ\r\n  EN_FK\r\n  EN_FM\r\n  EN_GB\r\n  EN_GD\r\n  EN_GG\r\n  EN_GH\r\n  EN_GI\r\n  EN_GM\r\n  EN_GU\r\n  EN_GY\r\n  EN_HK\r\n  EN_IE\r\n  EN_IL\r\n  EN_IM\r\n  EN_IN\r\n  EN_IO\r\n  EN_JE\r\n  EN_JM\r\n  EN_KE\r\n  EN_KI\r\n  EN_KN\r\n  EN_KY\r\n  EN_LC\r\n  EN_LR\r\n  EN_LS\r\n  EN_MG\r\n  EN_MH\r\n  EN_MO\r\n  EN_MP\r\n  EN_MS\r\n  EN_MT\r\n  EN_MU\r\n  EN_MW\r\n  EN_MY\r\n  EN_NA\r\n  EN_NF\r\n  EN_NG\r\n  EN_NL\r\n  EN_NR\r\n  EN_NU\r\n  EN_NZ\r\n  EN_PG\r\n  EN_PH\r\n  EN_PK\r\n  EN_PN\r\n  EN_PR\r\n  EN_PW\r\n  EN_RW\r\n  EN_SB\r\n  EN_SC\r\n  EN_SD\r\n  EN_SE\r\n  EN_SG\r\n  EN_SH\r\n  EN_SI\r\n  EN_SL\r\n  EN_SS\r\n  EN_SX\r\n  EN_SZ\r\n  EN_TC\r\n  EN_TK\r\n  EN_TO\r\n  EN_TT\r\n  EN_TV\r\n  EN_TZ\r\n  EN_UG\r\n  EN_UM\r\n  EN_US\r\n  EN_VC\r\n  EN_VG\r\n  EN_VI\r\n  EN_VU\r\n  EN_WS\r\n  EN_ZA\r\n  EN_ZM\r\n  EN_ZW\r\n  EO\r\n  ES\r\n  ES_AR\r\n  ES_BO\r\n  ES_BR\r\n  ES_BZ\r\n  ES_CL\r\n  ES_CO\r\n  ES_CR\r\n  ES_CU\r\n  ES_DO\r\n  ES_EA\r\n  ES_EC\r\n  ES_ES\r\n  ES_GQ\r\n  ES_GT\r\n  ES_HN\r\n  ES_IC\r\n  ES_MX\r\n  ES_NI\r\n  ES_PA\r\n  ES_PE\r\n  ES_PH\r\n  ES_PR\r\n  ES_PY\r\n  ES_SV\r\n  ES_US\r\n  ES_UY\r\n  ES_VE\r\n  ET\r\n  ET_EE\r\n  EU\r\n  EU_ES\r\n  EWO\r\n  EWO_CM\r\n  FA\r\n  FA_AF\r\n  FA_IR\r\n  FF\r\n  FF_ADLM\r\n  FF_ADLM_BF\r\n  FF_ADLM_CM\r\n  FF_ADLM_GH\r\n  FF_ADLM_GM\r\n  FF_ADLM_GN\r\n  FF_ADLM_GW\r\n  FF_ADLM_LR\r\n  FF_ADLM_MR\r\n  FF_ADLM_NE\r\n  FF_ADLM_NG\r\n  FF_ADLM_SL\r\n  FF_ADLM_SN\r\n  FF_LATN\r\n  FF_LATN_BF\r\n  FF_LATN_CM\r\n  FF_LATN_GH\r\n  FF_LATN_GM\r\n  FF_LATN_GN\r\n  FF_LATN_GW\r\n  FF_LATN_LR\r\n  FF_LATN_MR\r\n  FF_LATN_NE\r\n  FF_LATN_NG\r\n  FF_LATN_SL\r\n  FF_LATN_SN\r\n  FI\r\n  FI_FI\r\n  FIL\r\n  FIL_PH\r\n  FO\r\n  FO_DK\r\n  FO_FO\r\n  FR\r\n  FR_BE\r\n  FR_BF\r\n  FR_BI\r\n  FR_BJ\r\n  FR_BL\r\n  FR_CA\r\n  FR_CD\r\n  FR_CF\r\n  FR_CG\r\n  FR_CH\r\n  FR_CI\r\n  FR_CM\r\n  FR_DJ\r\n  FR_DZ\r\n  FR_FR\r\n  FR_GA\r\n  FR_GF\r\n  FR_GN\r\n  FR_GP\r\n  FR_GQ\r\n  FR_HT\r\n  FR_KM\r\n  FR_LU\r\n  FR_MA\r\n  FR_MC\r\n  FR_MF\r\n  FR_MG\r\n  FR_ML\r\n  FR_MQ\r\n  FR_MR\r\n  FR_MU\r\n  FR_NC\r\n  FR_NE\r\n  FR_PF\r\n  FR_PM\r\n  FR_RE\r\n  FR_RW\r\n  FR_SC\r\n  FR_SN\r\n  FR_SY\r\n  FR_TD\r\n  FR_TG\r\n  FR_TN\r\n  FR_VU\r\n  FR_WF\r\n  FR_YT\r\n  FUR\r\n  FUR_IT\r\n  FY\r\n  FY_NL\r\n  GA\r\n  GA_GB\r\n  GA_IE\r\n  GD\r\n  GD_GB\r\n  GL\r\n  GL_ES\r\n  GSW\r\n  GSW_CH\r\n  GSW_FR\r\n  GSW_LI\r\n  GU\r\n  GU_IN\r\n  GUZ\r\n  GUZ_KE\r\n  GV\r\n  GV_IM\r\n  HA\r\n  HA_GH\r\n  HA_NE\r\n  HA_NG\r\n  HAW\r\n  HAW_US\r\n  HE\r\n  HE_IL\r\n  HI\r\n  HI_IN\r\n  HR\r\n  HR_BA\r\n  HR_HR\r\n  HSB\r\n  HSB_DE\r\n  HU\r\n  HU_HU\r\n  HY\r\n  HY_AM\r\n  IA\r\n  ID\r\n  ID_ID\r\n  IG\r\n  IG_NG\r\n  II\r\n  II_CN\r\n  IS\r\n  IS_IS\r\n  IT\r\n  IT_CH\r\n  IT_IT\r\n  IT_SM\r\n  IT_VA\r\n  JA\r\n  JA_JP\r\n  JGO\r\n  JGO_CM\r\n  JMC\r\n  JMC_TZ\r\n  JV\r\n  JV_ID\r\n  KA\r\n  KA_GE\r\n  KAB\r\n  KAB_DZ\r\n  KAM\r\n  KAM_KE\r\n  KDE\r\n  KDE_TZ\r\n  KEA\r\n  KEA_CV\r\n  KHQ\r\n  KHQ_ML\r\n  KI\r\n  KI_KE\r\n  KK\r\n  KK_KZ\r\n  KKJ\r\n  KKJ_CM\r\n  KL\r\n  KL_GL\r\n  KLN\r\n  KLN_KE\r\n  KM\r\n  KM_KH\r\n  KN\r\n  KN_IN\r\n  KO\r\n  KO_KP\r\n  KO_KR\r\n  KOK\r\n  KOK_IN\r\n  KS\r\n  KS_ARAB\r\n  KS_ARAB_IN\r\n  KSB\r\n  KSB_TZ\r\n  KSF\r\n  KSF_CM\r\n  KSH\r\n  KSH_DE\r\n  KU\r\n  KU_TR\r\n  KW\r\n  KW_GB\r\n  KY\r\n  KY_KG\r\n  LAG\r\n  LAG_TZ\r\n  LB\r\n  LB_LU\r\n  LG\r\n  LG_UG\r\n  LKT\r\n  LKT_US\r\n  LN\r\n  LN_AO\r\n  LN_CD\r\n  LN_CF\r\n  LN_CG\r\n  LO\r\n  LO_LA\r\n  LRC\r\n  LRC_IQ\r\n  LRC_IR\r\n  LT\r\n  LT_LT\r\n  LU\r\n  LU_CD\r\n  LUO\r\n  LUO_KE\r\n  LUY\r\n  LUY_KE\r\n  LV\r\n  LV_LV\r\n  MAI\r\n  MAI_IN\r\n  MAS\r\n  MAS_KE\r\n  MAS_TZ\r\n  MER\r\n  MER_KE\r\n  MFE\r\n  MFE_MU\r\n  MG\r\n  MG_MG\r\n  MGH\r\n  MGH_MZ\r\n  MGO\r\n  MGO_CM\r\n  MI\r\n  MI_NZ\r\n  MK\r\n  MK_MK\r\n  ML\r\n  ML_IN\r\n  MN\r\n  MN_MN\r\n  MNI\r\n  MNI_BENG\r\n  MNI_BENG_IN\r\n  MR\r\n  MR_IN\r\n  MS\r\n  MS_BN\r\n  MS_ID\r\n  MS_MY\r\n  MS_SG\r\n  MT\r\n  MT_MT\r\n  MUA\r\n  MUA_CM\r\n  MY\r\n  MY_MM\r\n  MZN\r\n  MZN_IR\r\n  NAQ\r\n  NAQ_NA\r\n  NB\r\n  NB_NO\r\n  NB_SJ\r\n  ND\r\n  ND_ZW\r\n  NDS\r\n  NDS_DE\r\n  NDS_NL\r\n  NE\r\n  NE_IN\r\n  NE_NP\r\n  NL\r\n  NL_AW\r\n  NL_BE\r\n  NL_BQ\r\n  NL_CW\r\n  NL_NL\r\n  NL_SR\r\n  NL_SX\r\n  NMG\r\n  NMG_CM\r\n  NN\r\n  NN_NO\r\n  NNH\r\n  NNH_CM\r\n  NUS\r\n  NUS_SS\r\n  NYN\r\n  NYN_UG\r\n  OM\r\n  OM_ET\r\n  OM_KE\r\n  OR\r\n  OR_IN\r\n  OS\r\n  OS_GE\r\n  OS_RU\r\n  PA\r\n  PA_ARAB\r\n  PA_ARAB_PK\r\n  PA_GURU\r\n  PA_GURU_IN\r\n  PCM\r\n  PCM_NG\r\n  PL\r\n  PL_PL\r\n  PRG\r\n  PS\r\n  PS_AF\r\n  PS_PK\r\n  PT\r\n  PT_AO\r\n  PT_BR\r\n  PT_CH\r\n  PT_CV\r\n  PT_GQ\r\n  PT_GW\r\n  PT_LU\r\n  PT_MO\r\n  PT_MZ\r\n  PT_PT\r\n  PT_ST\r\n  PT_TL\r\n  QU\r\n  QU_BO\r\n  QU_EC\r\n  QU_PE\r\n  RM\r\n  RM_CH\r\n  RN\r\n  RN_BI\r\n  RO\r\n  RO_MD\r\n  RO_RO\r\n  ROF\r\n  ROF_TZ\r\n  RU\r\n  RU_BY\r\n  RU_KG\r\n  RU_KZ\r\n  RU_MD\r\n  RU_RU\r\n  RU_UA\r\n  RW\r\n  RW_RW\r\n  RWK\r\n  RWK_TZ\r\n  SAH\r\n  SAH_RU\r\n  SAQ\r\n  SAQ_KE\r\n  SAT\r\n  SAT_OLCK\r\n  SAT_OLCK_IN\r\n  SBP\r\n  SBP_TZ\r\n  SD\r\n  SD_ARAB\r\n  SD_ARAB_PK\r\n  SD_DEVA\r\n  SD_DEVA_IN\r\n  SE\r\n  SE_FI\r\n  SE_NO\r\n  SE_SE\r\n  SEH\r\n  SEH_MZ\r\n  SES\r\n  SES_ML\r\n  SG\r\n  SG_CF\r\n  SHI\r\n  SHI_LATN\r\n  SHI_LATN_MA\r\n  SHI_TFNG\r\n  SHI_TFNG_MA\r\n  SI\r\n  SI_LK\r\n  SK\r\n  SK_SK\r\n  SL\r\n  SL_SI\r\n  SMN\r\n  SMN_FI\r\n  SN\r\n  SN_ZW\r\n  SO\r\n  SO_DJ\r\n  SO_ET\r\n  SO_KE\r\n  SO_SO\r\n  SQ\r\n  SQ_AL\r\n  SQ_MK\r\n  SQ_XK\r\n  SR\r\n  SR_CYRL\r\n  SR_CYRL_BA\r\n  SR_CYRL_ME\r\n  SR_CYRL_RS\r\n  SR_CYRL_XK\r\n  SR_LATN\r\n  SR_LATN_BA\r\n  SR_LATN_ME\r\n  SR_LATN_RS\r\n  SR_LATN_XK\r\n  SU\r\n  SU_LATN\r\n  SU_LATN_ID\r\n  SV\r\n  SV_AX\r\n  SV_FI\r\n  SV_SE\r\n  SW\r\n  SW_CD\r\n  SW_KE\r\n  SW_TZ\r\n  SW_UG\r\n  TA\r\n  TA_IN\r\n  TA_LK\r\n  TA_MY\r\n  TA_SG\r\n  TE\r\n  TE_IN\r\n  TEO\r\n  TEO_KE\r\n  TEO_UG\r\n  TG\r\n  TG_TJ\r\n  TH\r\n  TH_TH\r\n  TI\r\n  TI_ER\r\n  TI_ET\r\n  TK\r\n  TK_TM\r\n  TO\r\n  TO_TO\r\n  TR\r\n  TR_CY\r\n  TR_TR\r\n  TT\r\n  TT_RU\r\n  TWQ\r\n  TWQ_NE\r\n  TZM\r\n  TZM_MA\r\n  UG\r\n  UG_CN\r\n  UK\r\n  UK_UA\r\n  UR\r\n  UR_IN\r\n  UR_PK\r\n  UZ\r\n  UZ_ARAB\r\n  UZ_ARAB_AF\r\n  UZ_CYRL\r\n  UZ_CYRL_UZ\r\n  UZ_LATN\r\n  UZ_LATN_UZ\r\n  VAI\r\n  VAI_LATN\r\n  VAI_LATN_LR\r\n  VAI_VAII\r\n  VAI_VAII_LR\r\n  VI\r\n  VI_VN\r\n  VO\r\n  VUN\r\n  VUN_TZ\r\n  WAE\r\n  WAE_CH\r\n  WO\r\n  WO_SN\r\n  XH\r\n  XH_ZA\r\n  XOG\r\n  XOG_UG\r\n  YAV\r\n  YAV_CM\r\n  YI\r\n  YO\r\n  YO_BJ\r\n  YO_NG\r\n  YUE\r\n  YUE_HANS\r\n  YUE_HANS_CN\r\n  YUE_HANT\r\n  YUE_HANT_HK\r\n  ZGH\r\n  ZGH_MA\r\n  ZH\r\n  ZH_HANS\r\n  ZH_HANS_CN\r\n  ZH_HANS_HK\r\n  ZH_HANS_MO\r\n  ZH_HANS_SG\r\n  ZH_HANT\r\n  ZH_HANT_HK\r\n  ZH_HANT_MO\r\n  ZH_HANT_TW\r\n  ZU\r\n  ZU_ZA\r\n}\r\n\r\ntype LanguageDisplay {\r\n  # ISO 639 representation of the language name.\r\n  code: LanguageCodeEnum!\r\n  # Full name of the language.\r\n  language: String!\r\n}\r\n\r\ntype LimitInfo {\r\n  # Defines the current resource usage.\r\n  currentUsage: Limits!\r\n  # Defines the allowed maximum resource usage, null means unlimited.\r\n  allowedUsage: Limits!\r\n}\r\n\r\ntype Limits {\r\n  channels: Int\r\n  orders: Int\r\n  productVariants: Int\r\n  staffUsers: Int\r\n  warehouses: Int\r\n}\r\n\r\n# The manifest definition.\r\ntype Manifest {\r\n  identifier: String!\r\n  version: String!\r\n  name: String!\r\n  about: String\r\n  permissions: [Permission]\r\n  appUrl: String\r\n  configurationUrl: String\r\n  tokenTargetUrl: String\r\n  dataPrivacy: String\r\n  dataPrivacyUrl: String\r\n  homepageUrl: String\r\n  supportUrl: String\r\n}\r\n\r\ntype Margin {\r\n  start: Int\r\n  stop: Int\r\n}\r\n\r\n# An enumeration.\r\nenum MeasurementUnitsEnum {\r\n  CM\r\n  M\r\n  KM\r\n  FT\r\n  YD\r\n  INCH\r\n  SQ_CM\r\n  SQ_M\r\n  SQ_KM\r\n  SQ_FT\r\n  SQ_YD\r\n  SQ_INCH\r\n  CUBIC_MILLIMETER\r\n  CUBIC_CENTIMETER\r\n  CUBIC_DECIMETER\r\n  CUBIC_METER\r\n  LITER\r\n  CUBIC_FOOT\r\n  CUBIC_INCH\r\n  CUBIC_YARD\r\n  QT\r\n  PINT\r\n  FL_OZ\r\n  ACRE_IN\r\n  ACRE_FT\r\n  G\r\n  LB\r\n  OZ\r\n  KG\r\n  TONNE\r\n}\r\n\r\n# Represents a single menu - an object that is used to help navigate through the store.\r\ntype Menu implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  slug: String!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  items: [MenuItem]\r\n}\r\n\r\n# Deletes menus.\r\ntype MenuBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n}\r\n\r\ntype MenuCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [MenuCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype MenuCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Menu!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new Menu.\r\ntype MenuCreate {\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n  menu: Menu\r\n}\r\n\r\ninput MenuCreateInput {\r\n  # Name of the menu.\r\n  name: String!\r\n  # Slug of the menu. Will be generated if not provided.\r\n  slug: String\r\n  # List of menu items.\r\n  items: [MenuItemInput]\r\n}\r\n\r\n# Deletes a menu.\r\ntype MenuDelete {\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n  menu: Menu\r\n}\r\n\r\ntype MenuError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: MenuErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum MenuErrorCode {\r\n  CANNOT_ASSIGN_NODE\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  INVALID_MENU_ITEM\r\n  NO_MENU_ITEM_PROVIDED\r\n  NOT_FOUND\r\n  REQUIRED\r\n  TOO_MANY_MENU_ITEMS\r\n  UNIQUE\r\n}\r\n\r\ninput MenuFilterInput {\r\n  search: String\r\n  slug: [String]\r\n  metadata: [MetadataFilter]\r\n}\r\n\r\ninput MenuInput {\r\n  # Name of the menu.\r\n  name: String\r\n  # Slug of the menu.\r\n  slug: String\r\n}\r\n\r\n# Represents a single item of the related menu. Can store categories, collection or pages.\r\ntype MenuItem implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  menu: Menu!\r\n  parent: MenuItem\r\n  category: Category\r\n  collection: Collection\r\n  page: Page\r\n  level: Int!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  children: [MenuItem]\r\n  # URL to the menu item.\r\n  url: String\r\n  # Returns translated menu item fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for menu item.\r\n    languageCode: LanguageCodeEnum!\r\n  ): MenuItemTranslation\r\n}\r\n\r\n# Deletes menu items.\r\ntype MenuItemBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n}\r\n\r\ntype MenuItemCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [MenuItemCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype MenuItemCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: MenuItem!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new menu item.\r\ntype MenuItemCreate {\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n  menuItem: MenuItem\r\n}\r\n\r\ninput MenuItemCreateInput {\r\n  # Name of the menu item.\r\n  name: String!\r\n  # URL of the pointed item.\r\n  url: String\r\n  # Category to which item points.\r\n  category: ID\r\n  # Collection to which item points.\r\n  collection: ID\r\n  # Page to which item points.\r\n  page: ID\r\n  # Menu to which item belongs.\r\n  menu: ID!\r\n  # ID of the parent menu. If empty, menu will be top level menu.\r\n  parent: ID\r\n}\r\n\r\n# Deletes a menu item.\r\ntype MenuItemDelete {\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n  menuItem: MenuItem\r\n}\r\n\r\ninput MenuItemFilterInput {\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n}\r\n\r\ninput MenuItemInput {\r\n  # Name of the menu item.\r\n  name: String\r\n  # URL of the pointed item.\r\n  url: String\r\n  # Category to which item points.\r\n  category: ID\r\n  # Collection to which item points.\r\n  collection: ID\r\n  # Page to which item points.\r\n  page: ID\r\n}\r\n\r\n# Moves items of menus.\r\ntype MenuItemMove {\r\n  # Assigned menu to move within.\r\n  menu: Menu\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n}\r\n\r\ninput MenuItemMoveInput {\r\n  # The menu item ID to move.\r\n  itemId: ID!\r\n  # ID of the parent menu. If empty, menu will be top level menu.\r\n  parentId: ID\r\n  # The new relative sorting position of the item (from -inf to +inf). 1 moves the item one position forward, -1 moves the item one position backward, 0 leaves the item unchanged.\r\n  sortOrder: Int\r\n}\r\n\r\ninput MenuItemSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort menu items by the selected field.\r\n  field: MenuItemsSortField!\r\n}\r\n\r\ntype MenuItemTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # Returns translated menu item fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for menu item.\r\n    languageCode: LanguageCodeEnum!\r\n  ): MenuItemTranslation\r\n  # Represents a single item of the related menu. Can store categories, collection or pages.\r\n  menuItem: MenuItem @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\n# Creates/updates translations for a menu item.\r\ntype MenuItemTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  menuItem: MenuItem\r\n}\r\n\r\ntype MenuItemTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\n# Updates a menu item.\r\ntype MenuItemUpdate {\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n  menuItem: MenuItem\r\n}\r\n\r\nenum MenuItemsSortField {\r\n  # Sort menu items by name.\r\n  NAME\r\n}\r\n\r\nenum MenuSortField {\r\n  # Sort menus by name.\r\n  NAME\r\n  # Sort menus by items count.\r\n  ITEMS_COUNT\r\n}\r\n\r\ninput MenuSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort menus by the selected field.\r\n  field: MenuSortField!\r\n}\r\n\r\n# Updates a menu.\r\ntype MenuUpdate {\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n  menu: Menu\r\n}\r\n\r\ntype MetadataError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: MetadataErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum MetadataErrorCode {\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n}\r\n\r\ninput MetadataFilter {\r\n  # Key of a metadata item.\r\n  key: String!\r\n  # Value of a metadata item.\r\n  value: String\r\n}\r\n\r\ninput MetadataInput {\r\n  # Key of a metadata item.\r\n  key: String!\r\n  # Value of a metadata item.\r\n  value: String!\r\n}\r\n\r\ntype MetadataItem {\r\n  # Key of a metadata item.\r\n  key: String!\r\n  # Value of a metadata item.\r\n  value: String!\r\n}\r\n\r\n# Represents amount of money in specific currency.\r\ntype Money {\r\n  # Currency code.\r\n  currency: String!\r\n  # Amount of money.\r\n  amount: Float!\r\n}\r\n\r\n# Represents a range of amounts of money.\r\ntype MoneyRange {\r\n  # Lower bound of a price range.\r\n  start: Money\r\n  # Upper bound of a price range.\r\n  stop: Money\r\n}\r\n\r\ninput MoveProductInput {\r\n  # The ID of the product to move.\r\n  productId: ID!\r\n  # The relative sorting position of the product (from -inf to +inf) starting from the first given product's actual position.1 moves the item one position forward, -1 moves the item one position backward, 0 leaves the item unchanged.\r\n  sortOrder: Int\r\n}\r\n\r\ntype Mutation {\r\n  # Creates a new webhook subscription.\r\n  webhookCreate(\r\n    # Fields required to create a webhook.\r\n    input: WebhookCreateInput!\r\n  ): WebhookCreate\r\n  # Deletes a webhook subscription.\r\n  webhookDelete(\r\n    # ID of a webhook to delete.\r\n    id: ID!\r\n  ): WebhookDelete\r\n  # Updates a webhook subscription.\r\n  webhookUpdate(\r\n    # ID of a webhook to update.\r\n    id: ID!\r\n    # Fields required to update a webhook.\r\n    input: WebhookUpdateInput!\r\n  ): WebhookUpdate\r\n  # Creates new warehouse.\r\n  createWarehouse(\r\n    # Fields required to create warehouse.\r\n    input: WarehouseCreateInput!\r\n  ): WarehouseCreate\r\n  # Updates given warehouse.\r\n  updateWarehouse(\r\n    # ID of a warehouse to update.\r\n    id: ID!\r\n    # Fields required to update warehouse.\r\n    input: WarehouseUpdateInput!\r\n  ): WarehouseUpdate\r\n  # Deletes selected warehouse.\r\n  deleteWarehouse(\r\n    # ID of a warehouse to delete.\r\n    id: ID!\r\n  ): WarehouseDelete\r\n  # Add shipping zone to given warehouse.\r\n  assignWarehouseShippingZone(\r\n    # ID of a warehouse to update.\r\n    id: ID!\r\n    # List of shipping zone IDs.\r\n    shippingZoneIds: [ID!]!\r\n  ): WarehouseShippingZoneAssign\r\n  # Remove shipping zone from given warehouse.\r\n  unassignWarehouseShippingZone(\r\n    # ID of a warehouse to update.\r\n    id: ID!\r\n    # List of shipping zone IDs.\r\n    shippingZoneIds: [ID!]!\r\n  ): WarehouseShippingZoneUnassign\r\n  # Creates a new staff notification recipient.\r\n  staffNotificationRecipientCreate(\r\n    # Fields required to create a staff notification recipient.\r\n    input: StaffNotificationRecipientInput!\r\n  ): StaffNotificationRecipientCreate\r\n  # Updates a staff notification recipient.\r\n  staffNotificationRecipientUpdate(\r\n    # ID of a staff notification recipient to update.\r\n    id: ID!\r\n    # Fields required to update a staff notification recipient.\r\n    input: StaffNotificationRecipientInput!\r\n  ): StaffNotificationRecipientUpdate\r\n  # Delete staff notification recipient.\r\n  staffNotificationRecipientDelete(\r\n    # ID of a staff notification recipient to delete.\r\n    id: ID!\r\n  ): StaffNotificationRecipientDelete\r\n  # Updates site domain of the shop.\r\n  shopDomainUpdate(\r\n    # Fields required to update site.\r\n    input: SiteDomainInput\r\n  ): ShopDomainUpdate\r\n  # Updates shop settings.\r\n  shopSettingsUpdate(\r\n    # Fields required to update shop settings.\r\n    input: ShopSettingsInput!\r\n  ): ShopSettingsUpdate\r\n  # Fetch tax rates.\r\n  shopFetchTaxRates: ShopFetchTaxRates\r\n  # Creates/updates translations for shop settings.\r\n  shopSettingsTranslate(\r\n    # Fields required to update shop settings translations.\r\n    input: ShopSettingsTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ShopSettingsTranslate\r\n  # Update the shop's address. If the `null` value is passed, the currently selected address will be deleted.\r\n  shopAddressUpdate(\r\n    # Fields required to update shop address.\r\n    input: AddressInput\r\n  ): ShopAddressUpdate\r\n  # Update shop order settings.\r\n  orderSettingsUpdate(\r\n    # Fields required to update shop order settings.\r\n    input: OrderSettingsUpdateInput!\r\n  ): OrderSettingsUpdate\r\n  # Manage shipping method's availability in channels.\r\n  shippingMethodChannelListingUpdate(\r\n    # ID of a shipping method to update.\r\n    id: ID!\r\n    # Fields required to update shipping method channel listings.\r\n    input: ShippingMethodChannelListingInput!\r\n  ): ShippingMethodChannelListingUpdate\r\n  # Creates a new shipping price.\r\n  shippingPriceCreate(\r\n    # Fields required to create a shipping price.\r\n    input: ShippingPriceInput!\r\n  ): ShippingPriceCreate\r\n  # Deletes a shipping price.\r\n  shippingPriceDelete(\r\n    # ID of a shipping price to delete.\r\n    id: ID!\r\n  ): ShippingPriceDelete\r\n  # Deletes shipping prices.\r\n  shippingPriceBulkDelete(\r\n    # List of shipping price IDs to delete.\r\n    ids: [ID]!\r\n  ): ShippingPriceBulkDelete\r\n  # Updates a new shipping price.\r\n  shippingPriceUpdate(\r\n    # ID of a shipping price to update.\r\n    id: ID!\r\n    # Fields required to update a shipping price.\r\n    input: ShippingPriceInput!\r\n  ): ShippingPriceUpdate\r\n  # Creates/updates translations for a shipping method.\r\n  shippingPriceTranslate(\r\n    # ShippingMethod ID or ShippingMethodTranslatableContent ID.\r\n    id: ID!\r\n    input: ShippingPriceTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ShippingPriceTranslate\r\n  # Exclude products from shipping price.\r\n  shippingPriceExcludeProducts(\r\n    # ID of a shipping price.\r\n    id: ID!\r\n    # Exclude products input.\r\n    input: ShippingPriceExcludeProductsInput!\r\n  ): ShippingPriceExcludeProducts\r\n  # Remove product from excluded list for shipping price.\r\n  shippingPriceRemoveProductFromExclude(\r\n    # ID of a shipping price.\r\n    id: ID!\r\n    # List of products which will be removed from excluded list.\r\n    products: [ID]!\r\n  ): ShippingPriceRemoveProductFromExclude\r\n  # Creates a new shipping zone.\r\n  shippingZoneCreate(\r\n    # Fields required to create a shipping zone.\r\n    input: ShippingZoneCreateInput!\r\n  ): ShippingZoneCreate\r\n  # Deletes a shipping zone.\r\n  shippingZoneDelete(\r\n    # ID of a shipping zone to delete.\r\n    id: ID!\r\n  ): ShippingZoneDelete\r\n  # Deletes shipping zones.\r\n  shippingZoneBulkDelete(\r\n    # List of shipping zone IDs to delete.\r\n    ids: [ID]!\r\n  ): ShippingZoneBulkDelete\r\n  # Updates a new shipping zone.\r\n  shippingZoneUpdate(\r\n    # ID of a shipping zone to update.\r\n    id: ID!\r\n    # Fields required to update a shipping zone.\r\n    input: ShippingZoneUpdateInput!\r\n  ): ShippingZoneUpdate\r\n  # Assign attributes to a given product type.\r\n  productAttributeAssign(\r\n    # The operations to perform.\r\n    operations: [ProductAttributeAssignInput]!\r\n    # ID of the product type to assign the attributes into.\r\n    productTypeId: ID!\r\n  ): ProductAttributeAssign\r\n  # Un-assign attributes from a given product type.\r\n  productAttributeUnassign(\r\n    # The IDs of the attributes to unassign.\r\n    attributeIds: [ID]!\r\n    # ID of the product type from which the attributes should be unassigned.\r\n    productTypeId: ID!\r\n  ): ProductAttributeUnassign\r\n  # Creates a new category.\r\n  categoryCreate(\r\n    # Fields required to create a category.\r\n    input: CategoryInput!\r\n    # ID of the parent category. If empty, category will be top level category.\r\n    parent: ID\r\n  ): CategoryCreate\r\n  # Deletes a category.\r\n  categoryDelete(\r\n    # ID of a category to delete.\r\n    id: ID!\r\n  ): CategoryDelete\r\n  # Deletes categories.\r\n  categoryBulkDelete(\r\n    # List of category IDs to delete.\r\n    ids: [ID]!\r\n  ): CategoryBulkDelete\r\n  # Updates a category.\r\n  categoryUpdate(\r\n    # ID of a category to update.\r\n    id: ID!\r\n    # Fields required to update a category.\r\n    input: CategoryInput!\r\n  ): CategoryUpdate\r\n  # Creates/updates translations for a category.\r\n  categoryTranslate(\r\n    # Category ID or CategoryTranslatableContent ID.\r\n    id: ID!\r\n    input: TranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): CategoryTranslate\r\n  # Adds products to a collection.\r\n  collectionAddProducts(\r\n    # ID of a collection.\r\n    collectionId: ID!\r\n    # List of product IDs.\r\n    products: [ID]!\r\n  ): CollectionAddProducts\r\n  # Creates a new collection.\r\n  collectionCreate(\r\n    # Fields required to create a collection.\r\n    input: CollectionCreateInput!\r\n  ): CollectionCreate\r\n  # Deletes a collection.\r\n  collectionDelete(\r\n    # ID of a collection to delete.\r\n    id: ID!\r\n  ): CollectionDelete\r\n  # Reorder the products of a collection.\r\n  collectionReorderProducts(\r\n    # ID of a collection.\r\n    collectionId: ID!\r\n    # The collection products position operations.\r\n    moves: [MoveProductInput]!\r\n  ): CollectionReorderProducts\r\n  # Deletes collections.\r\n  collectionBulkDelete(\r\n    # List of collection IDs to delete.\r\n    ids: [ID]!\r\n  ): CollectionBulkDelete\r\n  # Remove products from a collection.\r\n  collectionRemoveProducts(\r\n    # ID of a collection.\r\n    collectionId: ID!\r\n    # List of product IDs.\r\n    products: [ID]!\r\n  ): CollectionRemoveProducts\r\n  # Updates a collection.\r\n  collectionUpdate(\r\n    # ID of a collection to update.\r\n    id: ID!\r\n    # Fields required to update a collection.\r\n    input: CollectionInput!\r\n  ): CollectionUpdate\r\n  # Creates/updates translations for a collection.\r\n  collectionTranslate(\r\n    # Collection ID or CollectionTranslatableContent ID.\r\n    id: ID!\r\n    input: TranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): CollectionTranslate\r\n  # Manage collection's availability in channels.\r\n  collectionChannelListingUpdate(\r\n    # ID of a collection to update.\r\n    id: ID!\r\n    # Fields required to create or update collection channel listings.\r\n    input: CollectionChannelListingUpdateInput!\r\n  ): CollectionChannelListingUpdate\r\n  # Creates a new product.\r\n  productCreate(\r\n    # Fields required to create a product.\r\n    input: ProductCreateInput!\r\n  ): ProductCreate\r\n  # Deletes a product.\r\n  productDelete(\r\n    # ID of a product to delete.\r\n    id: ID!\r\n  ): ProductDelete\r\n  # Deletes products.\r\n  productBulkDelete(\r\n    # List of product IDs to delete.\r\n    ids: [ID]!\r\n  ): ProductBulkDelete\r\n  # Updates an existing product.\r\n  productUpdate(\r\n    # ID of a product to update.\r\n    id: ID!\r\n    # Fields required to update a product.\r\n    input: ProductInput!\r\n  ): ProductUpdate\r\n  # Creates/updates translations for a product.\r\n  productTranslate(\r\n    # Product ID or ProductTranslatableContent ID.\r\n    id: ID!\r\n    input: TranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ProductTranslate\r\n  # Manage product's availability in channels.\r\n  productChannelListingUpdate(\r\n    # ID of a product to update.\r\n    id: ID!\r\n    # Fields required to create or update product channel listings.\r\n    input: ProductChannelListingUpdateInput!\r\n  ): ProductChannelListingUpdate\r\n  # Create a media object (image or video URL) associated with product. For image, this mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\n  productMediaCreate(\r\n    # Fields required to create a product media.\r\n    input: ProductMediaCreateInput!\r\n  ): ProductMediaCreate\r\n  # Reorder the variants of a product. Mutation updates updated_at on product and triggers PRODUCT_UPDATED webhook.\r\n  productVariantReorder(\r\n    # The list of variant reordering operations.\r\n    moves: [ReorderInput]!\r\n    # Id of product that variants order will be altered.\r\n    productId: ID!\r\n  ): ProductVariantReorder\r\n  # Deletes a product media.\r\n  productMediaDelete(\r\n    # ID of a product media to delete.\r\n    id: ID!\r\n  ): ProductMediaDelete\r\n  # Deletes product media.\r\n  productMediaBulkDelete(\r\n    # List of product media IDs to delete.\r\n    ids: [ID]!\r\n  ): ProductMediaBulkDelete\r\n  # Changes ordering of the product media.\r\n  productMediaReorder(\r\n    # IDs of a product media in the desired order.\r\n    mediaIds: [ID]!\r\n    # ID of product that media order will be altered.\r\n    productId: ID!\r\n  ): ProductMediaReorder\r\n  # Updates a product media.\r\n  productMediaUpdate(\r\n    # ID of a product media to update.\r\n    id: ID!\r\n    # Fields required to update a product media.\r\n    input: ProductMediaUpdateInput!\r\n  ): ProductMediaUpdate\r\n  # Creates a new product type.\r\n  productTypeCreate(\r\n    # Fields required to create a product type.\r\n    input: ProductTypeInput!\r\n  ): ProductTypeCreate\r\n  # Deletes a product type.\r\n  productTypeDelete(\r\n    # ID of a product type to delete.\r\n    id: ID!\r\n  ): ProductTypeDelete\r\n  # Deletes product types.\r\n  productTypeBulkDelete(\r\n    # List of product type IDs to delete.\r\n    ids: [ID]!\r\n  ): ProductTypeBulkDelete\r\n  # Updates an existing product type.\r\n  productTypeUpdate(\r\n    # ID of a product type to update.\r\n    id: ID!\r\n    # Fields required to update a product type.\r\n    input: ProductTypeInput!\r\n  ): ProductTypeUpdate\r\n  # Reorder the attributes of a product type.\r\n  productTypeReorderAttributes(\r\n    # The list of attribute reordering operations.\r\n    moves: [ReorderInput]!\r\n    # ID of a product type.\r\n    productTypeId: ID!\r\n    # The attribute type to reorder.\r\n    type: ProductAttributeType!\r\n  ): ProductTypeReorderAttributes\r\n  # Reorder product attribute values.\r\n  productReorderAttributeValues(\r\n    # ID of an attribute.\r\n    attributeId: ID!\r\n    # The list of reordering operations for given attribute values.\r\n    moves: [ReorderInput]!\r\n    # ID of a product.\r\n    productId: ID!\r\n  ): ProductReorderAttributeValues\r\n  # Create new digital content. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\n  digitalContentCreate(\r\n    # Fields required to create a digital content.\r\n    input: DigitalContentUploadInput!\r\n    # ID of a product variant to upload digital content.\r\n    variantId: ID!\r\n  ): DigitalContentCreate\r\n  # Remove digital content assigned to given variant.\r\n  digitalContentDelete(\r\n    # ID of a product variant with digital content to remove.\r\n    variantId: ID!\r\n  ): DigitalContentDelete\r\n  # Update digital content.\r\n  digitalContentUpdate(\r\n    # Fields required to update a digital content.\r\n    input: DigitalContentInput!\r\n    # ID of a product variant with digital content to update.\r\n    variantId: ID!\r\n  ): DigitalContentUpdate\r\n  # Generate new URL to digital content.\r\n  digitalContentUrlCreate(\r\n    # Fields required to create a new url.\r\n    input: DigitalContentUrlCreateInput!\r\n  ): DigitalContentUrlCreate\r\n  # Creates a new variant for a product.\r\n  productVariantCreate(\r\n    # Fields required to create a product variant.\r\n    input: ProductVariantCreateInput!\r\n  ): ProductVariantCreate\r\n  # Deletes a product variant.\r\n  productVariantDelete(\r\n    # ID of a product variant to delete.\r\n    id: ID!\r\n  ): ProductVariantDelete\r\n  # Creates product variants for a given product.\r\n  productVariantBulkCreate(\r\n    # ID of the product to create the variants for.\r\n    product: ID!\r\n    # Input list of product variants to create.\r\n    variants: [ProductVariantBulkCreateInput]!\r\n  ): ProductVariantBulkCreate\r\n  # Deletes product variants.\r\n  productVariantBulkDelete(\r\n    # List of product variant IDs to delete.\r\n    ids: [ID]!\r\n  ): ProductVariantBulkDelete\r\n  # Creates stocks for product variant.\r\n  productVariantStocksCreate(\r\n    # Input list of stocks to create.\r\n    stocks: [StockInput!]!\r\n    # ID of a product variant for which stocks will be created.\r\n    variantId: ID!\r\n  ): ProductVariantStocksCreate\r\n  # Delete stocks from product variant.\r\n  productVariantStocksDelete(\r\n    # ID of product variant for which stocks will be deleted.\r\n    variantId: ID!\r\n    warehouseIds: [ID!]\r\n  ): ProductVariantStocksDelete\r\n  # Update stocks for product variant.\r\n  productVariantStocksUpdate(\r\n    # Input list of stocks to create.\r\n    stocks: [StockInput!]!\r\n    # ID of a product variant for which stocks will be created.\r\n    variantId: ID!\r\n  ): ProductVariantStocksUpdate\r\n  # Updates an existing variant for product.\r\n  productVariantUpdate(\r\n    # ID of a product variant to update.\r\n    id: ID!\r\n    # Fields required to update a product variant.\r\n    input: ProductVariantInput!\r\n  ): ProductVariantUpdate\r\n  # Set default variant for a product. Mutation triggers PRODUCT_UPDATED webhook.\r\n  productVariantSetDefault(\r\n    # Id of a product that will have the default variant set.\r\n    productId: ID!\r\n    # Id of a variant that will be set as default.\r\n    variantId: ID!\r\n  ): ProductVariantSetDefault\r\n  # Creates/updates translations for a product variant.\r\n  productVariantTranslate(\r\n    # ProductVariant ID or ProductVariantTranslatableContent ID.\r\n    id: ID!\r\n    input: NameTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ProductVariantTranslate\r\n  # Manage product variant prices in channels.\r\n  productVariantChannelListingUpdate(\r\n    # ID of a product variant to update.\r\n    id: ID!\r\n    # ('List of fields required to create or upgrade product variant ', 'channel listings.')\r\n    input: [ProductVariantChannelListingAddInput!]!\r\n  ): ProductVariantChannelListingUpdate\r\n  # Reorder product variant attribute values.\r\n  productVariantReorderAttributeValues(\r\n    # ID of an attribute.\r\n    attributeId: ID!\r\n    # The list of reordering operations for given attribute values.\r\n    moves: [ReorderInput]!\r\n    # ID of a product variant.\r\n    variantId: ID!\r\n  ): ProductVariantReorderAttributeValues\r\n  # Assign an media to a product variant.\r\n  variantMediaAssign(\r\n    # ID of a product media to assign to a variant.\r\n    mediaId: ID!\r\n    # ID of a product variant.\r\n    variantId: ID!\r\n  ): VariantMediaAssign\r\n  # Unassign an media from a product variant.\r\n  variantMediaUnassign(\r\n    # ID of a product media to unassign from a variant.\r\n    mediaId: ID!\r\n    # ID of a product variant.\r\n    variantId: ID!\r\n  ): VariantMediaUnassign\r\n  # Captures the authorized payment amount.\r\n  paymentCapture(\r\n    # Transaction amount.\r\n    amount: PositiveDecimal\r\n    # Payment ID.\r\n    paymentId: ID!\r\n  ): PaymentCapture\r\n  # Refunds the captured payment amount.\r\n  paymentRefund(\r\n    # Transaction amount.\r\n    amount: PositiveDecimal\r\n    # Payment ID.\r\n    paymentId: ID!\r\n  ): PaymentRefund\r\n  # Voids the authorized payment.\r\n  paymentVoid(\r\n    # Payment ID.\r\n    paymentId: ID!\r\n  ): PaymentVoid\r\n  # Initializes payment process when it is required by gateway.\r\n  paymentInitialize(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # A gateway name used to initialize the payment.\r\n    gateway: String!\r\n    # Client-side generated data required to initialize the payment.\r\n    paymentData: JSONString\r\n  ): PaymentInitialize\r\n  # Creates a new page.\r\n  pageCreate(\r\n    # Fields required to create a page.\r\n    input: PageCreateInput!\r\n  ): PageCreate\r\n  # Deletes a page.\r\n  pageDelete(\r\n    # ID of a page to delete.\r\n    id: ID!\r\n  ): PageDelete\r\n  # Deletes pages.\r\n  pageBulkDelete(\r\n    # List of page IDs to delete.\r\n    ids: [ID]!\r\n  ): PageBulkDelete\r\n  # Publish pages.\r\n  pageBulkPublish(\r\n    # List of page IDs to (un)publish.\r\n    ids: [ID]!\r\n    # Determine if pages will be published or not.\r\n    isPublished: Boolean!\r\n  ): PageBulkPublish\r\n  # Updates an existing page.\r\n  pageUpdate(\r\n    # ID of a page to update.\r\n    id: ID!\r\n    # Fields required to update a page.\r\n    input: PageInput!\r\n  ): PageUpdate\r\n  # Creates/updates translations for a page.\r\n  pageTranslate(\r\n    # Page ID or PageTranslatableContent ID.\r\n    id: ID!\r\n    input: PageTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): PageTranslate\r\n  # Create a new page type.\r\n  pageTypeCreate(\r\n    # Fields required to create page type.\r\n    input: PageTypeCreateInput!\r\n  ): PageTypeCreate\r\n  # Update page type.\r\n  pageTypeUpdate(\r\n    # ID of the page type to update.\r\n    id: ID\r\n    # Fields required to update page type.\r\n    input: PageTypeUpdateInput!\r\n  ): PageTypeUpdate\r\n  # Delete a page type.\r\n  pageTypeDelete(\r\n    # ID of the page type to delete.\r\n    id: ID!\r\n  ): PageTypeDelete\r\n  # Delete page types.\r\n  pageTypeBulkDelete(\r\n    # List of page type IDs to delete\r\n    ids: [ID!]!\r\n  ): PageTypeBulkDelete\r\n  # Assign attributes to a given page type.\r\n  pageAttributeAssign(\r\n    # The IDs of the attributes to assign.\r\n    attributeIds: [ID!]!\r\n    # ID of the page type to assign the attributes into.\r\n    pageTypeId: ID!\r\n  ): PageAttributeAssign\r\n  # Unassign attributes from a given page type.\r\n  pageAttributeUnassign(\r\n    # The IDs of the attributes to unassign.\r\n    attributeIds: [ID!]!\r\n    # ID of the page type from which the attributes should be unassign.\r\n    pageTypeId: ID!\r\n  ): PageAttributeUnassign\r\n  # Reorder the attributes of a page type.\r\n  pageTypeReorderAttributes(\r\n    # The list of attribute reordering operations.\r\n    moves: [ReorderInput!]!\r\n    # ID of a page type.\r\n    pageTypeId: ID!\r\n  ): PageTypeReorderAttributes\r\n  # Reorder page attribute values.\r\n  pageReorderAttributeValues(\r\n    # ID of an attribute.\r\n    attributeId: ID!\r\n    # The list of reordering operations for given attribute values.\r\n    moves: [ReorderInput]!\r\n    # ID of a page.\r\n    pageId: ID!\r\n  ): PageReorderAttributeValues\r\n  # Completes creating an order.\r\n  draftOrderComplete(\r\n    # ID of the order that will be completed.\r\n    id: ID!\r\n  ): DraftOrderComplete\r\n  # Creates a new draft order.\r\n  draftOrderCreate(\r\n    # Fields required to create an order.\r\n    input: DraftOrderCreateInput!\r\n  ): DraftOrderCreate\r\n  # Deletes a draft order.\r\n  draftOrderDelete(\r\n    # ID of a draft order to delete.\r\n    id: ID!\r\n  ): DraftOrderDelete\r\n  # Deletes draft orders.\r\n  draftOrderBulkDelete(\r\n    # List of draft order IDs to delete.\r\n    ids: [ID]!\r\n  ): DraftOrderBulkDelete\r\n  # Deletes order lines.\r\n  draftOrderLinesBulkDelete(\r\n    # List of order lines IDs to delete.\r\n    ids: [ID]!\r\n  ): DraftOrderLinesBulkDelete\r\n  # Updates a draft order.\r\n  draftOrderUpdate(\r\n    # ID of a draft order to update.\r\n    id: ID!\r\n    # Fields required to update an order.\r\n    input: DraftOrderInput!\r\n  ): DraftOrderUpdate\r\n  # Adds note to the order.\r\n  orderAddNote(\r\n    # ID of the order to add a note for.\r\n    order: ID!\r\n    # Fields required to create a note for the order.\r\n    input: OrderAddNoteInput!\r\n  ): OrderAddNote\r\n  # Cancel an order.\r\n  orderCancel(\r\n    # ID of the order to cancel.\r\n    id: ID!\r\n  ): OrderCancel\r\n  # Capture an order.\r\n  orderCapture(\r\n    # Amount of money to capture.\r\n    amount: PositiveDecimal!\r\n    # ID of the order to capture.\r\n    id: ID!\r\n  ): OrderCapture\r\n  # Confirms an unconfirmed order by changing status to unfulfilled.\r\n  orderConfirm(\r\n    # ID of an order to confirm.\r\n    id: ID!\r\n  ): OrderConfirm\r\n  # Creates new fulfillments for an order.\r\n  orderFulfill(\r\n    # Fields required to create an fulfillment.\r\n    input: OrderFulfillInput!\r\n    # ID of the order to be fulfilled.\r\n    order: ID\r\n  ): OrderFulfill\r\n  # Cancels existing fulfillment and optionally restocks items.\r\n  orderFulfillmentCancel(\r\n    # ID of an fulfillment to cancel.\r\n    id: ID!\r\n    # Fields required to cancel an fulfillment.\r\n    input: FulfillmentCancelInput!\r\n  ): FulfillmentCancel\r\n  # Updates a fulfillment for an order.\r\n  orderFulfillmentUpdateTracking(\r\n    # ID of an fulfillment to update.\r\n    id: ID!\r\n    # Fields required to update an fulfillment.\r\n    input: FulfillmentUpdateTrackingInput!\r\n  ): FulfillmentUpdateTracking\r\n  # Refund products.\r\n  orderFulfillmentRefundProducts(\r\n    # Fields required to create an refund fulfillment.\r\n    input: OrderRefundProductsInput!\r\n    # ID of the order to be refunded.\r\n    order: ID!\r\n  ): FulfillmentRefundProducts\r\n  # Return products.\r\n  orderFulfillmentReturnProducts(\r\n    # Fields required to return products.\r\n    input: OrderReturnProductsInput!\r\n    # ID of the order to be returned.\r\n    order: ID!\r\n  ): FulfillmentReturnProducts\r\n  # Create order lines for an order.\r\n  orderLinesCreate(\r\n    # ID of the order to add the lines to.\r\n    id: ID!\r\n    # Fields required to add order lines.\r\n    input: [OrderLineCreateInput]!\r\n  ): OrderLinesCreate\r\n  # Deletes an order line from an order.\r\n  orderLineDelete(\r\n    # ID of the order line to delete.\r\n    id: ID!\r\n  ): OrderLineDelete\r\n  # Updates an order line of an order.\r\n  orderLineUpdate(\r\n    # ID of the order line to update.\r\n    id: ID!\r\n    # Fields required to update an order line.\r\n    input: OrderLineInput!\r\n  ): OrderLineUpdate\r\n  # Adds discount to the order.\r\n  orderDiscountAdd(\r\n    # Fields required to create a discount for the order.\r\n    input: OrderDiscountCommonInput!\r\n    # ID of an order to discount.\r\n    orderId: ID!\r\n  ): OrderDiscountAdd\r\n  # Update discount for the order.\r\n  orderDiscountUpdate(\r\n    # ID of a discount to update.\r\n    discountId: ID!\r\n    # Fields required to update a discount for the order.\r\n    input: OrderDiscountCommonInput!\r\n  ): OrderDiscountUpdate\r\n  # Remove discount from the order.\r\n  orderDiscountDelete(\r\n    # ID of a discount to remove.\r\n    discountId: ID!\r\n  ): OrderDiscountDelete\r\n  # Update discount for the order line.\r\n  orderLineDiscountUpdate(\r\n    # Fields required to update price for the order line.\r\n    input: OrderDiscountCommonInput!\r\n    # ID of a order line to update price\r\n    orderLineId: ID!\r\n  ): OrderLineDiscountUpdate\r\n  # Remove discount applied to the order line.\r\n  orderLineDiscountRemove(\r\n    # ID of a order line to remove its discount\r\n    orderLineId: ID!\r\n  ): OrderLineDiscountRemove\r\n  # Mark order as manually paid.\r\n  orderMarkAsPaid(\r\n    # ID of the order to mark paid.\r\n    id: ID!\r\n    # The external transaction reference.\r\n    transactionReference: String\r\n  ): OrderMarkAsPaid\r\n  # Refund an order.\r\n  orderRefund(\r\n    # Amount of money to refund.\r\n    amount: PositiveDecimal!\r\n    # ID of the order to refund.\r\n    id: ID!\r\n  ): OrderRefund\r\n  # Updates an order.\r\n  orderUpdate(\r\n    # ID of an order to update.\r\n    id: ID!\r\n    # Fields required to update an order.\r\n    input: OrderUpdateInput!\r\n  ): OrderUpdate\r\n  # Updates a shipping method of the order.\r\n  orderUpdateShipping(\r\n    # ID of the order to update a shipping method.\r\n    order: ID!\r\n    # Fields required to change shipping method of the order.\r\n    input: OrderUpdateShippingInput\r\n  ): OrderUpdateShipping\r\n  # Void an order.\r\n  orderVoid(\r\n    # ID of the order to void.\r\n    id: ID!\r\n  ): OrderVoid\r\n  # Cancels orders.\r\n  orderBulkCancel(\r\n    # List of orders IDs to cancel.\r\n    ids: [ID]!\r\n  ): OrderBulkCancel\r\n  # Delete metadata of an object.\r\n  deleteMetadata(\r\n    # ID of an object to update.\r\n    id: ID!\r\n    # Metadata keys to delete.\r\n    keys: [String!]!\r\n  ): DeleteMetadata\r\n  # Delete object's private metadata.\r\n  deletePrivateMetadata(\r\n    # ID of an object to update.\r\n    id: ID!\r\n    # Metadata keys to delete.\r\n    keys: [String!]!\r\n  ): DeletePrivateMetadata\r\n  # Updates metadata of an object.\r\n  updateMetadata(\r\n    # ID of an object to update.\r\n    id: ID!\r\n    # Fields required to update the object's metadata.\r\n    input: [MetadataInput!]!\r\n  ): UpdateMetadata\r\n  # Updates private metadata of an object.\r\n  updatePrivateMetadata(\r\n    # ID of an object to update.\r\n    id: ID!\r\n    # Fields required to update the object's metadata.\r\n    input: [MetadataInput!]!\r\n  ): UpdatePrivateMetadata\r\n  # Assigns storefront's navigation menus.\r\n  assignNavigation(\r\n    # ID of the menu.\r\n    menu: ID\r\n    # Type of the navigation bar to assign the menu to.\r\n    navigationType: NavigationType!\r\n  ): AssignNavigation\r\n  # Creates a new Menu.\r\n  menuCreate(\r\n    # Fields required to create a menu.\r\n    input: MenuCreateInput!\r\n  ): MenuCreate\r\n  # Deletes a menu.\r\n  menuDelete(\r\n    # ID of a menu to delete.\r\n    id: ID!\r\n  ): MenuDelete\r\n  # Deletes menus.\r\n  menuBulkDelete(\r\n    # List of menu IDs to delete.\r\n    ids: [ID]!\r\n  ): MenuBulkDelete\r\n  # Updates a menu.\r\n  menuUpdate(\r\n    # ID of a menu to update.\r\n    id: ID!\r\n    # Fields required to update a menu.\r\n    input: MenuInput!\r\n  ): MenuUpdate\r\n  # Creates a new menu item.\r\n  menuItemCreate(\r\n    # Fields required to update a menu item. Only one of `url`, `category`, `page`, `collection` is allowed per item.\r\n    input: MenuItemCreateInput!\r\n  ): MenuItemCreate\r\n  # Deletes a menu item.\r\n  menuItemDelete(\r\n    # ID of a menu item to delete.\r\n    id: ID!\r\n  ): MenuItemDelete\r\n  # Deletes menu items.\r\n  menuItemBulkDelete(\r\n    # List of menu item IDs to delete.\r\n    ids: [ID]!\r\n  ): MenuItemBulkDelete\r\n  # Updates a menu item.\r\n  menuItemUpdate(\r\n    # ID of a menu item to update.\r\n    id: ID!\r\n    # Fields required to update a menu item. Only one of `url`, `category`, `page`, `collection` is allowed per item.\r\n    input: MenuItemInput!\r\n  ): MenuItemUpdate\r\n  # Creates/updates translations for a menu item.\r\n  menuItemTranslate(\r\n    # MenuItem ID or MenuItemTranslatableContent ID.\r\n    id: ID!\r\n    input: NameTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): MenuItemTranslate\r\n  # Moves items of menus.\r\n  menuItemMove(\r\n    # ID of the menu.\r\n    menu: ID!\r\n    # The menu position data.\r\n    moves: [MenuItemMoveInput]!\r\n  ): MenuItemMove\r\n  # Request an invoice for the order using plugin.\r\n  invoiceRequest(\r\n    # Invoice number, if not provided it will be generated.\r\n    number: String\r\n    # ID of the order related to invoice.\r\n    orderId: ID!\r\n  ): InvoiceRequest\r\n  # Requests deletion of an invoice.\r\n  invoiceRequestDelete(\r\n    # ID of an invoice to request the deletion.\r\n    id: ID!\r\n  ): InvoiceRequestDelete\r\n  # Creates a ready to send invoice.\r\n  invoiceCreate(\r\n    # Fields required when creating an invoice.\r\n    input: InvoiceCreateInput!\r\n    # ID of the order related to invoice.\r\n    orderId: ID!\r\n  ): InvoiceCreate\r\n  # Deletes an invoice.\r\n  invoiceDelete(\r\n    # ID of an invoice to delete.\r\n    id: ID!\r\n  ): InvoiceDelete\r\n  # Updates an invoice.\r\n  invoiceUpdate(\r\n    # ID of an invoice to update.\r\n    id: ID!\r\n    # Fields to use when updating an invoice.\r\n    input: UpdateInvoiceInput!\r\n  ): InvoiceUpdate\r\n  # Send an invoice notification to the customer.\r\n  invoiceSendNotification(\r\n    # ID of an invoice to be sent.\r\n    id: ID!\r\n  ): InvoiceSendNotification\r\n  # Activate a gift card.\r\n  giftCardActivate(\r\n    # ID of a gift card to activate.\r\n    id: ID!\r\n  ): GiftCardActivate\r\n  # Creates a new gift card.\r\n  giftCardCreate(\r\n    # Fields required to create a gift card.\r\n    input: GiftCardCreateInput!\r\n  ): GiftCardCreate\r\n  # Deactivate a gift card.\r\n  giftCardDeactivate(\r\n    # ID of a gift card to deactivate.\r\n    id: ID!\r\n  ): GiftCardDeactivate\r\n  # Update a gift card.\r\n  giftCardUpdate(\r\n    # ID of a gift card to update.\r\n    id: ID!\r\n    # Fields required to update a gift card.\r\n    input: GiftCardUpdateInput!\r\n  ): GiftCardUpdate\r\n  # Update plugin configuration.\r\n  pluginUpdate(\r\n    # ID of a channel for which the data should be modified.\r\n    channelId: ID\r\n    # ID of plugin to update.\r\n    id: ID!\r\n    # Fields required to update a plugin configuration.\r\n    input: PluginUpdateInput!\r\n  ): PluginUpdate\r\n  # Creates a new sale.\r\n  saleCreate(\r\n    # Fields required to create a sale.\r\n    input: SaleInput!\r\n  ): SaleCreate\r\n  # Deletes a sale.\r\n  saleDelete(\r\n    # ID of a sale to delete.\r\n    id: ID!\r\n  ): SaleDelete\r\n  # Deletes sales.\r\n  saleBulkDelete(\r\n    # List of sale IDs to delete.\r\n    ids: [ID]!\r\n  ): SaleBulkDelete\r\n  # Updates a sale.\r\n  saleUpdate(\r\n    # ID of a sale to update.\r\n    id: ID!\r\n    # Fields required to update a sale.\r\n    input: SaleInput!\r\n  ): SaleUpdate\r\n  # Adds products, categories, collections to a voucher.\r\n  saleCataloguesAdd(\r\n    # ID of a sale.\r\n    id: ID!\r\n    # Fields required to modify catalogue IDs of sale.\r\n    input: CatalogueInput!\r\n  ): SaleAddCatalogues\r\n  # Removes products, categories, collections from a sale.\r\n  saleCataloguesRemove(\r\n    # ID of a sale.\r\n    id: ID!\r\n    # Fields required to modify catalogue IDs of sale.\r\n    input: CatalogueInput!\r\n  ): SaleRemoveCatalogues\r\n  # Creates/updates translations for a sale.\r\n  saleTranslate(\r\n    # Sale ID or SaleTranslatableContent ID.\r\n    id: ID!\r\n    input: NameTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): SaleTranslate\r\n  # Manage sale's availability in channels.\r\n  saleChannelListingUpdate(\r\n    # ID of a sale to update.\r\n    id: ID!\r\n    # Fields required to update sale channel listings.\r\n    input: SaleChannelListingInput!\r\n  ): SaleChannelListingUpdate\r\n  # Creates a new voucher.\r\n  voucherCreate(\r\n    # Fields required to create a voucher.\r\n    input: VoucherInput!\r\n  ): VoucherCreate\r\n  # Deletes a voucher.\r\n  voucherDelete(\r\n    # ID of a voucher to delete.\r\n    id: ID!\r\n  ): VoucherDelete\r\n  # Deletes vouchers.\r\n  voucherBulkDelete(\r\n    # List of voucher IDs to delete.\r\n    ids: [ID]!\r\n  ): VoucherBulkDelete\r\n  # Updates a voucher.\r\n  voucherUpdate(\r\n    # ID of a voucher to update.\r\n    id: ID!\r\n    # Fields required to update a voucher.\r\n    input: VoucherInput!\r\n  ): VoucherUpdate\r\n  # Adds products, categories, collections to a voucher.\r\n  voucherCataloguesAdd(\r\n    # ID of a voucher.\r\n    id: ID!\r\n    # Fields required to modify catalogue IDs of voucher.\r\n    input: CatalogueInput!\r\n  ): VoucherAddCatalogues\r\n  # Removes products, categories, collections from a voucher.\r\n  voucherCataloguesRemove(\r\n    # ID of a voucher.\r\n    id: ID!\r\n    # Fields required to modify catalogue IDs of voucher.\r\n    input: CatalogueInput!\r\n  ): VoucherRemoveCatalogues\r\n  # Creates/updates translations for a voucher.\r\n  voucherTranslate(\r\n    # Voucher ID or VoucherTranslatableContent ID.\r\n    id: ID!\r\n    input: NameTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): VoucherTranslate\r\n  # Manage voucher's availability in channels.\r\n  voucherChannelListingUpdate(\r\n    # ID of a voucher to update.\r\n    id: ID!\r\n    # Fields required to update voucher channel listings.\r\n    input: VoucherChannelListingInput!\r\n  ): VoucherChannelListingUpdate\r\n  # Export products to csv file.\r\n  exportProducts(\r\n    # Fields required to export product data\r\n    input: ExportProductsInput!\r\n  ): ExportProducts\r\n  # Upload a file. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\n  fileUpload(\r\n    # Represents a file in a multipart request.\r\n    file: Upload!\r\n  ): FileUpload\r\n  # Adds a gift card or a voucher to a checkout.\r\n  checkoutAddPromoCode(\r\n    # Checkout ID. DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # Gift card code or voucher code.\r\n    promoCode: String!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutAddPromoCode\r\n  # Update billing address in the existing checkout.\r\n  checkoutBillingAddressUpdate(\r\n    # The billing address of the checkout.\r\n    billingAddress: AddressInput!\r\n    # ID of the checkout.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutBillingAddressUpdate\r\n  # Completes the checkout. As a result a new order is created and a payment charge is made. This action requires a successful payment before it can be performed. In case additional confirmation step as 3D secure is required confirmationNeeded flag will be set to True and no order created until payment is confirmed with second call of this mutation.\r\n  checkoutComplete(\r\n    # Checkout ID.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # Client-side generated data required to finalize the payment.\r\n    paymentData: JSONString\r\n    # URL of a view where users should be redirected to see the order details. URL in RFC 1808 format.\r\n    redirectUrl: String\r\n    # Determines whether to store the payment source for future usage.\r\n    storeSource: Boolean = false\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutComplete\r\n  # Create a new checkout.\r\n  checkoutCreate(\r\n    # Fields required to create checkout.\r\n    input: CheckoutCreateInput!\r\n  ): CheckoutCreate\r\n  # Sets the customer as the owner of the checkout.\r\n  checkoutCustomerAttach(\r\n    # ID of the checkout.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # ID of customer to attach to checkout. Can be used to attach customer to checkout by staff or app. Requires IMPERSONATE_USER permission.\r\n    customerId: ID\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutCustomerAttach\r\n  # Removes the user assigned as the owner of the checkout.\r\n  checkoutCustomerDetach(\r\n    # Checkout ID.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutCustomerDetach\r\n  # Updates email address in the existing checkout object.\r\n  checkoutEmailUpdate(\r\n    # Checkout ID.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # email.\r\n    email: String!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutEmailUpdate\r\n  # Deletes a CheckoutLine.\r\n  checkoutLineDelete(\r\n    # The ID of the checkout.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # ID of the checkout line to delete.\r\n    lineId: ID\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutLineDelete\r\n  # Adds a checkout line to the existing checkout.If line was already in checkout, its quantity will be increased.\r\n  checkoutLinesAdd(\r\n    # The ID of the checkout.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # A list of checkout lines, each containing information about an item in the checkout.\r\n    lines: [CheckoutLineInput]!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutLinesAdd\r\n  # Updates checkout line in the existing checkout.\r\n  checkoutLinesUpdate(\r\n    # The ID of the checkout.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # A list of checkout lines, each containing information about an item in the checkout.\r\n    lines: [CheckoutLineInput]!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutLinesUpdate\r\n  # Remove a gift card or a voucher from a checkout.\r\n  checkoutRemovePromoCode(\r\n    # Checkout ID.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # Gift card code or voucher code.\r\n    promoCode: String!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutRemovePromoCode\r\n  # Create a new payment for given checkout.\r\n  checkoutPaymentCreate(\r\n    # Checkout ID.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # Data required to create a new payment.\r\n    input: PaymentInput!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutPaymentCreate\r\n  # Update shipping address in the existing checkout.\r\n  checkoutShippingAddressUpdate(\r\n    # ID of the checkout.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # The mailing address to where the checkout will be shipped.\r\n    shippingAddress: AddressInput!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutShippingAddressUpdate\r\n  # Updates the shipping address of the checkout.\r\n  checkoutShippingMethodUpdate(\r\n    # Checkout ID.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # Shipping method.\r\n    shippingMethodId: ID!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutShippingMethodUpdate\r\n  # Update language code in the existing checkout.\r\n  checkoutLanguageCodeUpdate(\r\n    # ID of the checkout.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # New language code.\r\n    languageCode: LanguageCodeEnum!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutLanguageCodeUpdate\r\n  # Creates new channel.\r\n  channelCreate(\r\n    # Fields required to create channel.\r\n    input: ChannelCreateInput!\r\n  ): ChannelCreate\r\n  # Update a channel.\r\n  channelUpdate(\r\n    # ID of a channel to update.\r\n    id: ID!\r\n    # Fields required to update a channel.\r\n    input: ChannelUpdateInput!\r\n  ): ChannelUpdate\r\n  # Delete a channel. Orders associated with the deleted channel will be moved to the target channel. Checkouts, product availability, and pricing will be removed.\r\n  channelDelete(\r\n    # ID of a channel to delete.\r\n    id: ID!\r\n    # Fields required to delete a channel.\r\n    input: ChannelDeleteInput\r\n  ): ChannelDelete\r\n  # Activate a channel.\r\n  channelActivate(\r\n    # ID of the channel to activate.\r\n    id: ID!\r\n  ): ChannelActivate\r\n  # Deactivate a channel.\r\n  channelDeactivate(\r\n    # ID of the channel to deactivate.\r\n    id: ID!\r\n  ): ChannelDeactivate\r\n  # Creates an attribute.\r\n  attributeCreate(\r\n    # Fields required to create an attribute.\r\n    input: AttributeCreateInput!\r\n  ): AttributeCreate\r\n  # Deletes an attribute.\r\n  attributeDelete(\r\n    # ID of an attribute to delete.\r\n    id: ID!\r\n  ): AttributeDelete\r\n  # Updates attribute.\r\n  attributeUpdate(\r\n    # ID of an attribute to update.\r\n    id: ID!\r\n    # Fields required to update an attribute.\r\n    input: AttributeUpdateInput!\r\n  ): AttributeUpdate\r\n  # Creates/updates translations for an attribute.\r\n  attributeTranslate(\r\n    # Attribute ID or AttributeTranslatableContent ID.\r\n    id: ID!\r\n    input: NameTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): AttributeTranslate\r\n  # Deletes attributes.\r\n  attributeBulkDelete(\r\n    # List of attribute IDs to delete.\r\n    ids: [ID]!\r\n  ): AttributeBulkDelete\r\n  # Deletes values of attributes.\r\n  attributeValueBulkDelete(\r\n    # List of attribute value IDs to delete.\r\n    ids: [ID]!\r\n  ): AttributeValueBulkDelete\r\n  # Creates a value for an attribute.\r\n  attributeValueCreate(\r\n    # Attribute to which value will be assigned.\r\n    attribute: ID!\r\n    # Fields required to create an AttributeValue.\r\n    input: AttributeValueCreateInput!\r\n  ): AttributeValueCreate\r\n  # Deletes a value of an attribute.\r\n  attributeValueDelete(\r\n    # ID of a value to delete.\r\n    id: ID!\r\n  ): AttributeValueDelete\r\n  # Updates value of an attribute.\r\n  attributeValueUpdate(\r\n    # ID of an AttributeValue to update.\r\n    id: ID!\r\n    # Fields required to update an AttributeValue.\r\n    input: AttributeValueCreateInput!\r\n  ): AttributeValueUpdate\r\n  # Creates/updates translations for an attribute value.\r\n  attributeValueTranslate(\r\n    # AttributeValue ID or AttributeValueTranslatableContent ID.\r\n    id: ID!\r\n    input: AttributeValueTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): AttributeValueTranslate\r\n  # Reorder the values of an attribute.\r\n  attributeReorderValues(\r\n    # ID of an attribute.\r\n    attributeId: ID!\r\n    # The list of reordering operations for given attribute values.\r\n    moves: [ReorderInput]!\r\n  ): AttributeReorderValues\r\n  # Creates a new app.\r\n  appCreate(\r\n    # Fields required to create a new app.\r\n    input: AppInput!\r\n  ): AppCreate\r\n  # Updates an existing app.\r\n  appUpdate(\r\n    # ID of an app to update.\r\n    id: ID!\r\n    # Fields required to update an existing app.\r\n    input: AppInput!\r\n  ): AppUpdate\r\n  # Deletes an app.\r\n  appDelete(\r\n    # ID of an app to delete.\r\n    id: ID!\r\n  ): AppDelete\r\n  # Creates a new token.\r\n  appTokenCreate(\r\n    # Fields required to create a new auth token.\r\n    input: AppTokenInput!\r\n  ): AppTokenCreate\r\n  # Deletes an authentication token assigned to app.\r\n  appTokenDelete(\r\n    # ID of an auth token to delete.\r\n    id: ID!\r\n  ): AppTokenDelete\r\n  # Verify provided app token.\r\n  appTokenVerify(\r\n    # App token to verify.\r\n    token: String!\r\n  ): AppTokenVerify\r\n  # Install new app by using app manifest.\r\n  appInstall(\r\n    # Fields required to install a new app.\r\n    input: AppInstallInput!\r\n  ): AppInstall\r\n  # Retry failed installation of new app.\r\n  appRetryInstall(\r\n    # Determine if app will be set active or not.\r\n    activateAfterInstallation: Boolean = true\r\n    # ID of failed installation.\r\n    id: ID!\r\n  ): AppRetryInstall\r\n  # Delete failed installation.\r\n  appDeleteFailedInstallation(\r\n    # ID of failed installation to delete.\r\n    id: ID!\r\n  ): AppDeleteFailedInstallation\r\n  # Fetch and validate manifest.\r\n  appFetchManifest(manifestUrl: String!): AppFetchManifest\r\n  # Activate the app.\r\n  appActivate(\r\n    # ID of app to activate.\r\n    id: ID!\r\n  ): AppActivate\r\n  # Deactivate the app.\r\n  appDeactivate(\r\n    # ID of app to deactivate.\r\n    id: ID!\r\n  ): AppDeactivate\r\n  # Create JWT token.\r\n  tokenCreate(\r\n    # Email of a user.\r\n    email: String!\r\n    # Password of a user.\r\n    password: String!\r\n  ): CreateToken\r\n  # Refresh JWT token. Mutation tries to take refreshToken from the input.If it fails it will try to take refreshToken from the http-only cookie -refreshToken. csrfToken is required when refreshToken is provided as a cookie.\r\n  tokenRefresh(\r\n    # CSRF token required to refresh token. This argument is required when refreshToken is provided as a cookie.\r\n    csrfToken: String\r\n    # Refresh token.\r\n    refreshToken: String\r\n  ): RefreshToken\r\n  # Verify JWT token.\r\n  tokenVerify(\r\n    # JWT token to validate.\r\n    token: String!\r\n  ): VerifyToken\r\n  # Deactivate all JWT tokens of the currently authenticated user.\r\n  tokensDeactivateAll: DeactivateAllUserTokens\r\n  # Prepare external authentication url for user by custom plugin.\r\n  externalAuthenticationUrl(\r\n    # The data required by plugin to create external authentication url.\r\n    input: JSONString!\r\n    # The ID of the authentication plugin.\r\n    pluginId: String!\r\n  ): ExternalAuthenticationUrl\r\n  # Obtain external access tokens for user by custom plugin.\r\n  externalObtainAccessTokens(\r\n    # The data required by plugin to create authentication data.\r\n    input: JSONString!\r\n    # The ID of the authentication plugin.\r\n    pluginId: String!\r\n  ): ExternalObtainAccessTokens\r\n  # Refresh user's access by custom plugin.\r\n  externalRefresh(\r\n    # The data required by plugin to proceed the refresh process.\r\n    input: JSONString!\r\n    # The ID of the authentication plugin.\r\n    pluginId: String!\r\n  ): ExternalRefresh\r\n  # Logout user by custom plugin.\r\n  externalLogout(\r\n    # The data required by plugin to proceed the logout process.\r\n    input: JSONString!\r\n    # The ID of the authentication plugin.\r\n    pluginId: String!\r\n  ): ExternalLogout\r\n  # Verify external authentication data by plugin.\r\n  externalVerify(\r\n    # The data required by plugin to proceed the verification.\r\n    input: JSONString!\r\n    # The ID of the authentication plugin.\r\n    pluginId: String!\r\n  ): ExternalVerify\r\n  # Sends an email with the account password modification link.\r\n  requestPasswordReset(\r\n    # Slug of a channel which will be used for notify user. Optional when only one channel exists.\r\n    channel: String\r\n    # Email of the user that will be used for password recovery.\r\n    email: String!\r\n    # URL of a view where users should be redirected to reset the password. URL in RFC 1808 format.\r\n    redirectUrl: String!\r\n  ): RequestPasswordReset\r\n  # Confirm user account with token sent by email during registration.\r\n  confirmAccount(\r\n    # E-mail of the user performing account confirmation.\r\n    email: String!\r\n    # A one-time token required to confirm the account.\r\n    token: String!\r\n  ): ConfirmAccount\r\n  # Sets the user's password from the token sent by email using the RequestPasswordReset mutation.\r\n  setPassword(\r\n    # Email of a user.\r\n    email: String!\r\n    # Password of a user.\r\n    password: String!\r\n    # A one-time token required to set the password.\r\n    token: String!\r\n  ): SetPassword\r\n  # Change the password of the logged in user.\r\n  passwordChange(\r\n    # New user password.\r\n    newPassword: String!\r\n    # Current user password.\r\n    oldPassword: String!\r\n  ): PasswordChange\r\n  # Request email change of the logged in user.\r\n  requestEmailChange(\r\n    # Slug of a channel which will be used to notify users. Optional when only one channel exists.\r\n    channel: String\r\n    # New user email.\r\n    newEmail: String!\r\n    # User password.\r\n    password: String!\r\n    # URL of a view where users should be redirected to update the email address. URL in RFC 1808 format.\r\n    redirectUrl: String!\r\n  ): RequestEmailChange\r\n  # Confirm the email change of the logged-in user.\r\n  confirmEmailChange(\r\n    # Slug of a channel which will be used to notify users. Optional when only one channel exists.\r\n    channel: String\r\n    # A one-time token required to change the email.\r\n    token: String!\r\n  ): ConfirmEmailChange\r\n  # Create a new address for the customer.\r\n  accountAddressCreate(\r\n    # Fields required to create address.\r\n    input: AddressInput!\r\n    # A type of address. If provided, the new address will be automatically assigned as the customer's default address of that type.\r\n    type: AddressTypeEnum\r\n  ): AccountAddressCreate\r\n  # Updates an address of the logged-in user.\r\n  accountAddressUpdate(\r\n    # ID of the address to update.\r\n    id: ID!\r\n    # Fields required to update the address.\r\n    input: AddressInput!\r\n  ): AccountAddressUpdate\r\n  # Delete an address of the logged-in user.\r\n  accountAddressDelete(\r\n    # ID of the address to delete.\r\n    id: ID!\r\n  ): AccountAddressDelete\r\n  # Sets a default address for the authenticated user.\r\n  accountSetDefaultAddress(\r\n    # ID of the address to set as default.\r\n    id: ID!\r\n    # The type of address.\r\n    type: AddressTypeEnum!\r\n  ): AccountSetDefaultAddress\r\n  # Register a new user.\r\n  accountRegister(\r\n    # Fields required to create a user.\r\n    input: AccountRegisterInput!\r\n  ): AccountRegister\r\n  # Updates the account of the logged-in user.\r\n  accountUpdate(\r\n    # Fields required to update the account of the logged-in user.\r\n    input: AccountInput!\r\n  ): AccountUpdate\r\n  # Sends an email with the account removal link for the logged-in user.\r\n  accountRequestDeletion(\r\n    # Slug of a channel which will be used to notify users. Optional when only one channel exists.\r\n    channel: String\r\n    # URL of a view where users should be redirected to delete their account. URL in RFC 1808 format.\r\n    redirectUrl: String!\r\n  ): AccountRequestDeletion\r\n  # Remove user account.\r\n  accountDelete(\r\n    # A one-time token required to remove account. Sent by email using AccountRequestDeletion mutation.\r\n    token: String!\r\n  ): AccountDelete\r\n  # Creates user address.\r\n  addressCreate(\r\n    # Fields required to create address.\r\n    input: AddressInput!\r\n    # ID of a user to create address for.\r\n    userId: ID!\r\n  ): AddressCreate\r\n  # Updates an address.\r\n  addressUpdate(\r\n    # ID of the address to update.\r\n    id: ID!\r\n    # Fields required to update the address.\r\n    input: AddressInput!\r\n  ): AddressUpdate\r\n  # Deletes an address.\r\n  addressDelete(\r\n    # ID of the address to delete.\r\n    id: ID!\r\n  ): AddressDelete\r\n  # Sets a default address for the given user.\r\n  addressSetDefault(\r\n    # ID of the address.\r\n    addressId: ID!\r\n    # The type of address.\r\n    type: AddressTypeEnum!\r\n    # ID of the user to change the address for.\r\n    userId: ID!\r\n  ): AddressSetDefault\r\n  # Creates a new customer.\r\n  customerCreate(\r\n    # Fields required to create a customer.\r\n    input: UserCreateInput!\r\n  ): CustomerCreate\r\n  # Updates an existing customer.\r\n  customerUpdate(\r\n    # ID of a customer to update.\r\n    id: ID!\r\n    # Fields required to update a customer.\r\n    input: CustomerInput!\r\n  ): CustomerUpdate\r\n  # Deletes a customer.\r\n  customerDelete(\r\n    # ID of a customer to delete.\r\n    id: ID!\r\n  ): CustomerDelete\r\n  # Deletes customers.\r\n  customerBulkDelete(\r\n    # List of user IDs to delete.\r\n    ids: [ID]!\r\n  ): CustomerBulkDelete\r\n  # Creates a new staff user.\r\n  staffCreate(\r\n    # Fields required to create a staff user.\r\n    input: StaffCreateInput!\r\n  ): StaffCreate\r\n  # Updates an existing staff user.\r\n  staffUpdate(\r\n    # ID of a staff user to update.\r\n    id: ID!\r\n    # Fields required to update a staff user.\r\n    input: StaffUpdateInput!\r\n  ): StaffUpdate\r\n  # Deletes a staff user.\r\n  staffDelete(\r\n    # ID of a staff user to delete.\r\n    id: ID!\r\n  ): StaffDelete\r\n  # Deletes staff users.\r\n  staffBulkDelete(\r\n    # List of user IDs to delete.\r\n    ids: [ID]!\r\n  ): StaffBulkDelete\r\n  # Create a user avatar. Only for staff members. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\n  userAvatarUpdate(\r\n    # Represents an image file in a multipart request.\r\n    image: Upload!\r\n  ): UserAvatarUpdate\r\n  # Deletes a user avatar. Only for staff members.\r\n  userAvatarDelete: UserAvatarDelete\r\n  # Activate or deactivate users.\r\n  userBulkSetActive(\r\n    # List of user IDs to (de)activate).\r\n    ids: [ID]!\r\n    # Determine if users will be set active or not.\r\n    isActive: Boolean!\r\n  ): UserBulkSetActive\r\n  # Create new permission group.\r\n  permissionGroupCreate(\r\n    # Input fields to create permission group.\r\n    input: PermissionGroupCreateInput!\r\n  ): PermissionGroupCreate\r\n  # Update permission group.\r\n  permissionGroupUpdate(\r\n    # ID of the group to update.\r\n    id: ID!\r\n    # Input fields to create permission group.\r\n    input: PermissionGroupUpdateInput!\r\n  ): PermissionGroupUpdate\r\n  # Delete permission group.\r\n  permissionGroupDelete(\r\n    # ID of the group to delete.\r\n    id: ID!\r\n  ): PermissionGroupDelete\r\n}\r\n\r\ninput NameTranslationInput {\r\n  name: String\r\n}\r\n\r\nenum NavigationType {\r\n  # Main storefront navigation.\r\n  MAIN\r\n  # Secondary storefront navigation.\r\n  SECONDARY\r\n}\r\n\r\n# An object with an ID\r\ninterface Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n}\r\n\r\ninterface ObjectWithMetadata {\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n}\r\n\r\n# Represents an order in the shop.\r\ntype Order implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  created: DateTime!\r\n  status: OrderStatus!\r\n  user: User\r\n  trackingClientId: String!\r\n  billingAddress: Address\r\n  shippingAddress: Address\r\n  shippingMethod: ShippingMethod\r\n  shippingMethodName: String\r\n  channel: Channel!\r\n  # Total price of shipping.\r\n  shippingPrice: TaxedMoney!\r\n  shippingTaxRate: Float!\r\n  token: String!\r\n  voucher: Voucher\r\n  # List of user gift cards.\r\n  giftCards: [GiftCard]\r\n  displayGrossPrices: Boolean!\r\n  customerNote: String!\r\n  weight: Weight\r\n  redirectUrl: String\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # List of shipments for the order.\r\n  fulfillments: [Fulfillment]!\r\n  # List of order lines.\r\n  lines: [OrderLine]!\r\n  # List of actions that can be performed in the current state of an order.\r\n  actions: [OrderAction]!\r\n  # Shipping methods that can be used with this order.\r\n  availableShippingMethods: [ShippingMethod]\r\n  # List of order invoices.\r\n  invoices: [Invoice]\r\n  # User-friendly number of an order.\r\n  number: String\r\n  # The ID of the order that was the base for this order.\r\n  original: ID\r\n  # The order origin.\r\n  origin: OrderOriginEnum!\r\n  # Informs if an order is fully paid.\r\n  isPaid: Boolean!\r\n  # Internal payment status.\r\n  paymentStatus: PaymentChargeStatusEnum!\r\n  # User-friendly payment status.\r\n  paymentStatusDisplay: String!\r\n  # List of payments for the order.\r\n  payments: [Payment]\r\n  # Total amount of the order.\r\n  total: TaxedMoney!\r\n  # Undiscounted total amount of the order.\r\n  undiscountedTotal: TaxedMoney!\r\n  # The sum of line prices not including shipping.\r\n  subtotal: TaxedMoney!\r\n  # User-friendly order status.\r\n  statusDisplay: String\r\n  # Informs whether a draft order can be finalized(turned into a regular order).\r\n  canFinalize: Boolean!\r\n  # Amount authorized for the order.\r\n  totalAuthorized: Money!\r\n  # Amount captured by payment.\r\n  totalCaptured: Money!\r\n  # List of events associated with the order.\r\n  events: [OrderEvent]\r\n  # The difference between the paid and the order total amount.\r\n  totalBalance: Money!\r\n  # Email address of the customer.\r\n  userEmail: String\r\n  # Returns True, if order requires shipping.\r\n  isShippingRequired: Boolean!\r\n  languageCode: String! @deprecated(reason: \"Use the `languageCodeEnum` field to fetch the language code. This field will be removed in Saleor 4.0.\")\r\n  # Order language code.\r\n  languageCodeEnum: LanguageCodeEnum!\r\n  # Returns applied discount.\r\n  discount: Money @deprecated(reason: \"Use discounts field. This field will be removed in Saleor 4.0.\")\r\n  # Discount name.\r\n  discountName: String @deprecated(reason: \"Use discounts field. This field will be removed in Saleor 4.0.\")\r\n  # Translated discount name.\r\n  translatedDiscountName: String @deprecated(reason: \"Use discounts field. This field will be removed in Saleor 4.0.\")\r\n  # List of all discounts assigned to the order.\r\n  discounts: [OrderDiscount!]\r\n  # List of errors that occurred during order validation.\r\n  errors: [OrderError!]!\r\n}\r\n\r\nenum OrderAction {\r\n  # Represents the capture action.\r\n  CAPTURE\r\n  # Represents a mark-as-paid action.\r\n  MARK_AS_PAID\r\n  # Represents a refund action.\r\n  REFUND\r\n  # Represents a void action.\r\n  VOID\r\n}\r\n\r\n# Adds note to the order.\r\ntype OrderAddNote {\r\n  # Order with the note added.\r\n  order: Order\r\n  # Order note created.\r\n  event: OrderEvent\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput OrderAddNoteInput {\r\n  # Note message.\r\n  message: String!\r\n}\r\n\r\n# Cancels orders.\r\ntype OrderBulkCancel {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Cancel an order.\r\ntype OrderCancel {\r\n  # Canceled order.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Capture an order.\r\ntype OrderCapture {\r\n  # Captured order.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Confirms an unconfirmed order by changing status to unfulfilled.\r\ntype OrderConfirm {\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ntype OrderCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [OrderCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype OrderCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Order!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\nenum OrderDirection {\r\n  # Specifies an ascending sort order.\r\n  ASC\r\n  # Specifies a descending sort order.\r\n  DESC\r\n}\r\n\r\n# Contains all details related to the applied discount to the order.\r\ntype OrderDiscount implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  type: OrderDiscountType!\r\n  # Type of the discount: fixed or percent\r\n  valueType: DiscountValueTypeEnum!\r\n  # Value of the discount. Can store fixed value or percent value\r\n  value: PositiveDecimal!\r\n  name: String\r\n  translatedName: String\r\n  # Explanation for the applied discount.\r\n  reason: String\r\n  # Returns amount of discount.\r\n  amount: Money!\r\n}\r\n\r\n# Adds discount to the order.\r\ntype OrderDiscountAdd {\r\n  # Order which has been discounted.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput OrderDiscountCommonInput {\r\n  # Type of the discount: fixed or percent\r\n  valueType: DiscountValueTypeEnum!\r\n  # Value of the discount. Can store fixed value or percent value\r\n  value: PositiveDecimal!\r\n  # Explanation for the applied discount.\r\n  reason: String\r\n}\r\n\r\n# Remove discount from the order.\r\ntype OrderDiscountDelete {\r\n  # Order which has removed discount.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum OrderDiscountType {\r\n  # Voucher\r\n  VOUCHER\r\n  # Manual\r\n  MANUAL\r\n}\r\n\r\n# Update discount for the order.\r\ntype OrderDiscountUpdate {\r\n  # Order which has been discounted.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput OrderDraftFilterInput {\r\n  customer: String\r\n  created: DateRangeInput\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n  channels: [ID]\r\n}\r\n\r\ntype OrderError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: OrderErrorCode!\r\n  # Warehouse ID which causes the error.\r\n  warehouse: ID\r\n  # List of order line IDs that cause the error.\r\n  orderLines: [ID!]\r\n  # List of product variants that are associated with the error\r\n  variants: [ID!]\r\n  # A type of address that causes the error.\r\n  addressType: AddressTypeEnum\r\n}\r\n\r\n# An enumeration.\r\nenum OrderErrorCode {\r\n  BILLING_ADDRESS_NOT_SET\r\n  CANNOT_CANCEL_FULFILLMENT\r\n  CANNOT_CANCEL_ORDER\r\n  CANNOT_DELETE\r\n  CANNOT_DISCOUNT\r\n  CANNOT_REFUND\r\n  CAPTURE_INACTIVE_PAYMENT\r\n  NOT_EDITABLE\r\n  FULFILL_ORDER_LINE\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  PRODUCT_NOT_PUBLISHED\r\n  PRODUCT_UNAVAILABLE_FOR_PURCHASE\r\n  NOT_FOUND\r\n  ORDER_NO_SHIPPING_ADDRESS\r\n  PAYMENT_ERROR\r\n  PAYMENT_MISSING\r\n  REQUIRED\r\n  SHIPPING_METHOD_NOT_APPLICABLE\r\n  SHIPPING_METHOD_REQUIRED\r\n  TAX_ERROR\r\n  UNIQUE\r\n  VOID_INACTIVE_PAYMENT\r\n  ZERO_QUANTITY\r\n  INVALID_QUANTITY\r\n  INSUFFICIENT_STOCK\r\n  DUPLICATED_INPUT_ITEM\r\n  NOT_AVAILABLE_IN_CHANNEL\r\n  CHANNEL_INACTIVE\r\n}\r\n\r\n# History log of the order.\r\ntype OrderEvent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Date when event happened at in ISO 8601 format.\r\n  date: DateTime\r\n  # Order event type.\r\n  type: OrderEventsEnum\r\n  # User who performed the action.\r\n  user: User\r\n  # App that performed the action.\r\n  app: App\r\n  # Content of the event.\r\n  message: String\r\n  # Email of the customer.\r\n  email: String\r\n  # Type of an email sent to the customer.\r\n  emailType: OrderEventsEmailsEnum\r\n  # Amount of money.\r\n  amount: Float\r\n  # The payment ID from the payment gateway.\r\n  paymentId: String\r\n  # The payment gateway of the payment.\r\n  paymentGateway: String\r\n  # Number of items.\r\n  quantity: Int\r\n  # Composed ID of the Fulfillment.\r\n  composedId: String\r\n  # User-friendly number of an order.\r\n  orderNumber: String\r\n  # Number of an invoice related to the order.\r\n  invoiceNumber: String\r\n  # List of oversold lines names.\r\n  oversoldItems: [String]\r\n  # The concerned lines.\r\n  lines: [OrderEventOrderLineObject]\r\n  # The lines fulfilled.\r\n  fulfilledItems: [FulfillmentLine]\r\n  # The warehouse were items were restocked.\r\n  warehouse: Warehouse\r\n  # The transaction reference of captured payment.\r\n  transactionReference: String\r\n  # Define if shipping costs were included to the refund.\r\n  shippingCostsIncluded: Boolean\r\n  # The order which is related to this order.\r\n  relatedOrder: Order\r\n  # The discount applied to the order.\r\n  discount: OrderEventDiscountObject\r\n}\r\n\r\ntype OrderEventCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [OrderEventCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype OrderEventCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: OrderEvent!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\ntype OrderEventDiscountObject {\r\n  # Type of the discount: fixed or percent.\r\n  valueType: DiscountValueTypeEnum!\r\n  # Value of the discount. Can store fixed value or percent value.\r\n  value: PositiveDecimal!\r\n  # Explanation for the applied discount.\r\n  reason: String\r\n  # Returns amount of discount.\r\n  amount: Money\r\n  # Type of the discount: fixed or percent.\r\n  oldValueType: DiscountValueTypeEnum\r\n  # Value of the discount. Can store fixed value or percent value.\r\n  oldValue: PositiveDecimal\r\n  # Returns amount of discount.\r\n  oldAmount: Money\r\n}\r\n\r\ntype OrderEventOrderLineObject {\r\n  # The variant quantity.\r\n  quantity: Int\r\n  # The order line.\r\n  orderLine: OrderLine\r\n  # The variant name.\r\n  itemName: String\r\n  # The discount applied to the order line.\r\n  discount: OrderEventDiscountObject\r\n}\r\n\r\n# An enumeration.\r\nenum OrderEventsEmailsEnum {\r\n  PAYMENT_CONFIRMATION\r\n  CONFIRMED\r\n  SHIPPING_CONFIRMATION\r\n  TRACKING_UPDATED\r\n  ORDER_CONFIRMATION\r\n  ORDER_CANCEL\r\n  ORDER_REFUND\r\n  FULFILLMENT_CONFIRMATION\r\n  DIGITAL_LINKS\r\n}\r\n\r\n# An enumeration.\r\nenum OrderEventsEnum {\r\n  DRAFT_CREATED\r\n  DRAFT_CREATED_FROM_REPLACE\r\n  ADDED_PRODUCTS\r\n  REMOVED_PRODUCTS\r\n  PLACED\r\n  PLACED_FROM_DRAFT\r\n  OVERSOLD_ITEMS\r\n  CANCELED\r\n  ORDER_MARKED_AS_PAID\r\n  ORDER_FULLY_PAID\r\n  ORDER_REPLACEMENT_CREATED\r\n  ORDER_DISCOUNT_ADDED\r\n  ORDER_DISCOUNT_AUTOMATICALLY_UPDATED\r\n  ORDER_DISCOUNT_UPDATED\r\n  ORDER_DISCOUNT_DELETED\r\n  ORDER_LINE_DISCOUNT_UPDATED\r\n  ORDER_LINE_DISCOUNT_REMOVED\r\n  ORDER_LINE_PRODUCT_DELETED\r\n  ORDER_LINE_VARIANT_DELETED\r\n  UPDATED_ADDRESS\r\n  EMAIL_SENT\r\n  CONFIRMED\r\n  PAYMENT_AUTHORIZED\r\n  PAYMENT_CAPTURED\r\n  EXTERNAL_SERVICE_NOTIFICATION\r\n  PAYMENT_REFUNDED\r\n  PAYMENT_VOIDED\r\n  PAYMENT_FAILED\r\n  INVOICE_REQUESTED\r\n  INVOICE_GENERATED\r\n  INVOICE_UPDATED\r\n  INVOICE_SENT\r\n  FULFILLMENT_CANCELED\r\n  FULFILLMENT_RESTOCKED_ITEMS\r\n  FULFILLMENT_FULFILLED_ITEMS\r\n  FULFILLMENT_REFUNDED\r\n  FULFILLMENT_RETURNED\r\n  FULFILLMENT_REPLACED\r\n  TRACKING_UPDATED\r\n  NOTE_ADDED\r\n  OTHER\r\n}\r\n\r\ninput OrderFilterInput {\r\n  paymentStatus: [PaymentChargeStatusEnum]\r\n  status: [OrderStatusFilter]\r\n  customer: String\r\n  created: DateRangeInput\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n  channels: [ID]\r\n  ids: [ID]\r\n}\r\n\r\n# Creates new fulfillments for an order.\r\ntype OrderFulfill {\r\n  # List of created fulfillments.\r\n  fulfillments: [Fulfillment]\r\n  # Fulfilled order.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput OrderFulfillInput {\r\n  # List of items informing how to fulfill the order.\r\n  lines: [OrderFulfillLineInput!]!\r\n  # If true, send an email notification to the customer.\r\n  notifyCustomer: Boolean\r\n  # If true, then allow proceed fulfillment when stock is exceeded.\r\n  allowStockToBeExceeded: Boolean = false\r\n}\r\n\r\ninput OrderFulfillLineInput {\r\n  # The ID of the order line.\r\n  orderLineId: ID\r\n  # List of stock items to create.\r\n  stocks: [OrderFulfillStockInput!]!\r\n}\r\n\r\ninput OrderFulfillStockInput {\r\n  # The number of line items to be fulfilled from given warehouse.\r\n  quantity: Int!\r\n  # ID of the warehouse from which the item will be fulfilled.\r\n  warehouse: ID!\r\n}\r\n\r\n# Represents order line of particular order.\r\ntype OrderLine implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  productName: String!\r\n  variantName: String!\r\n  productSku: String!\r\n  isShippingRequired: Boolean!\r\n  quantity: Int!\r\n  quantityFulfilled: Int!\r\n  unitDiscountReason: String\r\n  taxRate: Float!\r\n  digitalContentUrl: DigitalContentUrl\r\n  # The main thumbnail for the ordered product.\r\n  thumbnail(\r\n    # Size of thumbnail.\r\n    size: Int\r\n  ): Image\r\n  # Price of the single item in the order line.\r\n  unitPrice: TaxedMoney!\r\n  # Price of the single item in the order line without applied an order line discount.\r\n  undiscountedUnitPrice: TaxedMoney!\r\n  # The discount applied to the single order line.\r\n  unitDiscount: Money!\r\n  # Value of the discount. Can store fixed value or percent value\r\n  unitDiscountValue: PositiveDecimal!\r\n  # Price of the order line.\r\n  totalPrice: TaxedMoney!\r\n  # A purchased product variant. Note: this field may be null if the variant has been removed from stock at all.\r\n  variant: ProductVariant\r\n  # Product name in the customer's language\r\n  translatedProductName: String!\r\n  # Variant name in the customer's language\r\n  translatedVariantName: String!\r\n  # List of allocations across warehouses.\r\n  allocations: [Allocation!]\r\n  # Type of the discount: fixed or percent\r\n  unitDiscountType: DiscountValueTypeEnum\r\n}\r\n\r\ninput OrderLineCreateInput {\r\n  # Number of variant items ordered.\r\n  quantity: Int!\r\n  # Product variant ID.\r\n  variantId: ID!\r\n}\r\n\r\n# Deletes an order line from an order.\r\ntype OrderLineDelete {\r\n  # A related order.\r\n  order: Order\r\n  # An order line that was deleted.\r\n  orderLine: OrderLine\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Remove discount applied to the order line.\r\ntype OrderLineDiscountRemove {\r\n  # Order line which has removed discount.\r\n  orderLine: OrderLine\r\n  # Order which is related to line which has removed discount.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Update discount for the order line.\r\ntype OrderLineDiscountUpdate {\r\n  # Order line which has been discounted.\r\n  orderLine: OrderLine\r\n  # Order which is related to the discounted line.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput OrderLineInput {\r\n  # Number of variant items ordered.\r\n  quantity: Int!\r\n}\r\n\r\n# Updates an order line of an order.\r\ntype OrderLineUpdate {\r\n  # Related order.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n  orderLine: OrderLine\r\n}\r\n\r\n# Create order lines for an order.\r\ntype OrderLinesCreate {\r\n  # Related order.\r\n  order: Order\r\n  # List of added order lines.\r\n  orderLines: [OrderLine!]\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Mark order as manually paid.\r\ntype OrderMarkAsPaid {\r\n  # Order marked as paid.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum OrderOriginEnum {\r\n  CHECKOUT\r\n  DRAFT\r\n  REISSUE\r\n}\r\n\r\n# Refund an order.\r\ntype OrderRefund {\r\n  # A refunded order.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput OrderRefundFulfillmentLineInput {\r\n  # The ID of the fulfillment line to refund.\r\n  fulfillmentLineId: ID!\r\n  # The number of items to be refunded.\r\n  quantity: Int!\r\n}\r\n\r\ninput OrderRefundLineInput {\r\n  # The ID of the order line to refund.\r\n  orderLineId: ID!\r\n  # The number of items to be refunded.\r\n  quantity: Int!\r\n}\r\n\r\ninput OrderRefundProductsInput {\r\n  # List of unfulfilled lines to refund.\r\n  orderLines: [OrderRefundLineInput!]\r\n  # List of fulfilled lines to refund.\r\n  fulfillmentLines: [OrderRefundFulfillmentLineInput!]\r\n  # The total amount of refund when the value is provided manually.\r\n  amountToRefund: PositiveDecimal\r\n  # If true, Saleor will refund shipping costs. If amountToRefund is providedincludeShippingCosts will be ignored.\r\n  includeShippingCosts: Boolean = false\r\n}\r\n\r\ninput OrderReturnFulfillmentLineInput {\r\n  # The ID of the fulfillment line to return.\r\n  fulfillmentLineId: ID!\r\n  # The number of items to be returned.\r\n  quantity: Int!\r\n  # Determines, if the line should be added to replace order.\r\n  replace: Boolean = false\r\n}\r\n\r\ninput OrderReturnLineInput {\r\n  # The ID of the order line to return.\r\n  orderLineId: ID!\r\n  # The number of items to be returned.\r\n  quantity: Int!\r\n  # Determines, if the line should be added to replace order.\r\n  replace: Boolean = false\r\n}\r\n\r\ninput OrderReturnProductsInput {\r\n  # List of unfulfilled lines to return.\r\n  orderLines: [OrderReturnLineInput!]\r\n  # List of fulfilled lines to return.\r\n  fulfillmentLines: [OrderReturnFulfillmentLineInput!]\r\n  # The total amount of refund when the value is provided manually.\r\n  amountToRefund: PositiveDecimal\r\n  # If true, Saleor will refund shipping costs. If amountToRefund is providedincludeShippingCosts will be ignored.\r\n  includeShippingCosts: Boolean = false\r\n  # If true, Saleor will call refund action for all lines.\r\n  refund: Boolean = false\r\n}\r\n\r\n# Order related settings from site settings.\r\ntype OrderSettings {\r\n  automaticallyConfirmAllNewOrders: Boolean!\r\n}\r\n\r\ntype OrderSettingsError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: OrderSettingsErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum OrderSettingsErrorCode {\r\n  INVALID\r\n}\r\n\r\n# Update shop order settings.\r\ntype OrderSettingsUpdate {\r\n  # Order settings.\r\n  orderSettings: OrderSettings\r\n  orderSettingsErrors: [OrderSettingsError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderSettingsError!]!\r\n}\r\n\r\ninput OrderSettingsUpdateInput {\r\n  # When disabled, all new orders from checkout will be marked as unconfirmed. When enabled orders from checkout will become unfulfilled immediately.\r\n  automaticallyConfirmAllNewOrders: Boolean!\r\n}\r\n\r\nenum OrderSortField {\r\n  # Sort orders by number.\r\n  NUMBER\r\n  # Sort orders by creation date.\r\n  CREATION_DATE\r\n  # Sort orders by customer.\r\n  CUSTOMER\r\n  # Sort orders by payment.\r\n  PAYMENT\r\n  # Sort orders by fulfillment status.\r\n  FULFILLMENT_STATUS\r\n}\r\n\r\ninput OrderSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort orders by the selected field.\r\n  field: OrderSortField!\r\n}\r\n\r\n# An enumeration.\r\nenum OrderStatus {\r\n  # Draft\r\n  DRAFT\r\n  # Unconfirmed\r\n  UNCONFIRMED\r\n  # Unfulfilled\r\n  UNFULFILLED\r\n  # Partially fulfilled\r\n  PARTIALLY_FULFILLED\r\n  # Partially returned\r\n  PARTIALLY_RETURNED\r\n  # Returned\r\n  RETURNED\r\n  # Fulfilled\r\n  FULFILLED\r\n  # Canceled\r\n  CANCELED\r\n}\r\n\r\nenum OrderStatusFilter {\r\n  READY_TO_FULFILL\r\n  READY_TO_CAPTURE\r\n  UNFULFILLED\r\n  UNCONFIRMED\r\n  PARTIALLY_FULFILLED\r\n  FULFILLED\r\n  CANCELED\r\n}\r\n\r\n# Updates an order.\r\ntype OrderUpdate {\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n  order: Order\r\n}\r\n\r\ninput OrderUpdateInput {\r\n  # Billing address of the customer.\r\n  billingAddress: AddressInput\r\n  # Email address of the customer.\r\n  userEmail: String\r\n  # Shipping address of the customer.\r\n  shippingAddress: AddressInput\r\n}\r\n\r\n# Updates a shipping method of the order.\r\ntype OrderUpdateShipping {\r\n  # Order with updated shipping method.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput OrderUpdateShippingInput {\r\n  # ID of the selected shipping method.\r\n  shippingMethod: ID\r\n}\r\n\r\n# Void an order.\r\ntype OrderVoid {\r\n  # A voided order.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# A static page that can be manually added by a shop operator through the dashboard.\r\ntype Page implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  title: String!\r\n  content: JSONString\r\n  publicationDate: Date\r\n  isPublished: Boolean!\r\n  slug: String!\r\n  pageType: PageType!\r\n  created: DateTime!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Content of the page (JSON).\r\n  contentJson: JSONString! @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `content` field instead.\")\r\n  # Returns translated page fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for page.\r\n    languageCode: LanguageCodeEnum!\r\n  ): PageTranslation\r\n  # List of attributes assigned to this product.\r\n  attributes: [SelectedAttribute!]!\r\n}\r\n\r\n# Assign attributes to a given page type.\r\ntype PageAttributeAssign {\r\n  # The updated page type.\r\n  pageType: PageType\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n}\r\n\r\n# Unassign attributes from a given page type.\r\ntype PageAttributeUnassign {\r\n  # The updated page type.\r\n  pageType: PageType\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n}\r\n\r\n# Deletes pages.\r\ntype PageBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n}\r\n\r\n# Publish pages.\r\ntype PageBulkPublish {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n}\r\n\r\ntype PageCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [PageCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype PageCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Page!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new page.\r\ntype PageCreate {\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n  page: Page\r\n}\r\n\r\ninput PageCreateInput {\r\n  # Page internal name.\r\n  slug: String\r\n  # Page title.\r\n  title: String\r\n  # Page content in JSON format.\r\n  content: JSONString\r\n  # List of attributes.\r\n  attributes: [AttributeValueInput!]\r\n  # Determines if page is visible in the storefront.\r\n  isPublished: Boolean\r\n  # Publication date. ISO 8601 standard.\r\n  publicationDate: String\r\n  # Search engine optimization fields.\r\n  seo: SeoInput\r\n  # ID of the page type that page belongs to.\r\n  pageType: ID!\r\n}\r\n\r\n# Deletes a page.\r\ntype PageDelete {\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n  page: Page\r\n}\r\n\r\ntype PageError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: PageErrorCode!\r\n  # List of attributes IDs which causes the error.\r\n  attributes: [ID!]\r\n  # List of attribute values IDs which causes the error.\r\n  values: [ID!]\r\n}\r\n\r\n# An enumeration.\r\nenum PageErrorCode {\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  DUPLICATED_INPUT_ITEM\r\n  ATTRIBUTE_ALREADY_ASSIGNED\r\n}\r\n\r\ninput PageFilterInput {\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n  pageTypes: [ID]\r\n  ids: [ID]\r\n}\r\n\r\n# The Relay compliant `PageInfo` type, containing data necessary to paginate this connection.\r\ntype PageInfo {\r\n  # When paginating forwards, are there more items?\r\n  hasNextPage: Boolean!\r\n  # When paginating backwards, are there more items?\r\n  hasPreviousPage: Boolean!\r\n  # When paginating backwards, the cursor to continue.\r\n  startCursor: String\r\n  # When paginating forwards, the cursor to continue.\r\n  endCursor: String\r\n}\r\n\r\ninput PageInput {\r\n  # Page internal name.\r\n  slug: String\r\n  # Page title.\r\n  title: String\r\n  # Page content in JSON format.\r\n  content: JSONString\r\n  # List of attributes.\r\n  attributes: [AttributeValueInput!]\r\n  # Determines if page is visible in the storefront.\r\n  isPublished: Boolean\r\n  # Publication date. ISO 8601 standard.\r\n  publicationDate: String\r\n  # Search engine optimization fields.\r\n  seo: SeoInput\r\n}\r\n\r\n# Reorder page attribute values.\r\ntype PageReorderAttributeValues {\r\n  # Page from which attribute values are reordered.\r\n  page: Page\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n}\r\n\r\nenum PageSortField {\r\n  # Sort pages by title.\r\n  TITLE\r\n  # Sort pages by slug.\r\n  SLUG\r\n  # Sort pages by visibility.\r\n  VISIBILITY\r\n  # Sort pages by creation date.\r\n  CREATION_DATE\r\n  # Sort pages by publication date.\r\n  PUBLICATION_DATE\r\n}\r\n\r\ninput PageSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort pages by the selected field.\r\n  field: PageSortField!\r\n}\r\n\r\ntype PageTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  title: String!\r\n  content: JSONString\r\n  # Content of the page (JSON).\r\n  contentJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `content` field instead.\")\r\n  # Returns translated page fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for page.\r\n    languageCode: LanguageCodeEnum!\r\n  ): PageTranslation\r\n  # ('A static page that can be manually added by a shop operator ', 'through the dashboard.')\r\n  page: Page @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n  # List of page content attribute values that can be translated.\r\n  attributeValues: [AttributeValueTranslatableContent!]!\r\n}\r\n\r\n# Creates/updates translations for a page.\r\ntype PageTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  page: PageTranslatableContent\r\n}\r\n\r\ntype PageTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  title: String\r\n  content: JSONString\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n  # Translated description of the page (JSON).\r\n  contentJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `content` field instead.\")\r\n}\r\n\r\ninput PageTranslationInput {\r\n  seoTitle: String\r\n  seoDescription: String\r\n  title: String\r\n  content: JSONString\r\n}\r\n\r\n# Represents a type of page. It defines what attributes are available to pages of this type.\r\ntype PageType implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  slug: String!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Page attributes of that page type.\r\n  attributes: [Attribute]\r\n  # Attributes that can be assigned to the page type.\r\n  availableAttributes(\r\n    filter: AttributeFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): AttributeCountableConnection\r\n  # Whether page type has pages assigned.\r\n  hasPages: Boolean\r\n}\r\n\r\n# Delete page types.\r\ntype PageTypeBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n}\r\n\r\ntype PageTypeCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [PageTypeCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype PageTypeCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: PageType!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Create a new page type.\r\ntype PageTypeCreate {\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n  pageType: PageType\r\n}\r\n\r\ninput PageTypeCreateInput {\r\n  # Name of the page type.\r\n  name: String\r\n  # Page type slug.\r\n  slug: String\r\n  # List of attribute IDs to be assigned to the page type.\r\n  addAttributes: [ID!]\r\n}\r\n\r\n# Delete a page type.\r\ntype PageTypeDelete {\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n  pageType: PageType\r\n}\r\n\r\ninput PageTypeFilterInput {\r\n  search: String\r\n}\r\n\r\n# Reorder the attributes of a page type.\r\ntype PageTypeReorderAttributes {\r\n  # Page type from which attributes are reordered.\r\n  pageType: PageType\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n}\r\n\r\nenum PageTypeSortField {\r\n  # Sort page types by name.\r\n  NAME\r\n  # Sort page types by slug.\r\n  SLUG\r\n}\r\n\r\ninput PageTypeSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort page types by the selected field.\r\n  field: PageTypeSortField!\r\n}\r\n\r\n# Update page type.\r\ntype PageTypeUpdate {\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n  pageType: PageType\r\n}\r\n\r\ninput PageTypeUpdateInput {\r\n  # Name of the page type.\r\n  name: String\r\n  # Page type slug.\r\n  slug: String\r\n  # List of attribute IDs to be assigned to the page type.\r\n  addAttributes: [ID!]\r\n  # List of attribute IDs to be assigned to the page type.\r\n  removeAttributes: [ID!]\r\n}\r\n\r\n# Updates an existing page.\r\ntype PageUpdate {\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n  page: Page\r\n}\r\n\r\n# Change the password of the logged in user.\r\ntype PasswordChange {\r\n  # A user instance with a new password.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Represents a payment of a given type.\r\ntype Payment implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  gateway: String!\r\n  isActive: Boolean!\r\n  created: DateTime!\r\n  modified: DateTime!\r\n  token: String!\r\n  checkout: Checkout\r\n  order: Order\r\n  paymentMethodType: String!\r\n  customerIpAddress: String\r\n  # Internal payment status.\r\n  chargeStatus: PaymentChargeStatusEnum!\r\n  # List of actions that can be performed in the current state of a payment.\r\n  actions: [OrderAction]!\r\n  # Total amount of the payment.\r\n  total: Money\r\n  # Total amount captured for this payment.\r\n  capturedAmount: Money\r\n  # List of all transactions within this payment.\r\n  transactions: [Transaction]\r\n  # Maximum amount of money that can be captured.\r\n  availableCaptureAmount: Money\r\n  # Maximum amount of money that can be refunded.\r\n  availableRefundAmount: Money\r\n  # The details of the card used for this payment.\r\n  creditCard: CreditCard\r\n}\r\n\r\n# Captures the authorized payment amount.\r\ntype PaymentCapture {\r\n  # Updated payment.\r\n  payment: Payment\r\n  paymentErrors: [PaymentError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PaymentError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum PaymentChargeStatusEnum {\r\n  NOT_CHARGED\r\n  PENDING\r\n  PARTIALLY_CHARGED\r\n  FULLY_CHARGED\r\n  PARTIALLY_REFUNDED\r\n  FULLY_REFUNDED\r\n  REFUSED\r\n  CANCELLED\r\n}\r\n\r\ntype PaymentCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [PaymentCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype PaymentCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Payment!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\ntype PaymentError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: PaymentErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum PaymentErrorCode {\r\n  BILLING_ADDRESS_NOT_SET\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  PARTIAL_PAYMENT_NOT_ALLOWED\r\n  SHIPPING_ADDRESS_NOT_SET\r\n  INVALID_SHIPPING_METHOD\r\n  SHIPPING_METHOD_NOT_SET\r\n  PAYMENT_ERROR\r\n  NOT_SUPPORTED_GATEWAY\r\n  CHANNEL_INACTIVE\r\n}\r\n\r\ninput PaymentFilterInput {\r\n  checkouts: [ID]\r\n}\r\n\r\n# Available payment gateway backend with configuration necessary to setup client.\r\ntype PaymentGateway {\r\n  # Payment gateway name.\r\n  name: String!\r\n  # Payment gateway ID.\r\n  id: ID!\r\n  # Payment gateway client configuration.\r\n  config: [GatewayConfigLine!]!\r\n  # Payment gateway supported currencies.\r\n  currencies: [String]!\r\n}\r\n\r\n# Initializes payment process when it is required by gateway.\r\ntype PaymentInitialize {\r\n  initializedPayment: PaymentInitialized\r\n  paymentErrors: [PaymentError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PaymentError!]!\r\n}\r\n\r\n# Server-side data generated by a payment gateway. Optional step when the payment provider requires an additional action to initialize payment session.\r\ntype PaymentInitialized {\r\n  # ID of a payment gateway.\r\n  gateway: String!\r\n  # Payment gateway name.\r\n  name: String!\r\n  # Initialized data by gateway.\r\n  data: JSONString\r\n}\r\n\r\ninput PaymentInput {\r\n  # A gateway to use with that payment.\r\n  gateway: String!\r\n  # Client-side generated payment token, representing customer's billing data in a secure manner.\r\n  token: String\r\n  # Total amount of the transaction, including all taxes and discounts. If no amount is provided, the checkout total will be used.\r\n  amount: PositiveDecimal\r\n  # URL of a storefront view where user should be redirected after requiring additional actions. Payment with additional actions will not be finished if this field is not provided.\r\n  returnUrl: String\r\n}\r\n\r\n# Refunds the captured payment amount.\r\ntype PaymentRefund {\r\n  # Updated payment.\r\n  payment: Payment\r\n  paymentErrors: [PaymentError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PaymentError!]!\r\n}\r\n\r\n# Represents a payment source stored for user in payment gateway, such as credit card.\r\ntype PaymentSource {\r\n  # Payment gateway name.\r\n  gateway: String!\r\n  # ID of stored payment method.\r\n  paymentMethodId: String\r\n  # Stored credit card details if available.\r\n  creditCardInfo: CreditCard\r\n}\r\n\r\n# Voids the authorized payment.\r\ntype PaymentVoid {\r\n  # Updated payment.\r\n  payment: Payment\r\n  paymentErrors: [PaymentError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PaymentError!]!\r\n}\r\n\r\n# Represents a permission object in a friendly form.\r\ntype Permission {\r\n  # Internal code for permission.\r\n  code: PermissionEnum!\r\n  # Describe action(s) allowed to do by permission.\r\n  name: String!\r\n}\r\n\r\n# An enumeration.\r\nenum PermissionEnum {\r\n  MANAGE_USERS\r\n  MANAGE_STAFF\r\n  IMPERSONATE_USER\r\n  MANAGE_APPS\r\n  MANAGE_CHANNELS\r\n  MANAGE_DISCOUNTS\r\n  MANAGE_PLUGINS\r\n  MANAGE_GIFT_CARD\r\n  MANAGE_MENUS\r\n  MANAGE_ORDERS\r\n  MANAGE_PAGES\r\n  MANAGE_PAGE_TYPES_AND_ATTRIBUTES\r\n  HANDLE_PAYMENTS\r\n  MANAGE_PRODUCTS\r\n  MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES\r\n  MANAGE_SHIPPING\r\n  MANAGE_SETTINGS\r\n  MANAGE_TRANSLATIONS\r\n  MANAGE_CHECKOUTS\r\n}\r\n\r\n# Create new permission group.\r\ntype PermissionGroupCreate {\r\n  permissionGroupErrors: [PermissionGroupError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PermissionGroupError!]!\r\n  group: Group\r\n}\r\n\r\ninput PermissionGroupCreateInput {\r\n  # List of permission code names to assign to this group.\r\n  addPermissions: [PermissionEnum!]\r\n  # List of users to assign to this group.\r\n  addUsers: [ID!]\r\n  # Group name.\r\n  name: String!\r\n}\r\n\r\n# Delete permission group.\r\ntype PermissionGroupDelete {\r\n  permissionGroupErrors: [PermissionGroupError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PermissionGroupError!]!\r\n  group: Group\r\n}\r\n\r\ntype PermissionGroupError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: PermissionGroupErrorCode!\r\n  # List of permissions which causes the error.\r\n  permissions: [PermissionEnum!]\r\n  # List of user IDs which causes the error.\r\n  users: [ID!]\r\n}\r\n\r\n# An enumeration.\r\nenum PermissionGroupErrorCode {\r\n  ASSIGN_NON_STAFF_MEMBER\r\n  DUPLICATED_INPUT_ITEM\r\n  CANNOT_REMOVE_FROM_LAST_GROUP\r\n  LEFT_NOT_MANAGEABLE_PERMISSION\r\n  OUT_OF_SCOPE_PERMISSION\r\n  OUT_OF_SCOPE_USER\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\ninput PermissionGroupFilterInput {\r\n  search: String\r\n}\r\n\r\nenum PermissionGroupSortField {\r\n  # Sort permission group accounts by name.\r\n  NAME\r\n}\r\n\r\ninput PermissionGroupSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort permission group by the selected field.\r\n  field: PermissionGroupSortField!\r\n}\r\n\r\n# Update permission group.\r\ntype PermissionGroupUpdate {\r\n  permissionGroupErrors: [PermissionGroupError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PermissionGroupError!]!\r\n  group: Group\r\n}\r\n\r\ninput PermissionGroupUpdateInput {\r\n  # List of permission code names to assign to this group.\r\n  addPermissions: [PermissionEnum!]\r\n  # List of users to assign to this group.\r\n  addUsers: [ID!]\r\n  # Group name.\r\n  name: String\r\n  # List of permission code names to unassign from this group.\r\n  removePermissions: [PermissionEnum!]\r\n  # List of users to unassign from this group.\r\n  removeUsers: [ID!]\r\n}\r\n\r\n# Plugin.\r\ntype Plugin {\r\n  # Identifier of the plugin.\r\n  id: ID!\r\n  # Name of the plugin.\r\n  name: String!\r\n  # Description of the plugin.\r\n  description: String!\r\n  # Global configuration of the plugin (not channel-specific).\r\n  globalConfiguration: PluginConfiguration\r\n  # Channel-specific plugin configuration.\r\n  channelConfigurations: [PluginConfiguration!]!\r\n}\r\n\r\n# Stores information about a configuration of plugin.\r\ntype PluginConfiguration {\r\n  # Determines if plugin is active or not.\r\n  active: Boolean!\r\n  # The channel to which the plugin configuration is assigned to.\r\n  channel: Channel\r\n  # Configuration of the plugin.\r\n  configuration: [ConfigurationItem]\r\n}\r\n\r\nenum PluginConfigurationType {\r\n  PER_CHANNEL\r\n  GLOBAL\r\n}\r\n\r\ntype PluginCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [PluginCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype PluginCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Plugin!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\ntype PluginError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: PluginErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum PluginErrorCode {\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  PLUGIN_MISCONFIGURED\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\ninput PluginFilterInput {\r\n  statusInChannels: PluginStatusInChannelsInput\r\n  search: String\r\n  type: PluginConfigurationType\r\n}\r\n\r\nenum PluginSortField {\r\n  NAME\r\n  IS_ACTIVE\r\n}\r\n\r\ninput PluginSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort plugins by the selected field.\r\n  field: PluginSortField!\r\n}\r\n\r\ninput PluginStatusInChannelsInput {\r\n  active: Boolean!\r\n  channels: [ID!]!\r\n}\r\n\r\n# Update plugin configuration.\r\ntype PluginUpdate {\r\n  plugin: Plugin\r\n  pluginsErrors: [PluginError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PluginError!]!\r\n}\r\n\r\ninput PluginUpdateInput {\r\n  # Indicates whether the plugin should be enabled.\r\n  active: Boolean\r\n  # Configuration of the plugin.\r\n  configuration: [ConfigurationItemInput]\r\n}\r\n\r\n# Positive Decimal scalar implementation.\r\n# Should be used in places where value must be positive.\r\nscalar PositiveDecimal\r\n\r\n# An enumeration.\r\nenum PostalCodeRuleInclusionTypeEnum {\r\n  INCLUDE\r\n  EXCLUDE\r\n}\r\n\r\ninput PriceRangeInput {\r\n  # Price greater than or equal to.\r\n  gte: Float\r\n  # Price less than or equal to.\r\n  lte: Float\r\n}\r\n\r\n# Represents an individual item for sale in the storefront.\r\ntype Product implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String!\r\n  description: JSONString\r\n  productType: ProductType!\r\n  slug: String!\r\n  category: Category\r\n  updatedAt: DateTime\r\n  chargeTaxes: Boolean!\r\n  weight: Weight\r\n  defaultVariant: ProductVariant\r\n  rating: Float\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Channel given to retrieve this product. Also used by federation gateway to resolve this object in a federated query.\r\n  channel: String\r\n  # Description of the product (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n  # The main thumbnail for a product.\r\n  thumbnail(\r\n    # Size of thumbnail.\r\n    size: Int\r\n  ): Image\r\n  # Lists the storefront product's pricing, the current price and discounts, only meant for displaying.\r\n  pricing(\r\n    # Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.\r\n    address: AddressInput\r\n  ): ProductPricingInfo\r\n  # Whether the product is in stock and visible or not.\r\n  isAvailable(\r\n    # Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.\r\n    address: AddressInput\r\n  ): Boolean\r\n  # A type of tax. Assigned by enabled tax gateway\r\n  taxType: TaxType\r\n  # List of attributes assigned to this product.\r\n  attributes: [SelectedAttribute!]!\r\n  # List of availability in channels for the product.\r\n  channelListings: [ProductChannelListing!]\r\n  # Get a single product media by ID.\r\n  mediaById(\r\n    # ID of a product media.\r\n    id: ID\r\n  ): ProductMedia\r\n  # Get a single product image by ID.\r\n  imageById(\r\n    # ID of a product image.\r\n    id: ID\r\n  ): ProductImage @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `mediaById` field instead.\")\r\n  # List of variants for the product.\r\n  variants: [ProductVariant]\r\n  # List of media for the product.\r\n  media: [ProductMedia!]\r\n  # List of images for the product.\r\n  images: [ProductImage] @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `media` field instead.\")\r\n  # List of collections for the product.\r\n  collections: [Collection]\r\n  # Returns translated product fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for product.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ProductTranslation\r\n  # Date when product is available for purchase. \r\n  availableForPurchase: Date\r\n  # Whether the product is available for purchase.\r\n  isAvailableForPurchase: Boolean\r\n}\r\n\r\n# Assign attributes to a given product type.\r\ntype ProductAttributeAssign {\r\n  # The updated product type.\r\n  productType: ProductType\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\ninput ProductAttributeAssignInput {\r\n  # The ID of the attribute to assign.\r\n  id: ID!\r\n  # The attribute type to be assigned as.\r\n  type: ProductAttributeType!\r\n}\r\n\r\nenum ProductAttributeType {\r\n  PRODUCT\r\n  VARIANT\r\n}\r\n\r\n# Un-assign attributes from a given product type.\r\ntype ProductAttributeUnassign {\r\n  # The updated product type.\r\n  productType: ProductType\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Deletes products.\r\ntype ProductBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Represents product channel listing.\r\ntype ProductChannelListing implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  publicationDate: Date\r\n  isPublished: Boolean!\r\n  channel: Channel!\r\n  visibleInListings: Boolean!\r\n  availableForPurchase: Date\r\n  # The price of the cheapest variant (including discounts).\r\n  discountedPrice: Money\r\n  # Purchase cost of product.\r\n  purchaseCost: MoneyRange\r\n  # Range of margin percentage value.\r\n  margin: Margin\r\n  # Whether the product is available for purchase.\r\n  isAvailableForPurchase: Boolean\r\n  # Lists the storefront product's pricing, the current price and discounts, only meant for displaying.\r\n  pricing(\r\n    # Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.\r\n    address: AddressInput\r\n  ): ProductPricingInfo\r\n}\r\n\r\ninput ProductChannelListingAddInput {\r\n  # ID of a channel.\r\n  channelId: ID!\r\n  # Determines if object is visible to customers.\r\n  isPublished: Boolean\r\n  # Publication date. ISO 8601 standard.\r\n  publicationDate: Date\r\n  # Determines if product is visible in product listings (doesn't apply to product collections).\r\n  visibleInListings: Boolean\r\n  # Determine if product should be available for purchase.\r\n  isAvailableForPurchase: Boolean\r\n  # A start date from which a product will be available for purchase. When not set and isAvailable is set to True, the current day is assumed.\r\n  availableForPurchaseDate: Date\r\n  # List of variants to which the channel should be assigned.\r\n  addVariants: [ID!]\r\n  # List of variants from which the channel should be unassigned.\r\n  removeVariants: [ID!]\r\n}\r\n\r\ntype ProductChannelListingError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ProductErrorCode!\r\n  # List of attributes IDs which causes the error.\r\n  attributes: [ID!]\r\n  # List of attribute values IDs which causes the error.\r\n  values: [ID!]\r\n  # List of channels IDs which causes the error.\r\n  channels: [ID!]\r\n  # List of variants IDs which causes the error.\r\n  variants: [ID!]\r\n}\r\n\r\n# Manage product's availability in channels.\r\ntype ProductChannelListingUpdate {\r\n  # An updated product instance.\r\n  product: Product\r\n  productChannelListingErrors: [ProductChannelListingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductChannelListingError!]!\r\n}\r\n\r\ninput ProductChannelListingUpdateInput {\r\n  # List of channels to which the product should be assigned or updated.\r\n  updateChannels: [ProductChannelListingAddInput!]\r\n  # List of channels from which the product should be unassigned.\r\n  removeChannels: [ID!]\r\n}\r\n\r\ntype ProductCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [ProductCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype ProductCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Product!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new product.\r\ntype ProductCreate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  product: Product\r\n}\r\n\r\ninput ProductCreateInput {\r\n  # List of attributes.\r\n  attributes: [AttributeValueInput!]\r\n  # ID of the product's category.\r\n  category: ID\r\n  # Determine if taxes are being charged for the product.\r\n  chargeTaxes: Boolean\r\n  # List of IDs of collections that the product belongs to.\r\n  collections: [ID!]\r\n  # Product description (JSON).\r\n  description: JSONString\r\n  # Product name.\r\n  name: String\r\n  # Product slug.\r\n  slug: String\r\n  # Tax rate for enabled tax gateway.\r\n  taxCode: String\r\n  # Search engine optimization fields.\r\n  seo: SeoInput\r\n  # Weight of the Product.\r\n  weight: WeightScalar\r\n  # Defines the product rating value.\r\n  rating: Float\r\n  # ID of the type that product belongs to.\r\n  productType: ID!\r\n}\r\n\r\n# Deletes a product.\r\ntype ProductDelete {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  product: Product\r\n}\r\n\r\ntype ProductError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ProductErrorCode!\r\n  # List of attributes IDs which causes the error.\r\n  attributes: [ID!]\r\n  # List of attribute values IDs which causes the error.\r\n  values: [ID!]\r\n}\r\n\r\n# An enumeration.\r\nenum ProductErrorCode {\r\n  ALREADY_EXISTS\r\n  ATTRIBUTE_ALREADY_ASSIGNED\r\n  ATTRIBUTE_CANNOT_BE_ASSIGNED\r\n  ATTRIBUTE_VARIANTS_DISABLED\r\n  DUPLICATED_INPUT_ITEM\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  PRODUCT_WITHOUT_CATEGORY\r\n  NOT_PRODUCTS_IMAGE\r\n  NOT_PRODUCTS_VARIANT\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  VARIANT_NO_DIGITAL_CONTENT\r\n  CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT\r\n  PRODUCT_NOT_ASSIGNED_TO_CHANNEL\r\n  UNSUPPORTED_MEDIA_PROVIDER\r\n}\r\n\r\nenum ProductFieldEnum {\r\n  NAME\r\n  DESCRIPTION\r\n  PRODUCT_TYPE\r\n  CATEGORY\r\n  PRODUCT_WEIGHT\r\n  COLLECTIONS\r\n  CHARGE_TAXES\r\n  PRODUCT_MEDIA\r\n  VARIANT_SKU\r\n  VARIANT_WEIGHT\r\n  VARIANT_MEDIA\r\n}\r\n\r\ninput ProductFilterInput {\r\n  isPublished: Boolean\r\n  collections: [ID]\r\n  categories: [ID]\r\n  hasCategory: Boolean\r\n  attributes: [AttributeInput]\r\n  stockAvailability: StockAvailability\r\n  stocks: ProductStockFilterInput\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n  price: PriceRangeInput\r\n  minimalPrice: PriceRangeInput\r\n  productTypes: [ID]\r\n  ids: [ID]\r\n  # Specifies the channel by which the data should be filtered. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n}\r\n\r\n# Represents a product image.\r\ntype ProductImage {\r\n  # The ID of the image.\r\n  id: ID!\r\n  # The alt text of the image.\r\n  alt: String\r\n  # The new relative sorting position of the item (from -inf to +inf). 1 moves the item one position forward, -1 moves the item one position backward, 0 leaves the item unchanged.\r\n  sortOrder: Int\r\n  # The URL of the image.\r\n  url(\r\n    # Size of the image.\r\n    size: Int\r\n  ): String!\r\n}\r\n\r\ninput ProductInput {\r\n  # List of attributes.\r\n  attributes: [AttributeValueInput!]\r\n  # ID of the product's category.\r\n  category: ID\r\n  # Determine if taxes are being charged for the product.\r\n  chargeTaxes: Boolean\r\n  # List of IDs of collections that the product belongs to.\r\n  collections: [ID!]\r\n  # Product description (JSON).\r\n  description: JSONString\r\n  # Product name.\r\n  name: String\r\n  # Product slug.\r\n  slug: String\r\n  # Tax rate for enabled tax gateway.\r\n  taxCode: String\r\n  # Search engine optimization fields.\r\n  seo: SeoInput\r\n  # Weight of the Product.\r\n  weight: WeightScalar\r\n  # Defines the product rating value.\r\n  rating: Float\r\n}\r\n\r\n# Represents a product media.\r\ntype ProductMedia implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  sortOrder: Int\r\n  alt: String!\r\n  type: ProductMediaType!\r\n  oembedData: JSONString!\r\n  # The URL of the media.\r\n  url(\r\n    # Size of the image.\r\n    size: Int\r\n  ): String!\r\n}\r\n\r\n# Deletes product media.\r\ntype ProductMediaBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Create a media object (image or video URL) associated with product. For image, this mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\ntype ProductMediaCreate {\r\n  product: Product\r\n  media: ProductMedia\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\ninput ProductMediaCreateInput {\r\n  # Alt text for a product media.\r\n  alt: String\r\n  # Represents an image file in a multipart request.\r\n  image: Upload\r\n  # ID of an product.\r\n  product: ID!\r\n  # Represents an URL to an external media.\r\n  mediaUrl: String\r\n}\r\n\r\n# Deletes a product media.\r\ntype ProductMediaDelete {\r\n  product: Product\r\n  media: ProductMedia\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Changes ordering of the product media.\r\ntype ProductMediaReorder {\r\n  product: Product\r\n  media: [ProductMedia!]\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum ProductMediaType {\r\n  # An uploaded image or an URL to an image\r\n  IMAGE\r\n  # A URL to an external video\r\n  VIDEO\r\n}\r\n\r\n# Updates a product media.\r\ntype ProductMediaUpdate {\r\n  product: Product\r\n  media: ProductMedia\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\ninput ProductMediaUpdateInput {\r\n  # Alt text for a product media.\r\n  alt: String\r\n}\r\n\r\ninput ProductOrder {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Specifies the channel in which to sort the data. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n  # Sort product by the selected attribute's values.\r\n  # Note: this doesn't take translations into account yet.\r\n  attributeId: ID\r\n  # Sort products by the selected field.\r\n  field: ProductOrderField\r\n}\r\n\r\nenum ProductOrderField {\r\n  # Sort products by name.\r\n  NAME\r\n  # Sort products by rank. Note: This option is available only with the `search` filter.\r\n  RANK\r\n  # Sort products by price.\r\n  PRICE\r\n  # Sort products by a minimal price of a product's variant.\r\n  MINIMAL_PRICE\r\n  # Sort products by update date.\r\n  DATE\r\n  # Sort products by type.\r\n  TYPE\r\n  # Sort products by publication status.\r\n  PUBLISHED\r\n  # Sort products by publication date.\r\n  PUBLICATION_DATE\r\n  # Sort products by collection. Note: This option is available only for the `Collection.products` query.\r\n  COLLECTION\r\n  # Sort products by rating.\r\n  RATING\r\n}\r\n\r\n# Represents availability of a product in the storefront.\r\ntype ProductPricingInfo {\r\n  # Whether it is in sale or not.\r\n  onSale: Boolean\r\n  # The discount amount if in sale (null otherwise).\r\n  discount: TaxedMoney\r\n  # The discount amount in the local currency.\r\n  discountLocalCurrency: TaxedMoney\r\n  # The discounted price range of the product variants.\r\n  priceRange: TaxedMoneyRange\r\n  # The undiscounted price range of the product variants.\r\n  priceRangeUndiscounted: TaxedMoneyRange\r\n  # The discounted price range of the product variants in the local currency.\r\n  priceRangeLocalCurrency: TaxedMoneyRange\r\n}\r\n\r\n# Reorder product attribute values.\r\ntype ProductReorderAttributeValues {\r\n  # Product from which attribute values are reordered.\r\n  product: Product\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\ninput ProductStockFilterInput {\r\n  warehouseIds: [ID!]\r\n  quantity: IntRangeInput\r\n}\r\n\r\ntype ProductTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String!\r\n  description: JSONString\r\n  # Description of the product (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n  # Returns translated product fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for product.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ProductTranslation\r\n  # Represents an individual item for sale in the storefront.\r\n  product: Product @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n  # List of product attribute values that can be translated.\r\n  attributeValues: [AttributeValueTranslatableContent!]!\r\n}\r\n\r\n# Creates/updates translations for a product.\r\ntype ProductTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  product: Product\r\n}\r\n\r\ntype ProductTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String\r\n  description: JSONString\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n  # Translated description of the product (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n}\r\n\r\n# Represents a type of product. It defines what attributes are available to products of this type.\r\ntype ProductType implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  slug: String!\r\n  hasVariants: Boolean!\r\n  isShippingRequired: Boolean!\r\n  isDigital: Boolean!\r\n  weight: Weight\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # List of products of this type.\r\n  products(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductCountableConnection @deprecated(reason: \"Will be removed in Saleor 4.0. Use the top-level `products` query with the `productTypes` filter.\")\r\n  # A type of tax. Assigned by enabled tax gateway\r\n  taxType: TaxType\r\n  # Variant attributes of that product type.\r\n  variantAttributes(\r\n    # Define scope of returned attributes.\r\n    variantSelection: VariantAttributeScope\r\n  ): [Attribute]\r\n  # Product attributes of that product type.\r\n  productAttributes: [Attribute]\r\n  availableAttributes(\r\n    filter: AttributeFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): AttributeCountableConnection\r\n}\r\n\r\n# Deletes product types.\r\ntype ProductTypeBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\nenum ProductTypeConfigurable {\r\n  CONFIGURABLE\r\n  SIMPLE\r\n}\r\n\r\ntype ProductTypeCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [ProductTypeCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype ProductTypeCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: ProductType!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new product type.\r\ntype ProductTypeCreate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  productType: ProductType\r\n}\r\n\r\n# Deletes a product type.\r\ntype ProductTypeDelete {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  productType: ProductType\r\n}\r\n\r\nenum ProductTypeEnum {\r\n  DIGITAL\r\n  SHIPPABLE\r\n}\r\n\r\ninput ProductTypeFilterInput {\r\n  search: String\r\n  configurable: ProductTypeConfigurable\r\n  productType: ProductTypeEnum\r\n  metadata: [MetadataFilter]\r\n  ids: [ID]\r\n}\r\n\r\ninput ProductTypeInput {\r\n  # Name of the product type.\r\n  name: String\r\n  # Product type slug.\r\n  slug: String\r\n  # Determines if product of this type has multiple variants. This option mainly simplifies product management in the dashboard. There is always at least one variant created under the hood.\r\n  hasVariants: Boolean\r\n  # List of attributes shared among all product variants.\r\n  productAttributes: [ID]\r\n  # List of attributes used to distinguish between different variants of a product.\r\n  variantAttributes: [ID]\r\n  # Determines if shipping is required for products of this variant.\r\n  isShippingRequired: Boolean\r\n  # Determines if products are digital.\r\n  isDigital: Boolean\r\n  # Weight of the ProductType items.\r\n  weight: WeightScalar\r\n  # Tax rate for enabled tax gateway.\r\n  taxCode: String\r\n}\r\n\r\n# Reorder the attributes of a product type.\r\ntype ProductTypeReorderAttributes {\r\n  # Product type from which attributes are reordered.\r\n  productType: ProductType\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\nenum ProductTypeSortField {\r\n  # Sort products by name.\r\n  NAME\r\n  # Sort products by type.\r\n  DIGITAL\r\n  # Sort products by shipping.\r\n  SHIPPING_REQUIRED\r\n}\r\n\r\ninput ProductTypeSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort product types by the selected field.\r\n  field: ProductTypeSortField!\r\n}\r\n\r\n# Updates an existing product type.\r\ntype ProductTypeUpdate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  productType: ProductType\r\n}\r\n\r\n# Updates an existing product.\r\ntype ProductUpdate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  product: Product\r\n}\r\n\r\n# Represents a version of a product such as different size or color.\r\ntype ProductVariant implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  sku: String!\r\n  product: Product!\r\n  trackInventory: Boolean!\r\n  weight: Weight\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Channel given to retrieve this product variant. Also used by federation gateway to resolve this object in a federated query.\r\n  channel: String\r\n  # List of price information in channels for the product.\r\n  channelListings: [ProductVariantChannelListing!]\r\n  # Lists the storefront variant's pricing, the current price and discounts, only meant for displaying.\r\n  pricing(\r\n    # Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.\r\n    address: AddressInput\r\n  ): VariantPricingInfo\r\n  # List of attributes assigned to this variant.\r\n  attributes(\r\n    # Define scope of returned attributes.\r\n    variantSelection: VariantAttributeScope\r\n  ): [SelectedAttribute!]!\r\n  # Gross margin percentage value.\r\n  margin: Int\r\n  # Total quantity ordered.\r\n  quantityOrdered: Int\r\n  # Total revenue generated by a variant in given period of time. Note: this field should be queried using `reportProductSales` query as it uses optimizations suitable for such calculations.\r\n  revenue(period: ReportingPeriod): TaxedMoney\r\n  # List of images for the product variant.\r\n  images: [ProductImage] @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `media` instead.\")\r\n  # List of media for the product variant.\r\n  media: [ProductMedia!]\r\n  # Returns translated product variant fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for product variant.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ProductVariantTranslation\r\n  # Digital content for the product variant.\r\n  digitalContent: DigitalContent\r\n  # Stocks for the product variant.\r\n  stocks(\r\n    # Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.\r\n    address: AddressInput\r\n    # DEPRECATED: use `address` argument instead. This argument will be removed in Saleor 4.0. Two-letter ISO 3166-1 country code.\r\n    countryCode: CountryCode\r\n  ): [Stock]\r\n  # Quantity of a product available for sale in one checkout.\r\n  quantityAvailable(\r\n    # Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.\r\n    address: AddressInput\r\n    # DEPRECATED: use `address` argument instead. This argument will be removed in Saleor 4.0.Two-letter ISO 3166-1 country code. When provided, the exact quantity from a warehouse operating in shipping zones that contain this country will be returned. Otherwise, it will return the maximum quantity from all shipping zones.\r\n    countryCode: CountryCode\r\n  ): Int!\r\n}\r\n\r\n# Creates product variants for a given product.\r\ntype ProductVariantBulkCreate {\r\n  # Returns how many objects were created.\r\n  count: Int!\r\n  # List of the created variants.\r\n  productVariants: [ProductVariant!]!\r\n  bulkProductErrors: [BulkProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [BulkProductError!]!\r\n}\r\n\r\ninput ProductVariantBulkCreateInput {\r\n  # List of attributes specific to this variant.\r\n  attributes: [BulkAttributeValueInput!]!\r\n  # Stock keeping unit.\r\n  sku: String!\r\n  # Determines if the inventory of this variant should be tracked. If false, the quantity won't change when customers buy this item.\r\n  trackInventory: Boolean\r\n  # Weight of the Product Variant.\r\n  weight: WeightScalar\r\n  # Stocks of a product available for sale.\r\n  stocks: [StockInput!]\r\n  # List of prices assigned to channels.\r\n  channelListings: [ProductVariantChannelListingAddInput!]\r\n}\r\n\r\n# Deletes product variants.\r\ntype ProductVariantBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Represents product varaint channel listing.\r\ntype ProductVariantChannelListing implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  channel: Channel!\r\n  price: Money\r\n  # Cost price of the variant.\r\n  costPrice: Money\r\n  # Gross margin percentage value.\r\n  margin: Int\r\n}\r\n\r\ninput ProductVariantChannelListingAddInput {\r\n  # ID of a channel.\r\n  channelId: ID!\r\n  # Price of the particular variant in channel.\r\n  price: PositiveDecimal!\r\n  # Cost price of the variant in channel.\r\n  costPrice: PositiveDecimal\r\n}\r\n\r\n# Manage product variant prices in channels.\r\ntype ProductVariantChannelListingUpdate {\r\n  # An updated product variant instance.\r\n  variant: ProductVariant\r\n  productChannelListingErrors: [ProductChannelListingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductChannelListingError!]!\r\n}\r\n\r\ntype ProductVariantCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [ProductVariantCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype ProductVariantCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: ProductVariant!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new variant for a product.\r\ntype ProductVariantCreate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  productVariant: ProductVariant\r\n}\r\n\r\ninput ProductVariantCreateInput {\r\n  # List of attributes specific to this variant.\r\n  attributes: [AttributeValueInput!]!\r\n  # Stock keeping unit.\r\n  sku: String\r\n  # Determines if the inventory of this variant should be tracked. If false, the quantity won't change when customers buy this item.\r\n  trackInventory: Boolean\r\n  # Weight of the Product Variant.\r\n  weight: WeightScalar\r\n  # Product ID of which type is the variant.\r\n  product: ID!\r\n  # Stocks of a product available for sale.\r\n  stocks: [StockInput!]\r\n}\r\n\r\n# Deletes a product variant.\r\ntype ProductVariantDelete {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  productVariant: ProductVariant\r\n}\r\n\r\ninput ProductVariantFilterInput {\r\n  search: String\r\n  sku: [String]\r\n  metadata: [MetadataFilter]\r\n}\r\n\r\ninput ProductVariantInput {\r\n  # List of attributes specific to this variant.\r\n  attributes: [AttributeValueInput!]\r\n  # Stock keeping unit.\r\n  sku: String\r\n  # Determines if the inventory of this variant should be tracked. If false, the quantity won't change when customers buy this item.\r\n  trackInventory: Boolean\r\n  # Weight of the Product Variant.\r\n  weight: WeightScalar\r\n}\r\n\r\n# Reorder the variants of a product. Mutation updates updated_at on product and triggers PRODUCT_UPDATED webhook.\r\ntype ProductVariantReorder {\r\n  product: Product\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Reorder product variant attribute values.\r\ntype ProductVariantReorderAttributeValues {\r\n  # Product variant from which attribute values are reordered.\r\n  productVariant: ProductVariant\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Set default variant for a product. Mutation triggers PRODUCT_UPDATED webhook.\r\ntype ProductVariantSetDefault {\r\n  product: Product\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Creates stocks for product variant.\r\ntype ProductVariantStocksCreate {\r\n  # Updated product variant.\r\n  productVariant: ProductVariant\r\n  bulkStockErrors: [BulkStockError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [BulkStockError!]!\r\n}\r\n\r\n# Delete stocks from product variant.\r\ntype ProductVariantStocksDelete {\r\n  # Updated product variant.\r\n  productVariant: ProductVariant\r\n  stockErrors: [StockError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [StockError!]!\r\n}\r\n\r\n# Update stocks for product variant.\r\ntype ProductVariantStocksUpdate {\r\n  # Updated product variant.\r\n  productVariant: ProductVariant\r\n  bulkStockErrors: [BulkStockError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [BulkStockError!]!\r\n}\r\n\r\ntype ProductVariantTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # Returns translated product variant fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for product variant.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ProductVariantTranslation\r\n  # Represents a version of a product such as different size or color.\r\n  productVariant: ProductVariant @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n  # List of product variant attribute values that can be translated.\r\n  attributeValues: [AttributeValueTranslatableContent!]!\r\n}\r\n\r\n# Creates/updates translations for a product variant.\r\ntype ProductVariantTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  productVariant: ProductVariant\r\n}\r\n\r\ntype ProductVariantTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\n# Updates an existing variant for product.\r\ntype ProductVariantUpdate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  productVariant: ProductVariant\r\n}\r\n\r\ninput PublishableChannelListingInput {\r\n  # ID of a channel.\r\n  channelId: ID!\r\n  # Determines if object is visible to customers.\r\n  isPublished: Boolean\r\n  # Publication date. ISO 8601 standard.\r\n  publicationDate: Date\r\n}\r\n\r\ntype Query {\r\n  # Look up a webhook by ID.\r\n  webhook(\r\n    # ID of the webhook.\r\n    id: ID!\r\n  ): Webhook\r\n  # List of all available webhook events.\r\n  webhookEvents: [WebhookEvent]\r\n  # Retrieve a sample payload for a given webhook event based on real data. It can be useful for some integrations where sample payload is required.\r\n  webhookSamplePayload(\r\n    # Name of the requested event type.\r\n    eventType: WebhookSampleEventTypeEnum!\r\n  ): JSONString\r\n  # Look up a warehouse by ID.\r\n  warehouse(\r\n    # ID of an warehouse\r\n    id: ID!\r\n  ): Warehouse\r\n  # List of warehouses.\r\n  warehouses(\r\n    filter: WarehouseFilterInput\r\n    sortBy: WarehouseSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): WarehouseCountableConnection\r\n  # Returns a list of all translatable items of a given kind.\r\n  translations(\r\n    # Kind of objects to retrieve.\r\n    kind: TranslatableKinds!\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): TranslatableItemConnection\r\n  translation(\r\n    # ID of the object to retrieve.\r\n    id: ID!\r\n    # Kind of the object to retrieve.\r\n    kind: TranslatableKinds!\r\n  ): TranslatableItem\r\n  # Look up a stock by ID\r\n  stock(\r\n    # ID of an warehouse\r\n    id: ID!\r\n  ): Stock\r\n  # List of stocks.\r\n  stocks(\r\n    filter: StockFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): StockCountableConnection\r\n  # Return information about the shop.\r\n  shop: Shop!\r\n  # Order related settings from site settings.\r\n  orderSettings: OrderSettings\r\n  # Look up a shipping zone by ID.\r\n  shippingZone(\r\n    # ID of the shipping zone.\r\n    id: ID!\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): ShippingZone\r\n  # List of the shop's shipping zones.\r\n  shippingZones(\r\n    # Filtering options for shipping zones.\r\n    filter: ShippingZoneFilterInput\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ShippingZoneCountableConnection\r\n  # Look up digital content by ID.\r\n  digitalContent(\r\n    # ID of the digital content.\r\n    id: ID!\r\n  ): DigitalContent\r\n  # List of digital content.\r\n  digitalContents(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): DigitalContentCountableConnection\r\n  # List of the shop's categories.\r\n  categories(\r\n    # Filtering options for categories.\r\n    filter: CategoryFilterInput\r\n    # Sort categories.\r\n    sortBy: CategorySortingInput\r\n    # Filter categories by the nesting level in the category tree.\r\n    level: Int\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CategoryCountableConnection\r\n  # Look up a category by ID or slug.\r\n  category(\r\n    # ID of the category.\r\n    id: ID\r\n    # Slug of the category\r\n    slug: String\r\n  ): Category\r\n  # Look up a collection by ID.\r\n  collection(\r\n    # ID of the collection.\r\n    id: ID\r\n    # Slug of the category\r\n    slug: String\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): Collection\r\n  # List of the shop's collections.\r\n  collections(\r\n    # Filtering options for collections.\r\n    filter: CollectionFilterInput\r\n    # Sort collections.\r\n    sortBy: CollectionSortingInput\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CollectionCountableConnection\r\n  # Look up a product by ID.\r\n  product(\r\n    # ID of the product.\r\n    id: ID\r\n    # Slug of the product.\r\n    slug: String\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): Product\r\n  # List of the shop's products.\r\n  products(\r\n    # Filtering options for products.\r\n    filter: ProductFilterInput\r\n    # Sort products.\r\n    sortBy: ProductOrder\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductCountableConnection\r\n  # Look up a product type by ID.\r\n  productType(\r\n    # ID of the product type.\r\n    id: ID!\r\n  ): ProductType\r\n  # List of the shop's product types.\r\n  productTypes(\r\n    # Filtering options for product types.\r\n    filter: ProductTypeFilterInput\r\n    # Sort product types.\r\n    sortBy: ProductTypeSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductTypeCountableConnection\r\n  # Look up a product variant by ID or SKU.\r\n  productVariant(\r\n    # ID of the product variant.\r\n    id: ID\r\n    # Sku of the product variant.\r\n    sku: String\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): ProductVariant\r\n  # List of product variants.\r\n  productVariants(\r\n    # Filter product variants by given IDs.\r\n    ids: [ID]\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Filtering options for product variant.\r\n    filter: ProductVariantFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductVariantCountableConnection\r\n  # List of top selling products.\r\n  reportProductSales(\r\n    # Span of time.\r\n    period: ReportingPeriod!\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String!\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductVariantCountableConnection\r\n  # Look up a payment by ID.\r\n  payment(\r\n    # ID of the payment.\r\n    id: ID!\r\n  ): Payment\r\n  # List of payments.\r\n  payments(\r\n    # Filtering options for payments.\r\n    filter: PaymentFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): PaymentCountableConnection\r\n  # Look up a page by ID or slug.\r\n  page(\r\n    # ID of the page.\r\n    id: ID\r\n    # The slug of the page.\r\n    slug: String\r\n  ): Page\r\n  # List of the shop's pages.\r\n  pages(\r\n    # Sort pages.\r\n    sortBy: PageSortingInput\r\n    # Filtering options for pages.\r\n    filter: PageFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): PageCountableConnection\r\n  # Look up a page type by ID.\r\n  pageType(\r\n    # ID of the page type.\r\n    id: ID!\r\n  ): PageType\r\n  # List of the page types.\r\n  pageTypes(\r\n    # Sort page types.\r\n    sortBy: PageTypeSortingInput\r\n    # Filtering options for page types.\r\n    filter: PageTypeFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): PageTypeCountableConnection\r\n  # List of activity events to display on homepage (at the moment it only contains order-events).\r\n  homepageEvents(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): OrderEventCountableConnection\r\n  # Look up an order by ID.\r\n  order(\r\n    # ID of an order.\r\n    id: ID!\r\n  ): Order\r\n  # List of orders.\r\n  orders(\r\n    # Sort orders.\r\n    sortBy: OrderSortingInput\r\n    # Filtering options for orders.\r\n    filter: OrderFilterInput\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): OrderCountableConnection\r\n  # List of draft orders.\r\n  draftOrders(\r\n    # Sort draft orders.\r\n    sortBy: OrderSortingInput\r\n    # Filtering options for draft orders.\r\n    filter: OrderDraftFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): OrderCountableConnection\r\n  # Return the total sales amount from a specific period.\r\n  ordersTotal(\r\n    # A period of time.\r\n    period: ReportingPeriod\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): TaxedMoney\r\n  # Look up an order by token.\r\n  orderByToken(\r\n    # The order's token.\r\n    token: UUID!\r\n  ): Order\r\n  # Look up a navigation menu by ID or name.\r\n  menu(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # ID of the menu.\r\n    id: ID\r\n    # The menu's name.\r\n    name: String\r\n    # The menu's slug.\r\n    slug: String\r\n  ): Menu\r\n  # List of the storefront's menus.\r\n  menus(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Sort menus.\r\n    sortBy: MenuSortingInput\r\n    # Filtering options for menus.\r\n    filter: MenuFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): MenuCountableConnection\r\n  # Look up a menu item by ID.\r\n  menuItem(\r\n    # ID of the menu item.\r\n    id: ID!\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): MenuItem\r\n  # List of the storefronts's menu items.\r\n  menuItems(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Sort menus items.\r\n    sortBy: MenuItemSortingInput\r\n    # Filtering options for menu items.\r\n    filter: MenuItemFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): MenuItemCountableConnection\r\n  # Look up a gift card by ID.\r\n  giftCard(\r\n    # ID of the gift card.\r\n    id: ID!\r\n  ): GiftCard\r\n  # List of gift cards.\r\n  giftCards(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): GiftCardCountableConnection\r\n  # Look up a plugin by ID.\r\n  plugin(\r\n    # ID of the plugin.\r\n    id: ID!\r\n  ): Plugin\r\n  # List of plugins.\r\n  plugins(\r\n    # Filtering options for plugins.\r\n    filter: PluginFilterInput\r\n    # Sort plugins.\r\n    sortBy: PluginSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): PluginCountableConnection\r\n  # Look up a sale by ID.\r\n  sale(\r\n    # ID of the sale.\r\n    id: ID!\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): Sale\r\n  # List of the shop's sales.\r\n  sales(\r\n    # Filtering options for sales.\r\n    filter: SaleFilterInput\r\n    # Sort sales.\r\n    sortBy: SaleSortingInput\r\n    # Search sales by name, value or type. DEPRECATED: Will be removed in Saleor 4.0. Use `filter.search` input instead.\r\n    query: String\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): SaleCountableConnection\r\n  # Look up a voucher by ID.\r\n  voucher(\r\n    # ID of the voucher.\r\n    id: ID!\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): Voucher\r\n  # List of the shop's vouchers.\r\n  vouchers(\r\n    # Filtering options for vouchers.\r\n    filter: VoucherFilterInput\r\n    # Sort voucher.\r\n    sortBy: VoucherSortingInput\r\n    # Search vouchers by name or code. DEPRECATED: Will be removed in Saleor 4.0. Use `filter.search` input instead.\r\n    query: String\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): VoucherCountableConnection\r\n  # Look up a export file by ID.\r\n  exportFile(\r\n    # ID of the export file job.\r\n    id: ID!\r\n  ): ExportFile\r\n  # List of export files.\r\n  exportFiles(\r\n    # Filtering options for export files.\r\n    filter: ExportFileFilterInput\r\n    # Sort export files.\r\n    sortBy: ExportFileSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ExportFileCountableConnection\r\n  # List of all tax rates available from tax gateway.\r\n  taxTypes: [TaxType]\r\n  # Look up a checkout by token and slug of channel.\r\n  checkout(\r\n    # The checkout's token.\r\n    token: UUID\r\n  ): Checkout\r\n  # List of checkouts.\r\n  checkouts(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CheckoutCountableConnection\r\n  # List of checkout lines.\r\n  checkoutLines(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CheckoutLineCountableConnection\r\n  # Look up a channel by ID.\r\n  channel(\r\n    # ID of the channel.\r\n    id: ID\r\n  ): Channel\r\n  # List of all channels.\r\n  channels: [Channel!]\r\n  # List of the shop's attributes.\r\n  attributes(\r\n    # Filtering options for attributes.\r\n    filter: AttributeFilterInput\r\n    # Sorting options for attributes.\r\n    sortBy: AttributeSortingInput\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): AttributeCountableConnection\r\n  # Look up an attribute by ID.\r\n  attribute(\r\n    # ID of the attribute.\r\n    id: ID\r\n    # Slug of the attribute.\r\n    slug: String\r\n  ): Attribute\r\n  # List of all apps installations\r\n  appsInstallations: [AppInstallation!]!\r\n  # List of the apps.\r\n  apps(\r\n    # Filtering options for apps.\r\n    filter: AppFilterInput\r\n    # Sort apps.\r\n    sortBy: AppSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): AppCountableConnection\r\n  # Look up an app by ID. If ID is not provided, return the currently authenticated app.\r\n  app(\r\n    # ID of the app.\r\n    id: ID\r\n  ): App\r\n  # Returns address validation rules.\r\n  addressValidationRules(\r\n    # Two-letter ISO 3166-1 country code.\r\n    countryCode: CountryCode!\r\n    # Designation of a region, province or state.\r\n    countryArea: String\r\n    # City or a town name.\r\n    city: String\r\n    # Sublocality like a district.\r\n    cityArea: String\r\n  ): AddressValidationData\r\n  # Look up an address by ID.\r\n  address(\r\n    # ID of an address.\r\n    id: ID!\r\n  ): Address\r\n  # List of the shop's customers.\r\n  customers(\r\n    # Filtering options for customers.\r\n    filter: CustomerFilterInput\r\n    # Sort customers.\r\n    sortBy: UserSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): UserCountableConnection\r\n  # List of permission groups.\r\n  permissionGroups(\r\n    # Filtering options for permission groups.\r\n    filter: PermissionGroupFilterInput\r\n    # Sort permission groups.\r\n    sortBy: PermissionGroupSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): GroupCountableConnection\r\n  # Look up permission group by ID.\r\n  permissionGroup(\r\n    # ID of the group.\r\n    id: ID!\r\n  ): Group\r\n  # Return the currently authenticated user.\r\n  me: User\r\n  # List of the shop's staff users.\r\n  staffUsers(\r\n    # Filtering options for staff users.\r\n    filter: StaffUserInput\r\n    # Sort staff users.\r\n    sortBy: UserSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): UserCountableConnection\r\n  # Look up a user by ID or email address.\r\n  user(\r\n    # ID of the user.\r\n    id: ID\r\n    # Email address of the user.\r\n    email: String\r\n  ): User\r\n  _entities(representations: [_Any]): [_Entity]\r\n  _service: _Service\r\n}\r\n\r\n# Represents a reduced VAT rate for a particular type of goods.\r\ntype ReducedRate {\r\n  # Reduced VAT rate in percent.\r\n  rate: Float!\r\n  # A type of goods.\r\n  rateType: String!\r\n}\r\n\r\n# Refresh JWT token. Mutation tries to take refreshToken from the input.If it fails it will try to take refreshToken from the http-only cookie -refreshToken. csrfToken is required when refreshToken is provided as a cookie.\r\ntype RefreshToken {\r\n  # JWT token, required to authenticate.\r\n  token: String\r\n  # A user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\ninput ReorderInput {\r\n  # The ID of the item to move.\r\n  id: ID!\r\n  # The new relative sorting position of the item (from -inf to +inf). 1 moves the item one position forward, -1 moves the item one position backward, 0 leaves the item unchanged.\r\n  sortOrder: Int\r\n}\r\n\r\nenum ReportingPeriod {\r\n  TODAY\r\n  THIS_MONTH\r\n}\r\n\r\n# Request email change of the logged in user.\r\ntype RequestEmailChange {\r\n  # A user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Sends an email with the account password modification link.\r\ntype RequestPasswordReset {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Sales allow creating discounts for categories, collections or products and are visible to all the customers.\r\ntype Sale implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  type: SaleType!\r\n  startDate: DateTime!\r\n  endDate: DateTime\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # List of categories this sale applies to.\r\n  categories(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CategoryCountableConnection\r\n  # List of collections this sale applies to.\r\n  collections(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CollectionCountableConnection\r\n  # List of products this sale applies to.\r\n  products(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductCountableConnection\r\n  # Returns translated sale fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for sale.\r\n    languageCode: LanguageCodeEnum!\r\n  ): SaleTranslation\r\n  # List of channels available for the sale.\r\n  channelListings: [SaleChannelListing!]\r\n  # Sale value.\r\n  discountValue: Float\r\n  # Currency code for sale.\r\n  currency: String\r\n}\r\n\r\n# Adds products, categories, collections to a voucher.\r\ntype SaleAddCatalogues {\r\n  # Sale of which catalogue IDs will be modified.\r\n  sale: Sale\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\n# Deletes sales.\r\ntype SaleBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\n# Represents sale channel listing.\r\ntype SaleChannelListing implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  channel: Channel!\r\n  discountValue: Float!\r\n  currency: String!\r\n}\r\n\r\ninput SaleChannelListingAddInput {\r\n  # ID of a channel.\r\n  channelId: ID!\r\n  # The value of the discount.\r\n  discountValue: PositiveDecimal!\r\n}\r\n\r\ninput SaleChannelListingInput {\r\n  # List of channels to which the sale should be assigned.\r\n  addChannels: [SaleChannelListingAddInput!]\r\n  # List of channels from which the sale should be unassigned.\r\n  removeChannels: [ID!]\r\n}\r\n\r\n# Manage sale's availability in channels.\r\ntype SaleChannelListingUpdate {\r\n  # An updated sale instance.\r\n  sale: Sale\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\ntype SaleCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [SaleCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype SaleCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Sale!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new sale.\r\ntype SaleCreate {\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n  sale: Sale\r\n}\r\n\r\n# Deletes a sale.\r\ntype SaleDelete {\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n  sale: Sale\r\n}\r\n\r\ninput SaleFilterInput {\r\n  status: [DiscountStatusEnum]\r\n  saleType: DiscountValueTypeEnum\r\n  started: DateTimeRangeInput\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n}\r\n\r\ninput SaleInput {\r\n  # Voucher name.\r\n  name: String\r\n  # Fixed or percentage.\r\n  type: DiscountValueTypeEnum\r\n  # Value of the voucher.\r\n  value: PositiveDecimal\r\n  # Products related to the discount.\r\n  products: [ID]\r\n  # Categories related to the discount.\r\n  categories: [ID]\r\n  # Collections related to the discount.\r\n  collections: [ID]\r\n  # Start date of the voucher in ISO 8601 format.\r\n  startDate: DateTime\r\n  # End date of the voucher in ISO 8601 format.\r\n  endDate: DateTime\r\n}\r\n\r\n# Removes products, categories, collections from a sale.\r\ntype SaleRemoveCatalogues {\r\n  # Sale of which catalogue IDs will be modified.\r\n  sale: Sale\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\nenum SaleSortField {\r\n  # Sort sales by name.\r\n  NAME\r\n  # Sort sales by start date.\r\n  START_DATE\r\n  # Sort sales by end date.\r\n  END_DATE\r\n  # Sort sales by value.\r\n  VALUE\r\n  # Sort sales by type.\r\n  TYPE\r\n}\r\n\r\ninput SaleSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Specifies the channel in which to sort the data. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n  # Sort sales by the selected field.\r\n  field: SaleSortField!\r\n}\r\n\r\ntype SaleTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # Returns translated sale fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for sale.\r\n    languageCode: LanguageCodeEnum!\r\n  ): SaleTranslation\r\n  # Sales allow creating discounts for categories, collections or products and are visible to all the customers.\r\n  sale: Sale @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\n# Creates/updates translations for a sale.\r\ntype SaleTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  sale: Sale\r\n}\r\n\r\ntype SaleTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\n# An enumeration.\r\nenum SaleType {\r\n  # fixed\r\n  FIXED\r\n  # %\r\n  PERCENTAGE\r\n}\r\n\r\n# Updates a sale.\r\ntype SaleUpdate {\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n  sale: Sale\r\n}\r\n\r\n# Represents a custom attribute.\r\ntype SelectedAttribute {\r\n  # Name of an attribute displayed in the interface.\r\n  attribute: Attribute!\r\n  # Values of an attribute.\r\n  values: [AttributeValue]!\r\n}\r\n\r\ninput SeoInput {\r\n  # SEO title.\r\n  title: String\r\n  # SEO description.\r\n  description: String\r\n}\r\n\r\n# Sets the user's password from the token sent by email using the RequestPasswordReset mutation.\r\ntype SetPassword {\r\n  # JWT token, required to authenticate.\r\n  token: String\r\n  # JWT refresh token, required to re-generate access token.\r\n  refreshToken: String\r\n  # CSRF token required to re-generate access token.\r\n  csrfToken: String\r\n  # A user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\ntype ShippingError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ShippingErrorCode!\r\n  # List of warehouse IDs which causes the error.\r\n  warehouses: [ID!]\r\n  # List of channels IDs which causes the error.\r\n  channels: [ID!]\r\n}\r\n\r\n# An enumeration.\r\nenum ShippingErrorCode {\r\n  ALREADY_EXISTS\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  MAX_LESS_THAN_MIN\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  DUPLICATED_INPUT_ITEM\r\n}\r\n\r\n# Shipping method are the methods you'll use to get customer's orders to them. They are directly exposed to the customers.\r\ntype ShippingMethod implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  description: JSONString\r\n  minimumOrderWeight: Weight\r\n  maximumOrderWeight: Weight\r\n  maximumDeliveryDays: Int\r\n  minimumDeliveryDays: Int\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Type of the shipping method.\r\n  type: ShippingMethodTypeEnum\r\n  # Returns translated shipping method fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for shipping method.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ShippingMethodTranslation\r\n  # List of channels available for the method.\r\n  channelListings: [ShippingMethodChannelListing!]\r\n  # The price of the cheapest variant (including discounts).\r\n  price: Money\r\n  # The price of the cheapest variant (including discounts).\r\n  maximumOrderPrice: Money\r\n  # The price of the cheapest variant (including discounts).\r\n  minimumOrderPrice: Money\r\n  # Postal code ranges rule of exclusion or inclusion of the shipping method.\r\n  postalCodeRules: [ShippingMethodPostalCodeRule]\r\n  # List of excluded products for the shipping method.\r\n  excludedProducts(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductCountableConnection\r\n}\r\n\r\n# Represents shipping method channel listing.\r\ntype ShippingMethodChannelListing implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  channel: Channel!\r\n  minimumOrderPrice: Money\r\n  maximumOrderPrice: Money\r\n  price: Money\r\n}\r\n\r\ninput ShippingMethodChannelListingAddInput {\r\n  # ID of a channel.\r\n  channelId: ID!\r\n  # Shipping price of the shipping method in this channel.\r\n  price: PositiveDecimal\r\n  # Minimum order price to use this shipping method.\r\n  minimumOrderPrice: PositiveDecimal\r\n  # Maximum order price to use this shipping method.\r\n  maximumOrderPrice: PositiveDecimal\r\n}\r\n\r\ninput ShippingMethodChannelListingInput {\r\n  # List of channels to which the shipping method should be assigned.\r\n  addChannels: [ShippingMethodChannelListingAddInput!]\r\n  # List of channels from which the shipping method should be unassigned.\r\n  removeChannels: [ID!]\r\n}\r\n\r\n# Manage shipping method's availability in channels.\r\ntype ShippingMethodChannelListingUpdate {\r\n  # An updated shipping method instance.\r\n  shippingMethod: ShippingMethod\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\n# Represents shipping method postal code rule.\r\ntype ShippingMethodPostalCodeRule implements Node {\r\n  # Start address range.\r\n  start: String\r\n  # End address range.\r\n  end: String\r\n  # Inclusion type of the postal code rule.\r\n  inclusionType: PostalCodeRuleInclusionTypeEnum\r\n  # The ID of the object.\r\n  id: ID!\r\n}\r\n\r\ntype ShippingMethodTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  description: JSONString\r\n  # Returns translated shipping method fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for shipping method.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ShippingMethodTranslation\r\n  # Shipping method are the methods you'll use to get customer's orders  to them. They are directly exposed to the customers.\r\n  shippingMethod: ShippingMethod @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\ntype ShippingMethodTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String\r\n  description: JSONString\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\n# An enumeration.\r\nenum ShippingMethodTypeEnum {\r\n  PRICE\r\n  WEIGHT\r\n}\r\n\r\ninput ShippingPostalCodeRulesCreateInputRange {\r\n  # Start range of the postal code.\r\n  start: String!\r\n  # End range of the postal code.\r\n  end: String\r\n}\r\n\r\n# Deletes shipping prices.\r\ntype ShippingPriceBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\n# Creates a new shipping price.\r\ntype ShippingPriceCreate {\r\n  # A shipping zone to which the shipping method belongs.\r\n  shippingZone: ShippingZone\r\n  shippingMethod: ShippingMethod\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\n# Deletes a shipping price.\r\ntype ShippingPriceDelete {\r\n  # A shipping method to delete.\r\n  shippingMethod: ShippingMethod\r\n  # A shipping zone to which the shipping method belongs.\r\n  shippingZone: ShippingZone\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\n# Exclude products from shipping price.\r\ntype ShippingPriceExcludeProducts {\r\n  # A shipping method with new list of excluded products.\r\n  shippingMethod: ShippingMethod\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\ninput ShippingPriceExcludeProductsInput {\r\n  # List of products which will be excluded.\r\n  products: [ID]!\r\n}\r\n\r\ninput ShippingPriceInput {\r\n  # Name of the shipping method.\r\n  name: String\r\n  # Shipping method description (JSON).\r\n  description: JSONString\r\n  # Minimum order weight to use this shipping method.\r\n  minimumOrderWeight: WeightScalar\r\n  # Maximum order weight to use this shipping method.\r\n  maximumOrderWeight: WeightScalar\r\n  # Maximum number of days for delivery.\r\n  maximumDeliveryDays: Int\r\n  # Minimal number of days for delivery.\r\n  minimumDeliveryDays: Int\r\n  # Shipping type: price or weight based.\r\n  type: ShippingMethodTypeEnum\r\n  # Shipping zone this method belongs to.\r\n  shippingZone: ID\r\n  # Postal code rules to add.\r\n  addPostalCodeRules: [ShippingPostalCodeRulesCreateInputRange!]\r\n  # Postal code rules to delete.\r\n  deletePostalCodeRules: [ID!]\r\n  # Inclusion type for currently assigned postal code rules.\r\n  inclusionType: PostalCodeRuleInclusionTypeEnum\r\n}\r\n\r\n# Remove product from excluded list for shipping price.\r\ntype ShippingPriceRemoveProductFromExclude {\r\n  # A shipping method with new list of excluded products.\r\n  shippingMethod: ShippingMethod\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\n# Creates/updates translations for a shipping method.\r\ntype ShippingPriceTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  shippingMethod: ShippingMethod\r\n}\r\n\r\ninput ShippingPriceTranslationInput {\r\n  name: String\r\n  # Translated shipping method description (JSON).\r\n  description: JSONString\r\n}\r\n\r\n# Updates a new shipping price.\r\ntype ShippingPriceUpdate {\r\n  # A shipping zone to which the shipping method belongs.\r\n  shippingZone: ShippingZone\r\n  shippingMethod: ShippingMethod\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\n# Represents a shipping zone in the shop. Zones are the concept used only for grouping shipping methods in the dashboard, and are never exposed to the customers directly.\r\ntype ShippingZone implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  default: Boolean!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Lowest and highest prices for the shipping.\r\n  priceRange: MoneyRange\r\n  # List of countries available for the method.\r\n  countries: [CountryDisplay]\r\n  # List of shipping methods available for orders shipped to countries within this shipping zone.\r\n  shippingMethods: [ShippingMethod]\r\n  # List of warehouses for shipping zone.\r\n  warehouses: [Warehouse!]!\r\n  # List of channels for shipping zone.\r\n  channels: [Channel!]!\r\n  # Description of a shipping zone.\r\n  description: String\r\n}\r\n\r\n# Deletes shipping zones.\r\ntype ShippingZoneBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\ntype ShippingZoneCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [ShippingZoneCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype ShippingZoneCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: ShippingZone!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new shipping zone.\r\ntype ShippingZoneCreate {\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n  shippingZone: ShippingZone\r\n}\r\n\r\ninput ShippingZoneCreateInput {\r\n  # Shipping zone's name. Visible only to the staff.\r\n  name: String\r\n  # Description of the shipping zone.\r\n  description: String\r\n  # List of countries in this shipping zone.\r\n  countries: [String]\r\n  # Default shipping zone will be used for countries not covered by other zones.\r\n  default: Boolean\r\n  # List of warehouses to assign to a shipping zone\r\n  addWarehouses: [ID]\r\n  # List of channels to assign to the shipping zone.\r\n  addChannels: [ID!]\r\n}\r\n\r\n# Deletes a shipping zone.\r\ntype ShippingZoneDelete {\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n  shippingZone: ShippingZone\r\n}\r\n\r\ninput ShippingZoneFilterInput {\r\n  search: String\r\n  channels: [ID]\r\n}\r\n\r\n# Updates a new shipping zone.\r\ntype ShippingZoneUpdate {\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n  shippingZone: ShippingZone\r\n}\r\n\r\ninput ShippingZoneUpdateInput {\r\n  # Shipping zone's name. Visible only to the staff.\r\n  name: String\r\n  # Description of the shipping zone.\r\n  description: String\r\n  # List of countries in this shipping zone.\r\n  countries: [String]\r\n  # Default shipping zone will be used for countries not covered by other zones.\r\n  default: Boolean\r\n  # List of warehouses to assign to a shipping zone\r\n  addWarehouses: [ID]\r\n  # List of channels to assign to the shipping zone.\r\n  addChannels: [ID!]\r\n  # List of warehouses to unassign from a shipping zone\r\n  removeWarehouses: [ID]\r\n  # List of channels to unassign from the shipping zone.\r\n  removeChannels: [ID!]\r\n}\r\n\r\n# Represents a shop resource containing general shop data and configuration.\r\ntype Shop {\r\n  # List of available payment gateways.\r\n  availablePaymentGateways(\r\n    # DEPRECATED: use `channel` argument instead. This argument will be removed in Saleor 4.0.A currency for which gateways will be returned.\r\n    currency: String\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): [PaymentGateway!]!\r\n  # List of available external authentications.\r\n  availableExternalAuthentications: [ExternalAuthentication!]!\r\n  # Shipping methods that are available for the shop.\r\n  availableShippingMethods(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String!\r\n    # Address for which available shipping methods should be returned.\r\n    address: AddressInput\r\n  ): [ShippingMethod]\r\n  # List of countries available in the shop.\r\n  countries(\r\n    # DEPRECATED: This argument will be removed in Saleor 4.0. A language code to return the translation for.\r\n    languageCode: LanguageCodeEnum\r\n  ): [CountryDisplay!]!\r\n  # Shop's default country.\r\n  defaultCountry: CountryDisplay\r\n  # Default shop's email sender's name.\r\n  defaultMailSenderName: String\r\n  # Default shop's email sender's address.\r\n  defaultMailSenderAddress: String\r\n  # Shop's description.\r\n  description: String\r\n  # Shop's domain data.\r\n  domain: Domain!\r\n  # List of the shops's supported languages.\r\n  languages: [LanguageDisplay]!\r\n  # Shop's name.\r\n  name: String!\r\n  # List of available permissions.\r\n  permissions: [Permission]!\r\n  # List of possible phone prefixes.\r\n  phonePrefixes: [String]!\r\n  # Header text.\r\n  headerText: String\r\n  # Include taxes in prices.\r\n  includeTaxesInPrices: Boolean!\r\n  # Display prices with tax in store.\r\n  displayGrossPrices: Boolean!\r\n  # Charge taxes on shipping.\r\n  chargeTaxesOnShipping: Boolean!\r\n  # Enable inventory tracking.\r\n  trackInventoryByDefault: Boolean\r\n  # Default weight unit.\r\n  defaultWeightUnit: WeightUnitsEnum\r\n  # Returns translated shop fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for shop.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ShopTranslation\r\n  # Enable automatic fulfillment for all digital products.\r\n  automaticFulfillmentDigitalProducts: Boolean\r\n  # Default number of max downloads per digital content URL.\r\n  defaultDigitalMaxDownloads: Int\r\n  # Default number of days which digital content URL will be valid.\r\n  defaultDigitalUrlValidDays: Int\r\n  # Company address.\r\n  companyAddress: Address\r\n  # URL of a view where customers can set their password.\r\n  customerSetPasswordUrl: String\r\n  # List of staff notification recipients.\r\n  staffNotificationRecipients: [StaffNotificationRecipient]\r\n  # Resource limitations and current usage if any set for a shop\r\n  limits: LimitInfo!\r\n  # Saleor API version.\r\n  version: String!\r\n}\r\n\r\n# Update the shop's address. If the `null` value is passed, the currently selected address will be deleted.\r\ntype ShopAddressUpdate {\r\n  # Updated shop.\r\n  shop: Shop\r\n  shopErrors: [ShopError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShopError!]!\r\n}\r\n\r\n# Updates site domain of the shop.\r\ntype ShopDomainUpdate {\r\n  # Updated shop.\r\n  shop: Shop\r\n  shopErrors: [ShopError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShopError!]!\r\n}\r\n\r\ntype ShopError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ShopErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum ShopErrorCode {\r\n  ALREADY_EXISTS\r\n  CANNOT_FETCH_TAX_RATES\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\n# Fetch tax rates.\r\ntype ShopFetchTaxRates {\r\n  # Updated shop.\r\n  shop: Shop\r\n  shopErrors: [ShopError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShopError!]!\r\n}\r\n\r\ninput ShopSettingsInput {\r\n  # Header text.\r\n  headerText: String\r\n  # SEO description.\r\n  description: String\r\n  # Include taxes in prices.\r\n  includeTaxesInPrices: Boolean\r\n  # Display prices with tax in store.\r\n  displayGrossPrices: Boolean\r\n  # Charge taxes on shipping.\r\n  chargeTaxesOnShipping: Boolean\r\n  # Enable inventory tracking.\r\n  trackInventoryByDefault: Boolean\r\n  # Default weight unit.\r\n  defaultWeightUnit: WeightUnitsEnum\r\n  # Enable automatic fulfillment for all digital products.\r\n  automaticFulfillmentDigitalProducts: Boolean\r\n  # Default number of max downloads per digital content URL.\r\n  defaultDigitalMaxDownloads: Int\r\n  # Default number of days which digital content URL will be valid.\r\n  defaultDigitalUrlValidDays: Int\r\n  # Default email sender's name.\r\n  defaultMailSenderName: String\r\n  # Default email sender's address.\r\n  defaultMailSenderAddress: String\r\n  # URL of a view where customers can set their password.\r\n  customerSetPasswordUrl: String\r\n}\r\n\r\n# Creates/updates translations for shop settings.\r\ntype ShopSettingsTranslate {\r\n  # Updated shop settings.\r\n  shop: Shop\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n}\r\n\r\ninput ShopSettingsTranslationInput {\r\n  headerText: String\r\n  description: String\r\n}\r\n\r\n# Updates shop settings.\r\ntype ShopSettingsUpdate {\r\n  # Updated shop.\r\n  shop: Shop\r\n  shopErrors: [ShopError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShopError!]!\r\n}\r\n\r\ntype ShopTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  headerText: String!\r\n  description: String!\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\ninput SiteDomainInput {\r\n  # Domain name for shop.\r\n  domain: String\r\n  # Shop site name.\r\n  name: String\r\n}\r\n\r\n# Deletes staff users.\r\ntype StaffBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  staffErrors: [StaffError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [StaffError!]!\r\n}\r\n\r\n# Creates a new staff user.\r\ntype StaffCreate {\r\n  staffErrors: [StaffError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [StaffError!]!\r\n  user: User\r\n}\r\n\r\ninput StaffCreateInput {\r\n  # Given name.\r\n  firstName: String\r\n  # Family name.\r\n  lastName: String\r\n  # The unique email address of the user.\r\n  email: String\r\n  # User account is active.\r\n  isActive: Boolean\r\n  # A note about the user.\r\n  note: String\r\n  # List of permission group IDs to which user should be assigned.\r\n  addGroups: [ID!]\r\n  # URL of a view where users should be redirected to set the password. URL in RFC 1808 format.\r\n  redirectUrl: String\r\n}\r\n\r\n# Deletes a staff user.\r\ntype StaffDelete {\r\n  staffErrors: [StaffError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [StaffError!]!\r\n  user: User\r\n}\r\n\r\ntype StaffError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: AccountErrorCode!\r\n  # A type of address that causes the error.\r\n  addressType: AddressTypeEnum\r\n  # List of permissions which causes the error.\r\n  permissions: [PermissionEnum!]\r\n  # List of permission group IDs which cause the error.\r\n  groups: [ID!]\r\n  # List of user IDs which causes the error.\r\n  users: [ID!]\r\n}\r\n\r\nenum StaffMemberStatus {\r\n  # User account has been activated.\r\n  ACTIVE\r\n  # User account has not been activated yet.\r\n  DEACTIVATED\r\n}\r\n\r\n# Represents a recipient of email notifications send by Saleor, such as notifications about new orders. Notifications can be assigned to staff users or arbitrary email addresses.\r\ntype StaffNotificationRecipient implements Node {\r\n  # Returns a user subscribed to email notifications.\r\n  user: User\r\n  # Determines if a notification active.\r\n  active: Boolean\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Returns email address of a user subscribed to email notifications.\r\n  email: String\r\n}\r\n\r\n# Creates a new staff notification recipient.\r\ntype StaffNotificationRecipientCreate {\r\n  shopErrors: [ShopError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShopError!]!\r\n  staffNotificationRecipient: StaffNotificationRecipient\r\n}\r\n\r\n# Delete staff notification recipient.\r\ntype StaffNotificationRecipientDelete {\r\n  shopErrors: [ShopError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShopError!]!\r\n  staffNotificationRecipient: StaffNotificationRecipient\r\n}\r\n\r\ninput StaffNotificationRecipientInput {\r\n  # The ID of the user subscribed to email notifications..\r\n  user: ID\r\n  # Email address of a user subscribed to email notifications.\r\n  email: String\r\n  # Determines if a notification active.\r\n  active: Boolean\r\n}\r\n\r\n# Updates a staff notification recipient.\r\ntype StaffNotificationRecipientUpdate {\r\n  shopErrors: [ShopError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShopError!]!\r\n  staffNotificationRecipient: StaffNotificationRecipient\r\n}\r\n\r\n# Updates an existing staff user.\r\ntype StaffUpdate {\r\n  staffErrors: [StaffError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [StaffError!]!\r\n  user: User\r\n}\r\n\r\ninput StaffUpdateInput {\r\n  # Given name.\r\n  firstName: String\r\n  # Family name.\r\n  lastName: String\r\n  # The unique email address of the user.\r\n  email: String\r\n  # User account is active.\r\n  isActive: Boolean\r\n  # A note about the user.\r\n  note: String\r\n  # List of permission group IDs to which user should be assigned.\r\n  addGroups: [ID!]\r\n  # List of permission group IDs from which user should be unassigned.\r\n  removeGroups: [ID!]\r\n}\r\n\r\ninput StaffUserInput {\r\n  status: StaffMemberStatus\r\n  search: String\r\n}\r\n\r\n# Represents stock.\r\ntype Stock implements Node {\r\n  warehouse: Warehouse!\r\n  productVariant: ProductVariant!\r\n  # Quantity of a product in the warehouse's possession, including the allocated stock that is waiting for shipment.\r\n  quantity: Int!\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Quantity allocated for orders\r\n  quantityAllocated: Int!\r\n}\r\n\r\nenum StockAvailability {\r\n  IN_STOCK\r\n  OUT_OF_STOCK\r\n}\r\n\r\ntype StockCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [StockCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype StockCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Stock!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\ntype StockError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: StockErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum StockErrorCode {\r\n  ALREADY_EXISTS\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\ninput StockFilterInput {\r\n  quantity: Float\r\n  search: String\r\n}\r\n\r\ninput StockInput {\r\n  # Warehouse in which stock is located.\r\n  warehouse: ID!\r\n  # Quantity of items available for sell.\r\n  quantity: Int!\r\n}\r\n\r\n# Representation of tax types fetched from tax gateway.\r\ntype TaxType {\r\n  # Description of the tax type.\r\n  description: String\r\n  # External tax code used to identify given tax group.\r\n  taxCode: String\r\n}\r\n\r\n# Represents a monetary value with taxes. In cases where taxes were not applied, net and gross values will be equal.\r\ntype TaxedMoney {\r\n  # Currency code.\r\n  currency: String!\r\n  # Amount of money including taxes.\r\n  gross: Money!\r\n  # Amount of money without taxes.\r\n  net: Money!\r\n  # Amount of taxes.\r\n  tax: Money!\r\n}\r\n\r\n# Represents a range of monetary values.\r\ntype TaxedMoneyRange {\r\n  # Lower bound of a price range.\r\n  start: TaxedMoney\r\n  # Upper bound of a price range.\r\n  stop: TaxedMoney\r\n}\r\n\r\n# An object representing a single payment.\r\ntype Transaction implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  created: DateTime!\r\n  payment: Payment!\r\n  token: String!\r\n  kind: TransactionKind!\r\n  isSuccess: Boolean!\r\n  error: String\r\n  gatewayResponse: JSONString!\r\n  # Total amount of the transaction.\r\n  amount: Money\r\n}\r\n\r\n# An enumeration.\r\nenum TransactionKind {\r\n  # External reference\r\n  EXTERNAL\r\n  # Authorization\r\n  AUTH\r\n  # Pending\r\n  PENDING\r\n  # Action to confirm\r\n  ACTION_TO_CONFIRM\r\n  # Refund\r\n  REFUND\r\n  # Refund in progress\r\n  REFUND_ONGOING\r\n  # Capture\r\n  CAPTURE\r\n  # Void\r\n  VOID\r\n  # Confirm\r\n  CONFIRM\r\n  # Cancel\r\n  CANCEL\r\n}\r\n\r\nunion TranslatableItem = ProductTranslatableContent | CollectionTranslatableContent | CategoryTranslatableContent | AttributeTranslatableContent | AttributeValueTranslatableContent | ProductVariantTranslatableContent | PageTranslatableContent | ShippingMethodTranslatableContent | SaleTranslatableContent | VoucherTranslatableContent | MenuItemTranslatableContent\r\n\r\ntype TranslatableItemConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [TranslatableItemEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype TranslatableItemEdge {\r\n  # The item at the end of the edge.\r\n  node: TranslatableItem!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\nenum TranslatableKinds {\r\n  ATTRIBUTE\r\n  ATTRIBUTE_VALUE\r\n  CATEGORY\r\n  COLLECTION\r\n  MENU_ITEM\r\n  PAGE\r\n  PRODUCT\r\n  SALE\r\n  SHIPPING_METHOD\r\n  VARIANT\r\n  VOUCHER\r\n}\r\n\r\ntype TranslationError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: TranslationErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum TranslationErrorCode {\r\n  GRAPHQL_ERROR\r\n  NOT_FOUND\r\n  REQUIRED\r\n}\r\n\r\ninput TranslationInput {\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String\r\n  description: JSONString\r\n}\r\n\r\nscalar UUID\r\n\r\ninput UpdateInvoiceInput {\r\n  # Invoice number\r\n  number: String\r\n  # URL of an invoice to download.\r\n  url: String\r\n}\r\n\r\n# Updates metadata of an object.\r\ntype UpdateMetadata {\r\n  metadataErrors: [MetadataError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MetadataError!]!\r\n  item: ObjectWithMetadata\r\n}\r\n\r\n# Updates private metadata of an object.\r\ntype UpdatePrivateMetadata {\r\n  metadataErrors: [MetadataError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MetadataError!]!\r\n  item: ObjectWithMetadata\r\n}\r\n\r\n# Variables of this type must be set to null in mutations. They will be replaced with a filename from a following multipart part containing a binary file. See: https://github.com/jaydenseric/graphql-multipart-request-spec.\r\nscalar Upload\r\n\r\ntype UploadError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: UploadErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum UploadErrorCode {\r\n  GRAPHQL_ERROR\r\n}\r\n\r\n# Represents user data.\r\ntype User implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  lastLogin: DateTime\r\n  email: String!\r\n  firstName: String!\r\n  lastName: String!\r\n  isStaff: Boolean!\r\n  isActive: Boolean!\r\n  # A note about the customer.\r\n  note: String\r\n  dateJoined: DateTime!\r\n  defaultShippingAddress: Address\r\n  defaultBillingAddress: Address\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # List of all user's addresses.\r\n  addresses: [Address]\r\n  # Returns the last open checkout of this user.\r\n  checkout: Checkout @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `checkout_tokens` field to fetch the user checkouts.\")\r\n  # Returns the checkout UUID's assigned to this user.\r\n  checkoutTokens(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): [UUID!]\r\n  # List of the user gift cards.\r\n  giftCards(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): GiftCardCountableConnection\r\n  # List of user's orders.\r\n  orders(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): OrderCountableConnection\r\n  # List of user's permissions.\r\n  userPermissions: [UserPermission]\r\n  # List of user's permission groups.\r\n  permissionGroups: [Group]\r\n  # List of user's permission groups which user can manage.\r\n  editableGroups: [Group]\r\n  avatar(\r\n    # Size of the avatar.\r\n    size: Int\r\n  ): Image\r\n  # List of events associated with the user.\r\n  events: [CustomerEvent]\r\n  # List of stored payment sources.\r\n  storedPaymentSources(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): [PaymentSource]\r\n  # User language code.\r\n  languageCode: LanguageCodeEnum!\r\n}\r\n\r\n# Deletes a user avatar. Only for staff members.\r\ntype UserAvatarDelete {\r\n  # An updated user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Create a user avatar. Only for staff members. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\ntype UserAvatarUpdate {\r\n  # An updated user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Activate or deactivate users.\r\ntype UserBulkSetActive {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\ntype UserCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [UserCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype UserCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: User!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\ninput UserCreateInput {\r\n  # Billing address of the customer.\r\n  defaultBillingAddress: AddressInput\r\n  # Shipping address of the customer.\r\n  defaultShippingAddress: AddressInput\r\n  # Given name.\r\n  firstName: String\r\n  # Family name.\r\n  lastName: String\r\n  # The unique email address of the user.\r\n  email: String\r\n  # User account is active.\r\n  isActive: Boolean\r\n  # A note about the user.\r\n  note: String\r\n  # User language code.\r\n  languageCode: LanguageCodeEnum\r\n  # URL of a view where users should be redirected to set the password. URL in RFC 1808 format.\r\n  redirectUrl: String\r\n  # Slug of a channel which will be used for notify user. Optional when only one channel exists.\r\n  channel: String\r\n}\r\n\r\ntype UserPermission {\r\n  # Internal code for permission.\r\n  code: PermissionEnum!\r\n  # Describe action(s) allowed to do by permission.\r\n  name: String!\r\n  # List of user permission groups which contains this permission.\r\n  sourcePermissionGroups(\r\n    # ID of user whose groups should be returned.\r\n    userId: ID!\r\n  ): [Group!]\r\n}\r\n\r\nenum UserSortField {\r\n  # Sort users by first name.\r\n  FIRST_NAME\r\n  # Sort users by last name.\r\n  LAST_NAME\r\n  # Sort users by email.\r\n  EMAIL\r\n  # Sort users by order count.\r\n  ORDER_COUNT\r\n}\r\n\r\ninput UserSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort users by the selected field.\r\n  field: UserSortField!\r\n}\r\n\r\n# Represents a VAT rate for a country.\r\ntype VAT {\r\n  # Country code.\r\n  countryCode: String!\r\n  # Standard VAT rate in percent.\r\n  standardRate: Float\r\n  # Country's VAT rate exceptions for specific types of goods.\r\n  reducedRates: [ReducedRate]!\r\n}\r\n\r\nenum VariantAttributeScope {\r\n  ALL\r\n  VARIANT_SELECTION\r\n  NOT_VARIANT_SELECTION\r\n}\r\n\r\n# Assign an media to a product variant.\r\ntype VariantMediaAssign {\r\n  productVariant: ProductVariant\r\n  media: ProductMedia\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Unassign an media from a product variant.\r\ntype VariantMediaUnassign {\r\n  productVariant: ProductVariant\r\n  media: ProductMedia\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Represents availability of a variant in the storefront.\r\ntype VariantPricingInfo {\r\n  # Whether it is in sale or not.\r\n  onSale: Boolean\r\n  # The discount amount if in sale (null otherwise).\r\n  discount: TaxedMoney\r\n  # The discount amount in the local currency.\r\n  discountLocalCurrency: TaxedMoney\r\n  # The price, with any discount subtracted.\r\n  price: TaxedMoney\r\n  # The price without any discount.\r\n  priceUndiscounted: TaxedMoney\r\n  # The discounted price in the local currency.\r\n  priceLocalCurrency: TaxedMoney\r\n}\r\n\r\n# Verify JWT token.\r\ntype VerifyToken {\r\n  # User assigned to token.\r\n  user: User\r\n  # Determine if token is valid or not.\r\n  isValid: Boolean!\r\n  # JWT payload.\r\n  payload: GenericScalar\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum VolumeUnitsEnum {\r\n  CUBIC_MILLIMETER\r\n  CUBIC_CENTIMETER\r\n  CUBIC_DECIMETER\r\n  CUBIC_METER\r\n  LITER\r\n  CUBIC_FOOT\r\n  CUBIC_INCH\r\n  CUBIC_YARD\r\n  QT\r\n  PINT\r\n  FL_OZ\r\n  ACRE_IN\r\n  ACRE_FT\r\n}\r\n\r\n# Vouchers allow giving discounts to particular customers on categories, collections or specific products. They can be used during checkout by providing valid voucher codes.\r\ntype Voucher implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String\r\n  # Determines a type of voucher.\r\n  type: VoucherTypeEnum!\r\n  code: String!\r\n  usageLimit: Int\r\n  used: Int!\r\n  startDate: DateTime!\r\n  endDate: DateTime\r\n  applyOncePerOrder: Boolean!\r\n  applyOncePerCustomer: Boolean!\r\n  onlyForStaff: Boolean!\r\n  # Determines a type of discount for voucher - value or percentage\r\n  discountValueType: DiscountValueTypeEnum!\r\n  minCheckoutItemsQuantity: Int\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # List of categories this voucher applies to.\r\n  categories(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CategoryCountableConnection\r\n  # List of collections this voucher applies to.\r\n  collections(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CollectionCountableConnection\r\n  # List of products this voucher applies to.\r\n  products(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductCountableConnection\r\n  # List of countries available for the shipping voucher.\r\n  countries: [CountryDisplay]\r\n  # Returns translated voucher fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for voucher.\r\n    languageCode: LanguageCodeEnum!\r\n  ): VoucherTranslation\r\n  # Voucher value.\r\n  discountValue: Float\r\n  # Currency code for voucher.\r\n  currency: String\r\n  # Minimum order value to apply voucher.\r\n  minSpent: Money\r\n  # List of availability in channels for the voucher.\r\n  channelListings: [VoucherChannelListing!]\r\n}\r\n\r\n# Adds products, categories, collections to a voucher.\r\ntype VoucherAddCatalogues {\r\n  # Voucher of which catalogue IDs will be modified.\r\n  voucher: Voucher\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\n# Deletes vouchers.\r\ntype VoucherBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\n# Represents voucher channel listing.\r\ntype VoucherChannelListing implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  channel: Channel!\r\n  discountValue: Float!\r\n  currency: String!\r\n  minSpent: Money\r\n}\r\n\r\ninput VoucherChannelListingAddInput {\r\n  # ID of a channel.\r\n  channelId: ID!\r\n  # Value of the voucher.\r\n  discountValue: PositiveDecimal\r\n  # Min purchase amount required to apply the voucher.\r\n  minAmountSpent: PositiveDecimal\r\n}\r\n\r\ninput VoucherChannelListingInput {\r\n  # List of channels to which the voucher should be assigned.\r\n  addChannels: [VoucherChannelListingAddInput!]\r\n  # List of channels from which the voucher should be unassigned.\r\n  removeChannels: [ID!]\r\n}\r\n\r\n# Manage voucher's availability in channels.\r\ntype VoucherChannelListingUpdate {\r\n  # An updated voucher instance.\r\n  voucher: Voucher\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\ntype VoucherCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [VoucherCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype VoucherCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Voucher!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new voucher.\r\ntype VoucherCreate {\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n  voucher: Voucher\r\n}\r\n\r\n# Deletes a voucher.\r\ntype VoucherDelete {\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n  voucher: Voucher\r\n}\r\n\r\nenum VoucherDiscountType {\r\n  FIXED\r\n  PERCENTAGE\r\n  SHIPPING\r\n}\r\n\r\ninput VoucherFilterInput {\r\n  status: [DiscountStatusEnum]\r\n  timesUsed: IntRangeInput\r\n  discountType: [VoucherDiscountType]\r\n  started: DateTimeRangeInput\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n}\r\n\r\ninput VoucherInput {\r\n  # Voucher type: PRODUCT, CATEGORY SHIPPING or ENTIRE_ORDER.\r\n  type: VoucherTypeEnum\r\n  # Voucher name.\r\n  name: String\r\n  # Code to use the voucher.\r\n  code: String\r\n  # Start date of the voucher in ISO 8601 format.\r\n  startDate: DateTime\r\n  # End date of the voucher in ISO 8601 format.\r\n  endDate: DateTime\r\n  # Choices: fixed or percentage.\r\n  discountValueType: DiscountValueTypeEnum\r\n  # Products discounted by the voucher.\r\n  products: [ID]\r\n  # Collections discounted by the voucher.\r\n  collections: [ID]\r\n  # Categories discounted by the voucher.\r\n  categories: [ID]\r\n  # Minimal quantity of checkout items required to apply the voucher.\r\n  minCheckoutItemsQuantity: Int\r\n  # Country codes that can be used with the shipping voucher.\r\n  countries: [String]\r\n  # Voucher should be applied to the cheapest item or entire order.\r\n  applyOncePerOrder: Boolean\r\n  # Voucher should be applied once per customer.\r\n  applyOncePerCustomer: Boolean\r\n  # Voucher can be used only by staff user.\r\n  onlyForStaff: Boolean\r\n  # Limit number of times this voucher can be used in total.\r\n  usageLimit: Int\r\n}\r\n\r\n# Removes products, categories, collections from a voucher.\r\ntype VoucherRemoveCatalogues {\r\n  # Voucher of which catalogue IDs will be modified.\r\n  voucher: Voucher\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\nenum VoucherSortField {\r\n  # Sort vouchers by code.\r\n  CODE\r\n  # Sort vouchers by start date.\r\n  START_DATE\r\n  # Sort vouchers by end date.\r\n  END_DATE\r\n  # Sort vouchers by value.\r\n  VALUE\r\n  # Sort vouchers by type.\r\n  TYPE\r\n  # Sort vouchers by usage limit.\r\n  USAGE_LIMIT\r\n  # Sort vouchers by minimum spent amount.\r\n  MINIMUM_SPENT_AMOUNT\r\n}\r\n\r\ninput VoucherSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Specifies the channel in which to sort the data. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n  # Sort vouchers by the selected field.\r\n  field: VoucherSortField!\r\n}\r\n\r\ntype VoucherTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String\r\n  # Returns translated voucher fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for voucher.\r\n    languageCode: LanguageCodeEnum!\r\n  ): VoucherTranslation\r\n  # Vouchers allow giving discounts to particular customers on categories, collections or specific products. They can be used during checkout by providing valid voucher codes.\r\n  voucher: Voucher @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\n# Creates/updates translations for a voucher.\r\ntype VoucherTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  voucher: Voucher\r\n}\r\n\r\ntype VoucherTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\nenum VoucherTypeEnum {\r\n  SHIPPING\r\n  ENTIRE_ORDER\r\n  SPECIFIC_PRODUCT\r\n}\r\n\r\n# Updates a voucher.\r\ntype VoucherUpdate {\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n  voucher: Voucher\r\n}\r\n\r\n# Represents warehouse.\r\ntype Warehouse implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  slug: String!\r\n  shippingZones(before: String, after: String, first: Int, last: Int): ShippingZoneCountableConnection!\r\n  address: Address!\r\n  email: String!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Warehouse company name.\r\n  companyName: String! @deprecated(reason: \"Use address.CompanyName. This field will be removed in Saleor 4.0.\")\r\n}\r\n\r\ntype WarehouseCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [WarehouseCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype WarehouseCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Warehouse!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates new warehouse.\r\ntype WarehouseCreate {\r\n  warehouseErrors: [WarehouseError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WarehouseError!]!\r\n  warehouse: Warehouse\r\n}\r\n\r\ninput WarehouseCreateInput {\r\n  # Warehouse slug.\r\n  slug: String\r\n  # The email address of the warehouse.\r\n  email: String\r\n  # Warehouse name.\r\n  name: String!\r\n  # Address of the warehouse.\r\n  address: AddressInput!\r\n  # Shipping zones supported by the warehouse.\r\n  shippingZones: [ID]\r\n}\r\n\r\n# Deletes selected warehouse.\r\ntype WarehouseDelete {\r\n  warehouseErrors: [WarehouseError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WarehouseError!]!\r\n  warehouse: Warehouse\r\n}\r\n\r\ntype WarehouseError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: WarehouseErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum WarehouseErrorCode {\r\n  ALREADY_EXISTS\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\ninput WarehouseFilterInput {\r\n  search: String\r\n  ids: [ID]\r\n}\r\n\r\n# Add shipping zone to given warehouse.\r\ntype WarehouseShippingZoneAssign {\r\n  warehouseErrors: [WarehouseError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WarehouseError!]!\r\n  warehouse: Warehouse\r\n}\r\n\r\n# Remove shipping zone from given warehouse.\r\ntype WarehouseShippingZoneUnassign {\r\n  warehouseErrors: [WarehouseError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WarehouseError!]!\r\n  warehouse: Warehouse\r\n}\r\n\r\nenum WarehouseSortField {\r\n  # Sort warehouses by name.\r\n  NAME\r\n}\r\n\r\ninput WarehouseSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort warehouses by the selected field.\r\n  field: WarehouseSortField!\r\n}\r\n\r\n# Updates given warehouse.\r\ntype WarehouseUpdate {\r\n  warehouseErrors: [WarehouseError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WarehouseError!]!\r\n  warehouse: Warehouse\r\n}\r\n\r\ninput WarehouseUpdateInput {\r\n  # Warehouse slug.\r\n  slug: String\r\n  # The email address of the warehouse.\r\n  email: String\r\n  # Warehouse name.\r\n  name: String\r\n  # Address of the warehouse.\r\n  address: AddressInput\r\n}\r\n\r\n# Webhook.\r\ntype Webhook implements Node {\r\n  name: String!\r\n  targetUrl: String!\r\n  isActive: Boolean!\r\n  secretKey: String\r\n  # The ID of the object.\r\n  id: ID!\r\n  # List of webhook events.\r\n  events: [WebhookEvent!]!\r\n  app: App!\r\n}\r\n\r\n# Creates a new webhook subscription.\r\ntype WebhookCreate {\r\n  webhookErrors: [WebhookError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WebhookError!]!\r\n  webhook: Webhook\r\n}\r\n\r\ninput WebhookCreateInput {\r\n  # The name of the webhook.\r\n  name: String\r\n  # The url to receive the payload.\r\n  targetUrl: String\r\n  # The events that webhook wants to subscribe.\r\n  events: [WebhookEventTypeEnum]\r\n  # ID of the app to which webhook belongs.\r\n  app: ID\r\n  # Determine if webhook will be set active or not.\r\n  isActive: Boolean\r\n  # The secret key used to create a hash signature with each payload.\r\n  secretKey: String\r\n}\r\n\r\n# Deletes a webhook subscription.\r\ntype WebhookDelete {\r\n  webhookErrors: [WebhookError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WebhookError!]!\r\n  webhook: Webhook\r\n}\r\n\r\ntype WebhookError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: WebhookErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum WebhookErrorCode {\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\n# Webhook event.\r\ntype WebhookEvent {\r\n  # Internal name of the event type.\r\n  eventType: WebhookEventTypeEnum!\r\n  # Display name of the event.\r\n  name: String!\r\n}\r\n\r\n# Enum determining type of webhook.\r\nenum WebhookEventTypeEnum {\r\n  # All the events.\r\n  ANY_EVENTS\r\n  # A new order is placed.\r\n  ORDER_CREATED\r\n  # An order is confirmed (status change unconfirmed -> unfulfilled) by a staff user using the OrderConfirm mutation. It also triggers when the user completes the checkout and the shop setting `automatically_confirm_all_new_orders` is enabled.\r\n  ORDER_CONFIRMED\r\n  # Payment is made and an order is fully paid.\r\n  ORDER_FULLY_PAID\r\n  # An order is updated; triggered for all changes related to an order; covers all other order webhooks, except for ORDER_CREATED.\r\n  ORDER_UPDATED\r\n  # An order is cancelled.\r\n  ORDER_CANCELLED\r\n  # An order is fulfilled.\r\n  ORDER_FULFILLED\r\n  DRAFT_ORDER_CREATED\r\n  DRAFT_ORDER_UPDATED\r\n  DRAFT_ORDER_DELETED\r\n  # An invoice for order requested.\r\n  INVOICE_REQUESTED\r\n  # An invoice is deleted.\r\n  INVOICE_DELETED\r\n  # Invoice has been sent.\r\n  INVOICE_SENT\r\n  # A new customer account is created.\r\n  CUSTOMER_CREATED\r\n  # A customer account is updated.\r\n  CUSTOMER_UPDATED\r\n  # A new product is created.\r\n  PRODUCT_CREATED\r\n  # A product is updated.\r\n  PRODUCT_UPDATED\r\n  # A product is deleted.\r\n  PRODUCT_DELETED\r\n  # A new product variant is created.\r\n  PRODUCT_VARIANT_CREATED\r\n  # A product variant is updated.\r\n  PRODUCT_VARIANT_UPDATED\r\n  # A product variant is deleted.\r\n  PRODUCT_VARIANT_DELETED\r\n  # A new checkout is created.\r\n  CHECKOUT_CREATED\r\n  # A checkout is updated. It also triggers all updates related to the checkout.\r\n  CHECKOUT_UPDATED\r\n  # A new fulfillment is created.\r\n  FULFILLMENT_CREATED\r\n  # User notification triggered.\r\n  NOTIFY_USER\r\n  # A new page is created.\r\n  PAGE_CREATED\r\n  # A page is updated.\r\n  PAGE_UPDATED\r\n  # A page is deleted.\r\n  PAGE_DELETED\r\n  PAYMENT_AUTHORIZE\r\n  PAYMENT_CAPTURE\r\n  PAYMENT_CONFIRM\r\n  PAYMENT_LIST_GATEWAYS\r\n  PAYMENT_PROCESS\r\n  PAYMENT_REFUND\r\n  PAYMENT_VOID\r\n  TRANSLATION_CREATED\r\n  TRANSLATION_UPDATED\r\n}\r\n\r\n# An enumeration.\r\nenum WebhookSampleEventTypeEnum {\r\n  ORDER_CREATED\r\n  ORDER_CONFIRMED\r\n  ORDER_FULLY_PAID\r\n  ORDER_UPDATED\r\n  ORDER_CANCELLED\r\n  ORDER_FULFILLED\r\n  DRAFT_ORDER_CREATED\r\n  DRAFT_ORDER_UPDATED\r\n  DRAFT_ORDER_DELETED\r\n  INVOICE_REQUESTED\r\n  INVOICE_DELETED\r\n  INVOICE_SENT\r\n  CUSTOMER_CREATED\r\n  CUSTOMER_UPDATED\r\n  PRODUCT_CREATED\r\n  PRODUCT_UPDATED\r\n  PRODUCT_DELETED\r\n  PRODUCT_VARIANT_CREATED\r\n  PRODUCT_VARIANT_UPDATED\r\n  PRODUCT_VARIANT_DELETED\r\n  CHECKOUT_CREATED\r\n  CHECKOUT_UPDATED\r\n  FULFILLMENT_CREATED\r\n  NOTIFY_USER\r\n  PAGE_CREATED\r\n  PAGE_UPDATED\r\n  PAGE_DELETED\r\n  PAYMENT_AUTHORIZE\r\n  PAYMENT_CAPTURE\r\n  PAYMENT_CONFIRM\r\n  PAYMENT_LIST_GATEWAYS\r\n  PAYMENT_PROCESS\r\n  PAYMENT_REFUND\r\n  PAYMENT_VOID\r\n  TRANSLATION_CREATED\r\n  TRANSLATION_UPDATED\r\n}\r\n\r\n# Updates a webhook subscription.\r\ntype WebhookUpdate {\r\n  webhookErrors: [WebhookError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WebhookError!]!\r\n  webhook: Webhook\r\n}\r\n\r\ninput WebhookUpdateInput {\r\n  # The new name of the webhook.\r\n  name: String\r\n  # The url to receive the payload.\r\n  targetUrl: String\r\n  # The events that webhook wants to subscribe.\r\n  events: [WebhookEventTypeEnum]\r\n  # ID of the app to which webhook belongs.\r\n  app: ID\r\n  # Determine if webhook will be set active or not.\r\n  isActive: Boolean\r\n  # Use to create a hash signature with each payload.\r\n  secretKey: String\r\n}\r\n\r\n# Represents weight value in a specific weight unit.\r\ntype Weight {\r\n  # Weight unit.\r\n  unit: WeightUnitsEnum!\r\n  # Weight value.\r\n  value: Float!\r\n}\r\n\r\nscalar WeightScalar\r\n\r\n# An enumeration.\r\nenum WeightUnitsEnum {\r\n  G\r\n  LB\r\n  OZ\r\n  KG\r\n  TONNE\r\n}\r\n\r\n# Anything\r\nscalar _Any\r\n\r\nunion _Entity = App | Address | User | Group | ProductVariant | Product | ProductType | Collection | Category | ProductMedia | ProductImage | PageType\r\n\r\ntype _Service {\r\n  sdl: String\r\n}\r\n"
                        }
                    }
                }
            ],
            "count": 1
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/http-bin/schemas/graphql": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/http-bin/schemas/graphql",
            "type": "Microsoft.ApiManagement/service/apis/schemas",
            "name": "graphql",
            "properties": {
                "contentType": "application/vnd.ms-azure-apim.graphql.schema",
                "document": {
                    "value": "schema {\r\n  query: Query\r\n  mutation: Mutation\r\n}\r\n\r\n# Create a new address for the customer.\r\ntype AccountAddressCreate {\r\n  # A user instance for which the address was created.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  address: Address\r\n}\r\n\r\n# Delete an address of the logged-in user.\r\ntype AccountAddressDelete {\r\n  # A user instance for which the address was deleted.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  address: Address\r\n}\r\n\r\n# Updates an address of the logged-in user.\r\ntype AccountAddressUpdate {\r\n  # A user object for which the address was edited.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  address: Address\r\n}\r\n\r\n# Remove user account.\r\ntype AccountDelete {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  user: User\r\n}\r\n\r\ntype AccountError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: AccountErrorCode!\r\n  # A type of address that causes the error.\r\n  addressType: AddressTypeEnum\r\n}\r\n\r\n# An enumeration.\r\nenum AccountErrorCode {\r\n  ACTIVATE_OWN_ACCOUNT\r\n  ACTIVATE_SUPERUSER_ACCOUNT\r\n  DUPLICATED_INPUT_ITEM\r\n  DEACTIVATE_OWN_ACCOUNT\r\n  DEACTIVATE_SUPERUSER_ACCOUNT\r\n  DELETE_NON_STAFF_USER\r\n  DELETE_OWN_ACCOUNT\r\n  DELETE_STAFF_ACCOUNT\r\n  DELETE_SUPERUSER_ACCOUNT\r\n  GRAPHQL_ERROR\r\n  INACTIVE\r\n  INVALID\r\n  INVALID_PASSWORD\r\n  LEFT_NOT_MANAGEABLE_PERMISSION\r\n  INVALID_CREDENTIALS\r\n  NOT_FOUND\r\n  OUT_OF_SCOPE_USER\r\n  OUT_OF_SCOPE_GROUP\r\n  OUT_OF_SCOPE_PERMISSION\r\n  PASSWORD_ENTIRELY_NUMERIC\r\n  PASSWORD_TOO_COMMON\r\n  PASSWORD_TOO_SHORT\r\n  PASSWORD_TOO_SIMILAR\r\n  REQUIRED\r\n  UNIQUE\r\n  JWT_SIGNATURE_EXPIRED\r\n  JWT_INVALID_TOKEN\r\n  JWT_DECODE_ERROR\r\n  JWT_MISSING_TOKEN\r\n  JWT_INVALID_CSRF_TOKEN\r\n  CHANNEL_INACTIVE\r\n  MISSING_CHANNEL_SLUG\r\n}\r\n\r\ninput AccountInput {\r\n  # Given name.\r\n  firstName: String\r\n  # Family name.\r\n  lastName: String\r\n  # Billing address of the customer.\r\n  defaultBillingAddress: AddressInput\r\n  # Shipping address of the customer.\r\n  defaultShippingAddress: AddressInput\r\n  # User language code.\r\n  languageCode: LanguageCodeEnum\r\n}\r\n\r\n# Register a new user.\r\ntype AccountRegister {\r\n  # Informs whether users need to confirm their email address.\r\n  requiresConfirmation: Boolean\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  user: User\r\n}\r\n\r\ninput AccountRegisterInput {\r\n  # The email address of the user.\r\n  email: String!\r\n  # Password.\r\n  password: String!\r\n  # Base of frontend URL that will be needed to create confirmation URL.\r\n  redirectUrl: String\r\n  # User language code.\r\n  languageCode: LanguageCodeEnum\r\n  # User public metadata.\r\n  metadata: [MetadataInput!]\r\n  # Slug of a channel which will be used to notify users. Optional when only one channel exists.\r\n  channel: String\r\n}\r\n\r\n# Sends an email with the account removal link for the logged-in user.\r\ntype AccountRequestDeletion {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Sets a default address for the authenticated user.\r\ntype AccountSetDefaultAddress {\r\n  # An updated user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Updates the account of the logged-in user.\r\ntype AccountUpdate {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  user: User\r\n}\r\n\r\n# Represents user address data.\r\ntype Address implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  firstName: String!\r\n  lastName: String!\r\n  companyName: String!\r\n  streetAddress1: String!\r\n  streetAddress2: String!\r\n  city: String!\r\n  cityArea: String!\r\n  postalCode: String!\r\n  # Shop's default country.\r\n  country: CountryDisplay!\r\n  countryArea: String!\r\n  phone: String\r\n  # Address is user's default shipping address.\r\n  isDefaultShippingAddress: Boolean\r\n  # Address is user's default billing address.\r\n  isDefaultBillingAddress: Boolean\r\n}\r\n\r\n# Creates user address.\r\ntype AddressCreate {\r\n  # A user instance for which the address was created.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  address: Address\r\n}\r\n\r\n# Deletes an address.\r\ntype AddressDelete {\r\n  # A user instance for which the address was deleted.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  address: Address\r\n}\r\n\r\ninput AddressInput {\r\n  # Given name.\r\n  firstName: String\r\n  # Family name.\r\n  lastName: String\r\n  # Company or organization.\r\n  companyName: String\r\n  # Address.\r\n  streetAddress1: String\r\n  # Address.\r\n  streetAddress2: String\r\n  # City.\r\n  city: String\r\n  # District.\r\n  cityArea: String\r\n  # Postal code.\r\n  postalCode: String\r\n  # Country.\r\n  country: CountryCode\r\n  # State or province.\r\n  countryArea: String\r\n  # Phone number.\r\n  phone: String\r\n}\r\n\r\n# Sets a default address for the given user.\r\ntype AddressSetDefault {\r\n  # An updated user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum AddressTypeEnum {\r\n  BILLING\r\n  SHIPPING\r\n}\r\n\r\n# Updates an address.\r\ntype AddressUpdate {\r\n  # A user object for which the address was edited.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  address: Address\r\n}\r\n\r\ntype AddressValidationData {\r\n  countryCode: String\r\n  countryName: String\r\n  addressFormat: String\r\n  addressLatinFormat: String\r\n  allowedFields: [String]\r\n  requiredFields: [String]\r\n  upperFields: [String]\r\n  countryAreaType: String\r\n  countryAreaChoices: [ChoiceValue]\r\n  cityType: String\r\n  cityChoices: [ChoiceValue]\r\n  cityAreaType: String\r\n  cityAreaChoices: [ChoiceValue]\r\n  postalCodeType: String\r\n  postalCodeMatchers: [String]\r\n  postalCodeExamples: [String]\r\n  postalCodePrefix: String\r\n}\r\n\r\n# Represents allocation.\r\ntype Allocation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Quantity allocated for orders.\r\n  quantity: Int!\r\n  # The warehouse were items were allocated.\r\n  warehouse: Warehouse!\r\n}\r\n\r\n# Represents app data.\r\ntype App implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Name of the app.\r\n  name: String\r\n  # The date and time when the app was created.\r\n  created: DateTime\r\n  # Determine if app will be set active or not.\r\n  isActive: Boolean\r\n  # List of the app's permissions.\r\n  permissions: [Permission]\r\n  # Last 4 characters of the tokens.\r\n  tokens: [AppToken]\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Type of the app.\r\n  type: AppTypeEnum\r\n  # List of webhooks assigned to this app.\r\n  webhooks: [Webhook]\r\n  # Description of this app.\r\n  aboutApp: String\r\n  # Description of the data privacy defined for this app.\r\n  dataPrivacy: String\r\n  # Url to details about the privacy policy on the app owner page.\r\n  dataPrivacyUrl: String\r\n  # Homepage of the app.\r\n  homepageUrl: String\r\n  # Support page for the app.\r\n  supportUrl: String\r\n  # Url to iframe with the configuration for the app.\r\n  configurationUrl: String\r\n  # Url to iframe with the app.\r\n  appUrl: String\r\n  # Version number of the app.\r\n  version: String\r\n  # JWT token used to authenticate by thridparty app.\r\n  accessToken: String\r\n}\r\n\r\n# Activate the app.\r\ntype AppActivate {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  app: App\r\n}\r\n\r\ntype AppCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [AppCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype AppCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: App!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new app.\r\ntype AppCreate {\r\n  # The newly created authentication token.\r\n  authToken: String\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  app: App\r\n}\r\n\r\n# Deactivate the app.\r\ntype AppDeactivate {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  app: App\r\n}\r\n\r\n# Deletes an app.\r\ntype AppDelete {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  app: App\r\n}\r\n\r\n# Delete failed installation.\r\ntype AppDeleteFailedInstallation {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  appInstallation: AppInstallation\r\n}\r\n\r\ntype AppError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: AppErrorCode!\r\n  # List of permissions which causes the error.\r\n  permissions: [PermissionEnum!]\r\n}\r\n\r\n# An enumeration.\r\nenum AppErrorCode {\r\n  FORBIDDEN\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  INVALID_STATUS\r\n  INVALID_PERMISSION\r\n  INVALID_URL_FORMAT\r\n  INVALID_MANIFEST_FORMAT\r\n  MANIFEST_URL_CANT_CONNECT\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  OUT_OF_SCOPE_APP\r\n  OUT_OF_SCOPE_PERMISSION\r\n}\r\n\r\n# Fetch and validate manifest.\r\ntype AppFetchManifest {\r\n  manifest: Manifest\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n}\r\n\r\ninput AppFilterInput {\r\n  search: String\r\n  isActive: Boolean\r\n  type: AppTypeEnum\r\n}\r\n\r\ninput AppInput {\r\n  # Name of the app.\r\n  name: String\r\n  # List of permission code names to assign to this app.\r\n  permissions: [PermissionEnum]\r\n}\r\n\r\n# Install new app by using app manifest.\r\ntype AppInstall {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  appInstallation: AppInstallation\r\n}\r\n\r\ninput AppInstallInput {\r\n  # Name of the app to install.\r\n  appName: String\r\n  # Url to app's manifest in JSON format.\r\n  manifestUrl: String\r\n  # Determine if app will be set active or not.\r\n  activateAfterInstallation: Boolean = true\r\n  # List of permission code names to assign to this app.\r\n  permissions: [PermissionEnum]\r\n}\r\n\r\n# Represents ongoing installation of app.\r\ntype AppInstallation implements Node & Job {\r\n  appName: String!\r\n  manifestUrl: String!\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Job status.\r\n  status: JobStatusEnum!\r\n  # Created date time of job in ISO 8601 format.\r\n  createdAt: DateTime!\r\n  # Date time of job last update in ISO 8601 format.\r\n  updatedAt: DateTime!\r\n  # Job message.\r\n  message: String\r\n}\r\n\r\n# Retry failed installation of new app.\r\ntype AppRetryInstall {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  appInstallation: AppInstallation\r\n}\r\n\r\nenum AppSortField {\r\n  # Sort apps by name.\r\n  NAME\r\n  # Sort apps by creation date.\r\n  CREATION_DATE\r\n}\r\n\r\ninput AppSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort apps by the selected field.\r\n  field: AppSortField!\r\n}\r\n\r\n# Represents token data.\r\ntype AppToken implements Node {\r\n  # Name of the authenticated token.\r\n  name: String\r\n  # Last 4 characters of the token.\r\n  authToken: String\r\n  # The ID of the object.\r\n  id: ID!\r\n}\r\n\r\n# Creates a new token.\r\ntype AppTokenCreate {\r\n  # The newly created authentication token.\r\n  authToken: String\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  appToken: AppToken\r\n}\r\n\r\n# Deletes an authentication token assigned to app.\r\ntype AppTokenDelete {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  appToken: AppToken\r\n}\r\n\r\ninput AppTokenInput {\r\n  # Name of the token.\r\n  name: String\r\n  # ID of app.\r\n  app: ID!\r\n}\r\n\r\n# Verify provided app token.\r\ntype AppTokenVerify {\r\n  # Determine if token is valid or not.\r\n  valid: Boolean!\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n}\r\n\r\n# Enum determining type of your App.\r\nenum AppTypeEnum {\r\n  # Local Saleor App. The app is fully manageable from dashboard. You can change assigned permissions, add webhooks, or authentication token\r\n  LOCAL\r\n  # Third party external App. Installation is fully automated. Saleor uses a defined App manifest to gather all required information.\r\n  THIRDPARTY\r\n}\r\n\r\n# Updates an existing app.\r\ntype AppUpdate {\r\n  appErrors: [AppError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AppError!]!\r\n  app: App\r\n}\r\n\r\n# An enumeration.\r\nenum AreaUnitsEnum {\r\n  SQ_CM\r\n  SQ_M\r\n  SQ_KM\r\n  SQ_FT\r\n  SQ_YD\r\n  SQ_INCH\r\n}\r\n\r\n# Assigns storefront's navigation menus.\r\ntype AssignNavigation {\r\n  # Assigned navigation menu.\r\n  menu: Menu\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n}\r\n\r\n# Custom attribute of a product. Attributes can be assigned to products and variants at the product type level.\r\ntype Attribute implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  productTypes(before: String, after: String, first: Int, last: Int): ProductTypeCountableConnection!\r\n  productVariantTypes(before: String, after: String, first: Int, last: Int): ProductTypeCountableConnection!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # The input type to use for entering attribute values in the dashboard.\r\n  inputType: AttributeInputTypeEnum\r\n  # The entity type which can be used as a reference.\r\n  entityType: AttributeEntityTypeEnum\r\n  # Name of an attribute displayed in the interface.\r\n  name: String\r\n  # Internal representation of an attribute name.\r\n  slug: String\r\n  # The attribute type.\r\n  type: AttributeTypeEnum\r\n  # The unit of attribute values.\r\n  unit: MeasurementUnitsEnum\r\n  # List of attribute's values.\r\n  choices(\r\n    # Sort attribute choices.\r\n    sortBy: AttributeChoicesSortingInput\r\n    # Filtering options for attribute choices.\r\n    filter: AttributeValueFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): AttributeValueCountableConnection\r\n  # Whether the attribute requires values to be passed or not.\r\n  valueRequired: Boolean!\r\n  # Whether the attribute should be visible or not in storefront.\r\n  visibleInStorefront: Boolean!\r\n  # Whether the attribute can be filtered in storefront.\r\n  filterableInStorefront: Boolean!\r\n  # Whether the attribute can be filtered in dashboard.\r\n  filterableInDashboard: Boolean!\r\n  # Whether the attribute can be displayed in the admin product list.\r\n  availableInGrid: Boolean!\r\n  # Returns translated attribute fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for attribute.\r\n    languageCode: LanguageCodeEnum!\r\n  ): AttributeTranslation\r\n  # The position of the attribute in the storefront navigation (0 by default).\r\n  storefrontSearchPosition: Int!\r\n  # Flag indicating that attribute has predefined choices.\r\n  withChoices: Boolean!\r\n}\r\n\r\n# Deletes attributes.\r\ntype AttributeBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n}\r\n\r\nenum AttributeChoicesSortField {\r\n  # Sort attribute choice by name.\r\n  NAME\r\n  # Sort attribute choice by slug.\r\n  SLUG\r\n}\r\n\r\ninput AttributeChoicesSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort attribute choices by the selected field.\r\n  field: AttributeChoicesSortField!\r\n}\r\n\r\ntype AttributeCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [AttributeCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype AttributeCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Attribute!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates an attribute.\r\ntype AttributeCreate {\r\n  attribute: Attribute\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n}\r\n\r\ninput AttributeCreateInput {\r\n  # The input type to use for entering attribute values in the dashboard.\r\n  inputType: AttributeInputTypeEnum\r\n  # The entity type which can be used as a reference.\r\n  entityType: AttributeEntityTypeEnum\r\n  # Name of an attribute displayed in the interface.\r\n  name: String!\r\n  # Internal representation of an attribute name.\r\n  slug: String\r\n  # The attribute type.\r\n  type: AttributeTypeEnum!\r\n  # The unit of attribute values.\r\n  unit: MeasurementUnitsEnum\r\n  # List of attribute's values.\r\n  values: [AttributeValueCreateInput]\r\n  # Whether the attribute requires values to be passed or not.\r\n  valueRequired: Boolean\r\n  # Whether the attribute is for variants only.\r\n  isVariantOnly: Boolean\r\n  # Whether the attribute should be visible or not in storefront.\r\n  visibleInStorefront: Boolean\r\n  # Whether the attribute can be filtered in storefront.\r\n  filterableInStorefront: Boolean\r\n  # Whether the attribute can be filtered in dashboard.\r\n  filterableInDashboard: Boolean\r\n  # The position of the attribute in the storefront navigation (0 by default).\r\n  storefrontSearchPosition: Int\r\n  # Whether the attribute can be displayed in the admin product list.\r\n  availableInGrid: Boolean\r\n}\r\n\r\n# Deletes an attribute.\r\ntype AttributeDelete {\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n  attribute: Attribute\r\n}\r\n\r\n# An enumeration.\r\nenum AttributeEntityTypeEnum {\r\n  PAGE\r\n  PRODUCT\r\n}\r\n\r\ntype AttributeError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: AttributeErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum AttributeErrorCode {\r\n  ALREADY_EXISTS\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\ninput AttributeFilterInput {\r\n  valueRequired: Boolean\r\n  isVariantOnly: Boolean\r\n  visibleInStorefront: Boolean\r\n  filterableInStorefront: Boolean\r\n  filterableInDashboard: Boolean\r\n  availableInGrid: Boolean\r\n  metadata: [MetadataFilter]\r\n  search: String\r\n  ids: [ID]\r\n  type: AttributeTypeEnum\r\n  inCollection: ID\r\n  inCategory: ID\r\n  # Specifies the channel by which the data should be filtered. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n}\r\n\r\ninput AttributeInput {\r\n  # Internal representation of an attribute name.\r\n  slug: String!\r\n  # Internal representation of a value (unique per attribute).\r\n  values: [String]\r\n  # The range that the returned values should be in.\r\n  valuesRange: IntRangeInput\r\n  # The date time range that the returned values should be in.\r\n  dateTime: DateTimeRangeInput\r\n  # The date range that the returned values should be in.\r\n  date: DateRangeInput\r\n  # The boolean value of the attribute.\r\n  boolean: Boolean\r\n}\r\n\r\n# An enumeration.\r\nenum AttributeInputTypeEnum {\r\n  DROPDOWN\r\n  MULTISELECT\r\n  FILE\r\n  REFERENCE\r\n  NUMERIC\r\n  RICH_TEXT\r\n  BOOLEAN\r\n  DATE\r\n  DATE_TIME\r\n}\r\n\r\n# Reorder the values of an attribute.\r\ntype AttributeReorderValues {\r\n  # Attribute from which values are reordered.\r\n  attribute: Attribute\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n}\r\n\r\nenum AttributeSortField {\r\n  # Sort attributes by name\r\n  NAME\r\n  # Sort attributes by slug\r\n  SLUG\r\n  # Sort attributes by the value required flag\r\n  VALUE_REQUIRED\r\n  # Sort attributes by the variant only flag\r\n  IS_VARIANT_ONLY\r\n  # Sort attributes by visibility in the storefront\r\n  VISIBLE_IN_STOREFRONT\r\n  # Sort attributes by the filterable in storefront flag\r\n  FILTERABLE_IN_STOREFRONT\r\n  # Sort attributes by the filterable in dashboard flag\r\n  FILTERABLE_IN_DASHBOARD\r\n  # Sort attributes by their position in storefront\r\n  STOREFRONT_SEARCH_POSITION\r\n  # Sort attributes based on whether they can be displayed or not in a product grid.\r\n  AVAILABLE_IN_GRID\r\n}\r\n\r\ninput AttributeSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort attributes by the selected field.\r\n  field: AttributeSortField!\r\n}\r\n\r\ntype AttributeTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # Returns translated attribute fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for attribute.\r\n    languageCode: LanguageCodeEnum!\r\n  ): AttributeTranslation\r\n  # Custom attribute of a product.\r\n  attribute: Attribute @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\n# Creates/updates translations for an attribute.\r\ntype AttributeTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  attribute: Attribute\r\n}\r\n\r\ntype AttributeTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\n# An enumeration.\r\nenum AttributeTypeEnum {\r\n  PRODUCT_TYPE\r\n  PAGE_TYPE\r\n}\r\n\r\n# Updates attribute.\r\ntype AttributeUpdate {\r\n  attribute: Attribute\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n}\r\n\r\ninput AttributeUpdateInput {\r\n  # Name of an attribute displayed in the interface.\r\n  name: String\r\n  # Internal representation of an attribute name.\r\n  slug: String\r\n  # The unit of attribute values.\r\n  unit: MeasurementUnitsEnum\r\n  # IDs of values to be removed from this attribute.\r\n  removeValues: [ID]\r\n  # New values to be created for this attribute.\r\n  addValues: [AttributeValueCreateInput]\r\n  # Whether the attribute requires values to be passed or not.\r\n  valueRequired: Boolean\r\n  # Whether the attribute is for variants only.\r\n  isVariantOnly: Boolean\r\n  # Whether the attribute should be visible or not in storefront.\r\n  visibleInStorefront: Boolean\r\n  # Whether the attribute can be filtered in storefront.\r\n  filterableInStorefront: Boolean\r\n  # Whether the attribute can be filtered in dashboard.\r\n  filterableInDashboard: Boolean\r\n  # The position of the attribute in the storefront navigation (0 by default).\r\n  storefrontSearchPosition: Int\r\n  # Whether the attribute can be displayed in the admin product list.\r\n  availableInGrid: Boolean\r\n}\r\n\r\n# Represents a value of an attribute.\r\ntype AttributeValue implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Name of a value displayed in the interface.\r\n  name: String\r\n  # Internal representation of a value (unique per attribute).\r\n  slug: String\r\n  # Represents the value of the attribute value.\r\n  value: String\r\n  # Returns translated attribute value fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for attribute value.\r\n    languageCode: LanguageCodeEnum!\r\n  ): AttributeValueTranslation\r\n  # The input type to use for entering attribute values in the dashboard.\r\n  inputType: AttributeInputTypeEnum\r\n  # The ID of the attribute reference.\r\n  reference: ID\r\n  # Represents file URL and content type (if attribute value is a file).\r\n  file: File\r\n  # Represents the text (JSON) of the attribute value.\r\n  richText: JSONString\r\n  # Represents the boolean value of the attribute value.\r\n  boolean: Boolean\r\n  # Represents the date value of the attribute value.\r\n  date: Date\r\n  # Represents the date time value of the attribute value.\r\n  dateTime: DateTime\r\n}\r\n\r\n# Deletes values of attributes.\r\ntype AttributeValueBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n}\r\n\r\ntype AttributeValueCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [AttributeValueCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype AttributeValueCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: AttributeValue!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a value for an attribute.\r\ntype AttributeValueCreate {\r\n  # The updated attribute.\r\n  attribute: Attribute\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n  attributeValue: AttributeValue\r\n}\r\n\r\ninput AttributeValueCreateInput {\r\n  # Name of a value displayed in the interface.\r\n  name: String!\r\n  # Represents the value of the attribute value.\r\n  value: String\r\n  # Represents the text (JSON) of the attribute value.\r\n  richText: JSONString\r\n}\r\n\r\n# Deletes a value of an attribute.\r\ntype AttributeValueDelete {\r\n  # The updated attribute.\r\n  attribute: Attribute\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n  attributeValue: AttributeValue\r\n}\r\n\r\ninput AttributeValueFilterInput {\r\n  search: String\r\n}\r\n\r\ninput AttributeValueInput {\r\n  # ID of the selected attribute.\r\n  id: ID\r\n  # The value or slug of an attribute to resolve. If the passed value is non-existent, it will be created.\r\n  values: [String!]\r\n  # URL of the file attribute. Every time, a new value is created.\r\n  file: String\r\n  # File content type.\r\n  contentType: String\r\n  # List of entity IDs that will be used as references.\r\n  references: [ID!]\r\n  # Text content in JSON format.\r\n  richText: JSONString\r\n  # Represents the boolean value of the attribute value.\r\n  boolean: Boolean\r\n  # Represents the date value of the attribute value.\r\n  date: Date\r\n  # Represents the date time value of the attribute value.\r\n  dateTime: DateTime\r\n}\r\n\r\ntype AttributeValueTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  richText: JSONString\r\n  # Returns translated attribute value fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for attribute value.\r\n    languageCode: LanguageCodeEnum!\r\n  ): AttributeValueTranslation\r\n  # Represents a value of an attribute.\r\n  attributeValue: AttributeValue @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\n# Creates/updates translations for an attribute value.\r\ntype AttributeValueTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  attributeValue: AttributeValue\r\n}\r\n\r\ntype AttributeValueTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  richText: JSONString\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\ninput AttributeValueTranslationInput {\r\n  name: String\r\n  richText: JSONString\r\n}\r\n\r\n# Updates value of an attribute.\r\ntype AttributeValueUpdate {\r\n  # The updated attribute.\r\n  attribute: Attribute\r\n  attributeErrors: [AttributeError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AttributeError!]!\r\n  attributeValue: AttributeValue\r\n}\r\n\r\ninput BulkAttributeValueInput {\r\n  # ID of the selected attribute.\r\n  id: ID\r\n  # The value or slug of an attribute to resolve. If the passed value is non-existent, it will be created.\r\n  values: [String!]\r\n  # The boolean value of an attribute to resolve. If the passed value is non-existent, it will be created.\r\n  boolean: Boolean\r\n}\r\n\r\ntype BulkProductError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ProductErrorCode!\r\n  # List of attributes IDs which causes the error.\r\n  attributes: [ID!]\r\n  # List of attribute values IDs which causes the error.\r\n  values: [ID!]\r\n  # Index of an input list item that caused the error.\r\n  index: Int\r\n  # List of warehouse IDs which causes the error.\r\n  warehouses: [ID!]\r\n  # List of channel IDs which causes the error.\r\n  channels: [ID!]\r\n}\r\n\r\ntype BulkStockError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ProductErrorCode!\r\n  # List of attributes IDs which causes the error.\r\n  attributes: [ID!]\r\n  # List of attribute values IDs which causes the error.\r\n  values: [ID!]\r\n  # Index of an input list item that caused the error.\r\n  index: Int\r\n}\r\n\r\ninput CatalogueInput {\r\n  # Products related to the discount.\r\n  products: [ID]\r\n  # Categories related to the discount.\r\n  categories: [ID]\r\n  # Collections related to the discount.\r\n  collections: [ID]\r\n}\r\n\r\n# Represents a single category of products. Categories allow to organize products in a tree-hierarchies which can be used for navigation in the storefront.\r\ntype Category implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String!\r\n  description: JSONString\r\n  slug: String!\r\n  parent: Category\r\n  level: Int!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Description of the category (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n  # List of ancestors of the category.\r\n  ancestors(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CategoryCountableConnection\r\n  # List of products in the category.\r\n  products(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductCountableConnection\r\n  # List of children of the category.\r\n  children(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CategoryCountableConnection\r\n  backgroundImage(\r\n    # Size of the image.\r\n    size: Int\r\n  ): Image\r\n  # Returns translated category fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for category.\r\n    languageCode: LanguageCodeEnum!\r\n  ): CategoryTranslation\r\n}\r\n\r\n# Deletes categories.\r\ntype CategoryBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\ntype CategoryCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [CategoryCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype CategoryCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Category!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new category.\r\ntype CategoryCreate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  category: Category\r\n}\r\n\r\n# Deletes a category.\r\ntype CategoryDelete {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  category: Category\r\n}\r\n\r\ninput CategoryFilterInput {\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n  ids: [ID]\r\n}\r\n\r\ninput CategoryInput {\r\n  # Category description (JSON).\r\n  description: JSONString\r\n  # Category name.\r\n  name: String\r\n  # Category slug.\r\n  slug: String\r\n  # Search engine optimization fields.\r\n  seo: SeoInput\r\n  # Background image file.\r\n  backgroundImage: Upload\r\n  # Alt text for a product media.\r\n  backgroundImageAlt: String\r\n}\r\n\r\nenum CategorySortField {\r\n  # Sort categories by name.\r\n  NAME\r\n  # Sort categories by product count.\r\n  PRODUCT_COUNT\r\n  # Sort categories by subcategory count.\r\n  SUBCATEGORY_COUNT\r\n}\r\n\r\ninput CategorySortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Specifies the channel in which to sort the data. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n  # Sort categories by the selected field.\r\n  field: CategorySortField!\r\n}\r\n\r\ntype CategoryTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String!\r\n  description: JSONString\r\n  # Description of the category (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n  # Returns translated category fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for category.\r\n    languageCode: LanguageCodeEnum!\r\n  ): CategoryTranslation\r\n  # Represents a single category of products.\r\n  category: Category @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\n# Creates/updates translations for a category.\r\ntype CategoryTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  category: Category\r\n}\r\n\r\ntype CategoryTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String\r\n  description: JSONString\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n  # Translated description of the product (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n}\r\n\r\n# Updates a category.\r\ntype CategoryUpdate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  category: Category\r\n}\r\n\r\n# Represents channel.\r\ntype Channel implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  isActive: Boolean!\r\n  slug: String!\r\n  currencyCode: String!\r\n  # Whether a channel has associated orders.\r\n  hasOrders: Boolean!\r\n  # Default country for the channel. Default country can be used in checkout to determine the stock quantities or calculate taxes when the country was not explicitly provided.\r\n  defaultCountry: CountryDisplay!\r\n}\r\n\r\n# Activate a channel.\r\ntype ChannelActivate {\r\n  # Activated channel.\r\n  channel: Channel\r\n  channelErrors: [ChannelError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ChannelError!]!\r\n}\r\n\r\n# Creates new channel.\r\ntype ChannelCreate {\r\n  channelErrors: [ChannelError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ChannelError!]!\r\n  channel: Channel\r\n}\r\n\r\ninput ChannelCreateInput {\r\n  # isActive flag.\r\n  isActive: Boolean\r\n  # Name of the channel.\r\n  name: String!\r\n  # Slug of the channel.\r\n  slug: String!\r\n  # Currency of the channel.\r\n  currencyCode: String!\r\n  # Default country for the channel. Default country can be used in checkout to determine the stock quantities or calculate taxes when the country was not explicitly provided.\r\n  defaultCountry: CountryCode!\r\n  # List of shipping zones to assign to the channel.\r\n  addShippingZones: [ID!]\r\n}\r\n\r\n# Deactivate a channel.\r\ntype ChannelDeactivate {\r\n  # Deactivated channel.\r\n  channel: Channel\r\n  channelErrors: [ChannelError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ChannelError!]!\r\n}\r\n\r\n# Delete a channel. Orders associated with the deleted channel will be moved to the target channel. Checkouts, product availability, and pricing will be removed.\r\ntype ChannelDelete {\r\n  channelErrors: [ChannelError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ChannelError!]!\r\n  channel: Channel\r\n}\r\n\r\ninput ChannelDeleteInput {\r\n  # ID of channel to migrate orders from origin channel.\r\n  channelId: ID!\r\n}\r\n\r\ntype ChannelError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ChannelErrorCode!\r\n  # List of shipping zone IDs which causes the error.\r\n  shippingZones: [ID!]\r\n}\r\n\r\n# An enumeration.\r\nenum ChannelErrorCode {\r\n  ALREADY_EXISTS\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  CHANNELS_CURRENCY_MUST_BE_THE_SAME\r\n  CHANNEL_WITH_ORDERS\r\n  DUPLICATED_INPUT_ITEM\r\n}\r\n\r\n# Update a channel.\r\ntype ChannelUpdate {\r\n  channelErrors: [ChannelError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ChannelError!]!\r\n  channel: Channel\r\n}\r\n\r\ninput ChannelUpdateInput {\r\n  # isActive flag.\r\n  isActive: Boolean\r\n  # Name of the channel.\r\n  name: String\r\n  # Slug of the channel.\r\n  slug: String\r\n  # Default country for the channel. Default country can be used in checkout to determine the stock quantities or calculate taxes when the country was not explicitly provided.\r\n  defaultCountry: CountryCode\r\n  # List of shipping zones to assign to the channel.\r\n  addShippingZones: [ID!]\r\n  # List of shipping zones to unassign from the channel.\r\n  removeShippingZones: [ID!]\r\n}\r\n\r\n# Checkout object.\r\ntype Checkout implements Node & ObjectWithMetadata {\r\n  created: DateTime!\r\n  lastChange: DateTime!\r\n  user: User\r\n  channel: Channel!\r\n  billingAddress: Address\r\n  shippingAddress: Address\r\n  note: String!\r\n  discount: Money\r\n  discountName: String\r\n  translatedDiscountName: String\r\n  voucherCode: String\r\n  # List of gift cards associated with this checkout.\r\n  giftCards: [GiftCard]\r\n  # The ID of the object.\r\n  id: ID!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Shipping methods that can be used with this order.\r\n  availableShippingMethods: [ShippingMethod]!\r\n  # List of available payment gateways.\r\n  availablePaymentGateways: [PaymentGateway!]!\r\n  # Email of a customer.\r\n  email: String!\r\n  # Returns True, if checkout requires shipping.\r\n  isShippingRequired: Boolean!\r\n  # The number of items purchased.\r\n  quantity: Int!\r\n  # A list of checkout lines, each containing information about an item in the checkout.\r\n  lines: [CheckoutLine]\r\n  # The price of the shipping, with all the taxes included.\r\n  shippingPrice: TaxedMoney\r\n  # The shipping method related with checkout.\r\n  shippingMethod: ShippingMethod\r\n  # The price of the checkout before shipping, with taxes included.\r\n  subtotalPrice: TaxedMoney\r\n  # The checkout's token.\r\n  token: UUID!\r\n  # The sum of the the checkout line prices, with all the taxes,shipping costs, and discounts included.\r\n  totalPrice: TaxedMoney\r\n  # Checkout language code.\r\n  languageCode: LanguageCodeEnum!\r\n}\r\n\r\n# Adds a gift card or a voucher to a checkout.\r\ntype CheckoutAddPromoCode {\r\n  # The checkout with the added gift card or voucher.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Update billing address in the existing checkout.\r\ntype CheckoutBillingAddressUpdate {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Completes the checkout. As a result a new order is created and a payment charge is made. This action requires a successful payment before it can be performed. In case additional confirmation step as 3D secure is required confirmationNeeded flag will be set to True and no order created until payment is confirmed with second call of this mutation.\r\ntype CheckoutComplete {\r\n  # Placed order.\r\n  order: Order\r\n  # Set to true if payment needs to be confirmed before checkout is complete.\r\n  confirmationNeeded: Boolean!\r\n  # Confirmation data used to process additional authorization steps.\r\n  confirmationData: JSONString\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\ntype CheckoutCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [CheckoutCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype CheckoutCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Checkout!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Create a new checkout.\r\ntype CheckoutCreate {\r\n  # Whether the checkout was created or the current active one was returned. Refer to checkoutLinesAdd and checkoutLinesUpdate to merge a cart with an active checkout.DEPRECATED: Will be removed in Saleor 4.0. Always returns True.\r\n  created: Boolean\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n  checkout: Checkout\r\n}\r\n\r\ninput CheckoutCreateInput {\r\n  # Slug of a channel in which to create a checkout.\r\n  channel: String\r\n  # A list of checkout lines, each containing information about an item in the checkout.\r\n  lines: [CheckoutLineInput]!\r\n  # The customer's email address.\r\n  email: String\r\n  # The mailing address to where the checkout will be shipped. Note: the address will be ignored if the checkout doesn't contain shippable items.\r\n  shippingAddress: AddressInput\r\n  # Billing address of the customer.\r\n  billingAddress: AddressInput\r\n  # Checkout language code.\r\n  languageCode: LanguageCodeEnum\r\n}\r\n\r\n# Sets the customer as the owner of the checkout.\r\ntype CheckoutCustomerAttach {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Removes the user assigned as the owner of the checkout.\r\ntype CheckoutCustomerDetach {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Updates email address in the existing checkout object.\r\ntype CheckoutEmailUpdate {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\ntype CheckoutError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: CheckoutErrorCode!\r\n  # List of varint IDs which causes the error.\r\n  variants: [ID!]\r\n  # A type of address that causes the error.\r\n  addressType: AddressTypeEnum\r\n}\r\n\r\n# An enumeration.\r\nenum CheckoutErrorCode {\r\n  BILLING_ADDRESS_NOT_SET\r\n  CHECKOUT_NOT_FULLY_PAID\r\n  GRAPHQL_ERROR\r\n  PRODUCT_NOT_PUBLISHED\r\n  PRODUCT_UNAVAILABLE_FOR_PURCHASE\r\n  INSUFFICIENT_STOCK\r\n  INVALID\r\n  INVALID_SHIPPING_METHOD\r\n  NOT_FOUND\r\n  PAYMENT_ERROR\r\n  QUANTITY_GREATER_THAN_LIMIT\r\n  REQUIRED\r\n  SHIPPING_ADDRESS_NOT_SET\r\n  SHIPPING_METHOD_NOT_APPLICABLE\r\n  SHIPPING_METHOD_NOT_SET\r\n  SHIPPING_NOT_REQUIRED\r\n  TAX_ERROR\r\n  UNIQUE\r\n  VOUCHER_NOT_APPLICABLE\r\n  ZERO_QUANTITY\r\n  MISSING_CHANNEL_SLUG\r\n  CHANNEL_INACTIVE\r\n  UNAVAILABLE_VARIANT_IN_CHANNEL\r\n}\r\n\r\n# Update language code in the existing checkout.\r\ntype CheckoutLanguageCodeUpdate {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Represents an item in the checkout.\r\ntype CheckoutLine implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  variant: ProductVariant!\r\n  quantity: Int!\r\n  # The sum of the checkout line price, taxes and discounts.\r\n  totalPrice: TaxedMoney\r\n  # Indicates whether the item need to be delivered.\r\n  requiresShipping: Boolean\r\n}\r\n\r\ntype CheckoutLineCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [CheckoutLineCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype CheckoutLineCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: CheckoutLine!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Deletes a CheckoutLine.\r\ntype CheckoutLineDelete {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\ninput CheckoutLineInput {\r\n  # The number of items purchased.\r\n  quantity: Int!\r\n  # ID of the product variant.\r\n  variantId: ID!\r\n}\r\n\r\n# Adds a checkout line to the existing checkout.If line was already in checkout, its quantity will be increased.\r\ntype CheckoutLinesAdd {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Updates checkout line in the existing checkout.\r\ntype CheckoutLinesUpdate {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Create a new payment for given checkout.\r\ntype CheckoutPaymentCreate {\r\n  # Related checkout object.\r\n  checkout: Checkout\r\n  # A newly created payment.\r\n  payment: Payment\r\n  paymentErrors: [PaymentError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PaymentError!]!\r\n}\r\n\r\n# Remove a gift card or a voucher from a checkout.\r\ntype CheckoutRemovePromoCode {\r\n  # The checkout with the removed gift card or voucher.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Update shipping address in the existing checkout.\r\ntype CheckoutShippingAddressUpdate {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\n# Updates the shipping address of the checkout.\r\ntype CheckoutShippingMethodUpdate {\r\n  # An updated checkout.\r\n  checkout: Checkout\r\n  checkoutErrors: [CheckoutError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CheckoutError!]!\r\n}\r\n\r\ntype ChoiceValue {\r\n  raw: String\r\n  verbose: String\r\n}\r\n\r\n# Represents a collection of products.\r\ntype Collection implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String!\r\n  description: JSONString\r\n  slug: String!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Channel given to retrieve this collection. Also used by federation gateway to resolve this object in a federated query.\r\n  channel: String\r\n  # Description of the collection (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n  # List of products in this collection.\r\n  products(\r\n    # Filtering options for products.\r\n    filter: ProductFilterInput\r\n    # Sort products.\r\n    sortBy: ProductOrder\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductCountableConnection\r\n  backgroundImage(\r\n    # Size of the image.\r\n    size: Int\r\n  ): Image\r\n  # Returns translated collection fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for collection.\r\n    languageCode: LanguageCodeEnum!\r\n  ): CollectionTranslation\r\n  # List of channels in which the collection is available.\r\n  channelListings: [CollectionChannelListing!]\r\n}\r\n\r\n# Adds products to a collection.\r\ntype CollectionAddProducts {\r\n  # Collection to which products will be added.\r\n  collection: Collection\r\n  collectionErrors: [CollectionError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionError!]!\r\n}\r\n\r\n# Deletes collections.\r\ntype CollectionBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  collectionErrors: [CollectionError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionError!]!\r\n}\r\n\r\n# Represents collection channel listing.\r\ntype CollectionChannelListing implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  publicationDate: Date\r\n  isPublished: Boolean!\r\n  channel: Channel!\r\n}\r\n\r\ntype CollectionChannelListingError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ProductErrorCode!\r\n  # List of attributes IDs which causes the error.\r\n  attributes: [ID!]\r\n  # List of attribute values IDs which causes the error.\r\n  values: [ID!]\r\n  # List of channels IDs which causes the error.\r\n  channels: [ID!]\r\n}\r\n\r\n# Manage collection's availability in channels.\r\ntype CollectionChannelListingUpdate {\r\n  # An updated collection instance.\r\n  collection: Collection\r\n  collectionChannelListingErrors: [CollectionChannelListingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionChannelListingError!]!\r\n}\r\n\r\ninput CollectionChannelListingUpdateInput {\r\n  # List of channels to which the collection should be assigned.\r\n  addChannels: [PublishableChannelListingInput!]\r\n  # List of channels from which the collection should be unassigned.\r\n  removeChannels: [ID!]\r\n}\r\n\r\ntype CollectionCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [CollectionCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype CollectionCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Collection!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new collection.\r\ntype CollectionCreate {\r\n  collectionErrors: [CollectionError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionError!]!\r\n  collection: Collection\r\n}\r\n\r\ninput CollectionCreateInput {\r\n  # Informs whether a collection is published.\r\n  isPublished: Boolean\r\n  # Name of the collection.\r\n  name: String\r\n  # Slug of the collection.\r\n  slug: String\r\n  # Description of the collection (JSON).\r\n  description: JSONString\r\n  # Background image file.\r\n  backgroundImage: Upload\r\n  # Alt text for an image.\r\n  backgroundImageAlt: String\r\n  # Search engine optimization fields.\r\n  seo: SeoInput\r\n  # Publication date. ISO 8601 standard.\r\n  publicationDate: Date\r\n  # List of products to be added to the collection.\r\n  products: [ID]\r\n}\r\n\r\n# Deletes a collection.\r\ntype CollectionDelete {\r\n  collectionErrors: [CollectionError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionError!]!\r\n  collection: Collection\r\n}\r\n\r\ntype CollectionError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # List of products IDs which causes the error.\r\n  products: [ID!]\r\n  # The error code.\r\n  code: CollectionErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum CollectionErrorCode {\r\n  DUPLICATED_INPUT_ITEM\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT\r\n}\r\n\r\ninput CollectionFilterInput {\r\n  published: CollectionPublished\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n  ids: [ID]\r\n  # Specifies the channel by which the data should be filtered. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n}\r\n\r\ninput CollectionInput {\r\n  # Informs whether a collection is published.\r\n  isPublished: Boolean\r\n  # Name of the collection.\r\n  name: String\r\n  # Slug of the collection.\r\n  slug: String\r\n  # Description of the collection (JSON).\r\n  description: JSONString\r\n  # Background image file.\r\n  backgroundImage: Upload\r\n  # Alt text for an image.\r\n  backgroundImageAlt: String\r\n  # Search engine optimization fields.\r\n  seo: SeoInput\r\n  # Publication date. ISO 8601 standard.\r\n  publicationDate: Date\r\n}\r\n\r\nenum CollectionPublished {\r\n  PUBLISHED\r\n  HIDDEN\r\n}\r\n\r\n# Remove products from a collection.\r\ntype CollectionRemoveProducts {\r\n  # Collection from which products will be removed.\r\n  collection: Collection\r\n  collectionErrors: [CollectionError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionError!]!\r\n}\r\n\r\n# Reorder the products of a collection.\r\ntype CollectionReorderProducts {\r\n  # Collection from which products are reordered.\r\n  collection: Collection\r\n  collectionErrors: [CollectionError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionError!]!\r\n}\r\n\r\nenum CollectionSortField {\r\n  # Sort collections by name.\r\n  NAME\r\n  # Sort collections by availability.\r\n  AVAILABILITY\r\n  # Sort collections by product count.\r\n  PRODUCT_COUNT\r\n  # Sort collections by publication date.\r\n  PUBLICATION_DATE\r\n}\r\n\r\ninput CollectionSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Specifies the channel in which to sort the data. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n  # Sort collections by the selected field.\r\n  field: CollectionSortField!\r\n}\r\n\r\ntype CollectionTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String!\r\n  description: JSONString\r\n  # Description of the collection (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n  # Returns translated collection fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for collection.\r\n    languageCode: LanguageCodeEnum!\r\n  ): CollectionTranslation\r\n  # Represents a collection of products.\r\n  collection: Collection @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\n# Creates/updates translations for a collection.\r\ntype CollectionTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  collection: Collection\r\n}\r\n\r\ntype CollectionTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String\r\n  description: JSONString\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n  # Translated description of the product (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n}\r\n\r\n# Updates a collection.\r\ntype CollectionUpdate {\r\n  collectionErrors: [CollectionError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [CollectionError!]!\r\n  collection: Collection\r\n}\r\n\r\n# Stores information about a single configuration field.\r\ntype ConfigurationItem {\r\n  # Name of the field.\r\n  name: String!\r\n  # Current value of the field.\r\n  value: String\r\n  # Type of the field.\r\n  type: ConfigurationTypeFieldEnum\r\n  # Help text for the field.\r\n  helpText: String\r\n  # Label for the field.\r\n  label: String\r\n}\r\n\r\ninput ConfigurationItemInput {\r\n  # Name of the field to update.\r\n  name: String!\r\n  # Value of the given field to update.\r\n  value: String\r\n}\r\n\r\n# An enumeration.\r\nenum ConfigurationTypeFieldEnum {\r\n  STRING\r\n  MULTILINE\r\n  BOOLEAN\r\n  SECRET\r\n  PASSWORD\r\n  SECRETMULTILINE\r\n  OUTPUT\r\n}\r\n\r\n# Confirm user account with token sent by email during registration.\r\ntype ConfirmAccount {\r\n  # An activated user account.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Confirm the email change of the logged-in user.\r\ntype ConfirmEmailChange {\r\n  # A user instance with a new email.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum CountryCode {\r\n  AF\r\n  AX\r\n  AL\r\n  DZ\r\n  AS\r\n  AD\r\n  AO\r\n  AI\r\n  AQ\r\n  AG\r\n  AR\r\n  AM\r\n  AW\r\n  AU\r\n  AT\r\n  AZ\r\n  BS\r\n  BH\r\n  BD\r\n  BB\r\n  BY\r\n  BE\r\n  BZ\r\n  BJ\r\n  BM\r\n  BT\r\n  BO\r\n  BQ\r\n  BA\r\n  BW\r\n  BV\r\n  BR\r\n  IO\r\n  BN\r\n  BG\r\n  BF\r\n  BI\r\n  CV\r\n  KH\r\n  CM\r\n  CA\r\n  KY\r\n  CF\r\n  TD\r\n  CL\r\n  CN\r\n  CX\r\n  CC\r\n  CO\r\n  KM\r\n  CG\r\n  CD\r\n  CK\r\n  CR\r\n  CI\r\n  HR\r\n  CU\r\n  CW\r\n  CY\r\n  CZ\r\n  DK\r\n  DJ\r\n  DM\r\n  DO\r\n  EC\r\n  EG\r\n  SV\r\n  GQ\r\n  ER\r\n  EE\r\n  SZ\r\n  ET\r\n  EU\r\n  FK\r\n  FO\r\n  FJ\r\n  FI\r\n  FR\r\n  GF\r\n  PF\r\n  TF\r\n  GA\r\n  GM\r\n  GE\r\n  DE\r\n  GH\r\n  GI\r\n  GR\r\n  GL\r\n  GD\r\n  GP\r\n  GU\r\n  GT\r\n  GG\r\n  GN\r\n  GW\r\n  GY\r\n  HT\r\n  HM\r\n  VA\r\n  HN\r\n  HK\r\n  HU\r\n  IS\r\n  IN\r\n  ID\r\n  IR\r\n  IQ\r\n  IE\r\n  IM\r\n  IL\r\n  IT\r\n  JM\r\n  JP\r\n  JE\r\n  JO\r\n  KZ\r\n  KE\r\n  KI\r\n  KW\r\n  KG\r\n  LA\r\n  LV\r\n  LB\r\n  LS\r\n  LR\r\n  LY\r\n  LI\r\n  LT\r\n  LU\r\n  MO\r\n  MG\r\n  MW\r\n  MY\r\n  MV\r\n  ML\r\n  MT\r\n  MH\r\n  MQ\r\n  MR\r\n  MU\r\n  YT\r\n  MX\r\n  FM\r\n  MD\r\n  MC\r\n  MN\r\n  ME\r\n  MS\r\n  MA\r\n  MZ\r\n  MM\r\n  NA\r\n  NR\r\n  NP\r\n  NL\r\n  NC\r\n  NZ\r\n  NI\r\n  NE\r\n  NG\r\n  NU\r\n  NF\r\n  KP\r\n  MK\r\n  MP\r\n  NO\r\n  OM\r\n  PK\r\n  PW\r\n  PS\r\n  PA\r\n  PG\r\n  PY\r\n  PE\r\n  PH\r\n  PN\r\n  PL\r\n  PT\r\n  PR\r\n  QA\r\n  RE\r\n  RO\r\n  RU\r\n  RW\r\n  BL\r\n  SH\r\n  KN\r\n  LC\r\n  MF\r\n  PM\r\n  VC\r\n  WS\r\n  SM\r\n  ST\r\n  SA\r\n  SN\r\n  RS\r\n  SC\r\n  SL\r\n  SG\r\n  SX\r\n  SK\r\n  SI\r\n  SB\r\n  SO\r\n  ZA\r\n  GS\r\n  KR\r\n  SS\r\n  ES\r\n  LK\r\n  SD\r\n  SR\r\n  SJ\r\n  SE\r\n  CH\r\n  SY\r\n  TW\r\n  TJ\r\n  TZ\r\n  TH\r\n  TL\r\n  TG\r\n  TK\r\n  TO\r\n  TT\r\n  TN\r\n  TR\r\n  TM\r\n  TC\r\n  TV\r\n  UG\r\n  UA\r\n  AE\r\n  GB\r\n  UM\r\n  US\r\n  UY\r\n  UZ\r\n  VU\r\n  VE\r\n  VN\r\n  VG\r\n  VI\r\n  WF\r\n  EH\r\n  YE\r\n  ZM\r\n  ZW\r\n}\r\n\r\ntype CountryDisplay {\r\n  # Country code.\r\n  code: String!\r\n  # Country name.\r\n  country: String!\r\n  # Country tax.\r\n  vat: VAT\r\n}\r\n\r\n# Create JWT token.\r\ntype CreateToken {\r\n  # JWT token, required to authenticate.\r\n  token: String\r\n  # JWT refresh token, required to re-generate access token.\r\n  refreshToken: String\r\n  # CSRF token required to re-generate access token.\r\n  csrfToken: String\r\n  # A user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\ntype CreditCard {\r\n  # Card brand.\r\n  brand: String!\r\n  # First 4 digits of the card number.\r\n  firstDigits: String\r\n  # Last 4 digits of the card number.\r\n  lastDigits: String!\r\n  # Two-digit number representing the card’s expiration month.\r\n  expMonth: Int\r\n  # Four-digit number representing the card’s expiration year.\r\n  expYear: Int\r\n}\r\n\r\n# Deletes customers.\r\ntype CustomerBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Creates a new customer.\r\ntype CustomerCreate {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  user: User\r\n}\r\n\r\n# Deletes a customer.\r\ntype CustomerDelete {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  user: User\r\n}\r\n\r\n# History log of the customer.\r\ntype CustomerEvent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Date when event happened at in ISO 8601 format.\r\n  date: DateTime\r\n  # Customer event type.\r\n  type: CustomerEventsEnum\r\n  # User who performed the action.\r\n  user: User\r\n  # App that performed the action.\r\n  app: App\r\n  # Content of the event.\r\n  message: String\r\n  # Number of objects concerned by the event.\r\n  count: Int\r\n  # The concerned order.\r\n  order: Order\r\n  # The concerned order line.\r\n  orderLine: OrderLine\r\n}\r\n\r\n# An enumeration.\r\nenum CustomerEventsEnum {\r\n  ACCOUNT_CREATED\r\n  PASSWORD_RESET_LINK_SENT\r\n  PASSWORD_RESET\r\n  EMAIL_CHANGED_REQUEST\r\n  PASSWORD_CHANGED\r\n  EMAIL_CHANGED\r\n  PLACED_ORDER\r\n  NOTE_ADDED_TO_ORDER\r\n  DIGITAL_LINK_DOWNLOADED\r\n  CUSTOMER_DELETED\r\n  NAME_ASSIGNED\r\n  EMAIL_ASSIGNED\r\n  NOTE_ADDED\r\n}\r\n\r\ninput CustomerFilterInput {\r\n  dateJoined: DateRangeInput\r\n  numberOfOrders: IntRangeInput\r\n  placedOrders: DateRangeInput\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n}\r\n\r\ninput CustomerInput {\r\n  # Billing address of the customer.\r\n  defaultBillingAddress: AddressInput\r\n  # Shipping address of the customer.\r\n  defaultShippingAddress: AddressInput\r\n  # Given name.\r\n  firstName: String\r\n  # Family name.\r\n  lastName: String\r\n  # The unique email address of the user.\r\n  email: String\r\n  # User account is active.\r\n  isActive: Boolean\r\n  # A note about the user.\r\n  note: String\r\n  # User language code.\r\n  languageCode: LanguageCodeEnum\r\n}\r\n\r\n# Updates an existing customer.\r\ntype CustomerUpdate {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n  user: User\r\n}\r\n\r\n# The `Date` scalar type represents a Date\r\n# value as specified by\r\n# [iso8601](https://en.wikipedia.org/wiki/ISO_8601).\r\nscalar Date\r\n\r\ninput DateRangeInput {\r\n  # Start date.\r\n  gte: Date\r\n  # End date.\r\n  lte: Date\r\n}\r\n\r\n# The `DateTime` scalar type represents a DateTime\r\n# value as specified by\r\n# [iso8601](https://en.wikipedia.org/wiki/ISO_8601).\r\nscalar DateTime\r\n\r\ninput DateTimeRangeInput {\r\n  # Start date.\r\n  gte: DateTime\r\n  # End date.\r\n  lte: DateTime\r\n}\r\n\r\n# Deactivate all JWT tokens of the currently authenticated user.\r\ntype DeactivateAllUserTokens {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Delete metadata of an object.\r\ntype DeleteMetadata {\r\n  metadataErrors: [MetadataError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MetadataError!]!\r\n  item: ObjectWithMetadata\r\n}\r\n\r\n# Delete object's private metadata.\r\ntype DeletePrivateMetadata {\r\n  metadataErrors: [MetadataError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MetadataError!]!\r\n  item: ObjectWithMetadata\r\n}\r\n\r\ntype DigitalContent implements Node & ObjectWithMetadata {\r\n  useDefaultSettings: Boolean!\r\n  automaticFulfillment: Boolean!\r\n  contentFile: String!\r\n  maxDownloads: Int\r\n  urlValidDays: Int\r\n  # List of URLs for the digital variant.\r\n  urls: [DigitalContentUrl]\r\n  # The ID of the object.\r\n  id: ID!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Product variant assigned to digital content.\r\n  productVariant: ProductVariant!\r\n}\r\n\r\ntype DigitalContentCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [DigitalContentCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype DigitalContentCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: DigitalContent!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Create new digital content. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\ntype DigitalContentCreate {\r\n  variant: ProductVariant\r\n  content: DigitalContent\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Remove digital content assigned to given variant.\r\ntype DigitalContentDelete {\r\n  variant: ProductVariant\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\ninput DigitalContentInput {\r\n  # Use default digital content settings for this product.\r\n  useDefaultSettings: Boolean!\r\n  # Determines how many times a download link can be accessed by a customer.\r\n  maxDownloads: Int\r\n  # Determines for how many days a download link is active since it was generated.\r\n  urlValidDays: Int\r\n  # Overwrite default automatic_fulfillment setting for variant.\r\n  automaticFulfillment: Boolean\r\n}\r\n\r\n# Update digital content.\r\ntype DigitalContentUpdate {\r\n  variant: ProductVariant\r\n  content: DigitalContent\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\ninput DigitalContentUploadInput {\r\n  # Use default digital content settings for this product.\r\n  useDefaultSettings: Boolean!\r\n  # Determines how many times a download link can be accessed by a customer.\r\n  maxDownloads: Int\r\n  # Determines for how many days a download link is active since it was generated.\r\n  urlValidDays: Int\r\n  # Overwrite default automatic_fulfillment setting for variant.\r\n  automaticFulfillment: Boolean\r\n  # Represents an file in a multipart request.\r\n  contentFile: Upload!\r\n}\r\n\r\ntype DigitalContentUrl implements Node {\r\n  content: DigitalContent!\r\n  created: DateTime!\r\n  downloadNum: Int!\r\n  # The ID of the object.\r\n  id: ID!\r\n  # URL for digital content.\r\n  url: String\r\n  # UUID of digital content.\r\n  token: UUID!\r\n}\r\n\r\n# Generate new URL to digital content.\r\ntype DigitalContentUrlCreate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  digitalContentUrl: DigitalContentUrl\r\n}\r\n\r\ninput DigitalContentUrlCreateInput {\r\n  # Digital content ID which URL will belong to.\r\n  content: ID!\r\n}\r\n\r\ntype DiscountError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # List of products IDs which causes the error.\r\n  products: [ID!]\r\n  # The error code.\r\n  code: DiscountErrorCode!\r\n  # List of channels IDs which causes the error.\r\n  channels: [ID!]\r\n}\r\n\r\n# An enumeration.\r\nenum DiscountErrorCode {\r\n  ALREADY_EXISTS\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT\r\n  DUPLICATED_INPUT_ITEM\r\n}\r\n\r\nenum DiscountStatusEnum {\r\n  ACTIVE\r\n  EXPIRED\r\n  SCHEDULED\r\n}\r\n\r\nenum DiscountValueTypeEnum {\r\n  FIXED\r\n  PERCENTAGE\r\n}\r\n\r\n# An enumeration.\r\nenum DistanceUnitsEnum {\r\n  CM\r\n  M\r\n  KM\r\n  FT\r\n  YD\r\n  INCH\r\n}\r\n\r\n# Represents shop's domain.\r\ntype Domain {\r\n  # The host name of the domain.\r\n  host: String!\r\n  # Inform if SSL is enabled.\r\n  sslEnabled: Boolean!\r\n  # Shop's absolute URL.\r\n  url: String!\r\n}\r\n\r\n# Deletes draft orders.\r\ntype DraftOrderBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Completes creating an order.\r\ntype DraftOrderComplete {\r\n  # Completed order.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Creates a new draft order.\r\ntype DraftOrderCreate {\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n  order: Order\r\n}\r\n\r\ninput DraftOrderCreateInput {\r\n  # Billing address of the customer.\r\n  billingAddress: AddressInput\r\n  # Customer associated with the draft order.\r\n  user: ID\r\n  # Email address of the customer.\r\n  userEmail: String\r\n  # Discount amount for the order.\r\n  discount: PositiveDecimal\r\n  # Shipping address of the customer.\r\n  shippingAddress: AddressInput\r\n  # ID of a selected shipping method.\r\n  shippingMethod: ID\r\n  # ID of the voucher associated with the order.\r\n  voucher: ID\r\n  # A note from a customer. Visible by customers in the order summary.\r\n  customerNote: String\r\n  # ID of the channel associated with the order.\r\n  channelId: ID\r\n  # URL of a view where users should be redirected to see the order details. URL in RFC 1808 format.\r\n  redirectUrl: String\r\n  # Variant line input consisting of variant ID and quantity of products.\r\n  lines: [OrderLineCreateInput]\r\n}\r\n\r\n# Deletes a draft order.\r\ntype DraftOrderDelete {\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n  order: Order\r\n}\r\n\r\ninput DraftOrderInput {\r\n  # Billing address of the customer.\r\n  billingAddress: AddressInput\r\n  # Customer associated with the draft order.\r\n  user: ID\r\n  # Email address of the customer.\r\n  userEmail: String\r\n  # Discount amount for the order.\r\n  discount: PositiveDecimal\r\n  # Shipping address of the customer.\r\n  shippingAddress: AddressInput\r\n  # ID of a selected shipping method.\r\n  shippingMethod: ID\r\n  # ID of the voucher associated with the order.\r\n  voucher: ID\r\n  # A note from a customer. Visible by customers in the order summary.\r\n  customerNote: String\r\n  # ID of the channel associated with the order.\r\n  channelId: ID\r\n  # URL of a view where users should be redirected to see the order details. URL in RFC 1808 format.\r\n  redirectUrl: String\r\n}\r\n\r\n# Deletes order lines.\r\ntype DraftOrderLinesBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Updates a draft order.\r\ntype DraftOrderUpdate {\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n  order: Order\r\n}\r\n\r\ntype ExportError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ExportErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum ExportErrorCode {\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n}\r\n\r\n# History log of export file.\r\ntype ExportEvent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Date when event happened at in ISO 8601 format.\r\n  date: DateTime!\r\n  # Export event type.\r\n  type: ExportEventsEnum!\r\n  # User who performed the action.\r\n  user: User\r\n  # App which performed the action.\r\n  app: App\r\n  # Content of the event.\r\n  message: String!\r\n}\r\n\r\n# An enumeration.\r\nenum ExportEventsEnum {\r\n  EXPORT_PENDING\r\n  EXPORT_SUCCESS\r\n  EXPORT_FAILED\r\n  EXPORT_DELETED\r\n  EXPORTED_FILE_SENT\r\n  EXPORT_FAILED_INFO_SENT\r\n}\r\n\r\n# Represents a job data of exported file.\r\ntype ExportFile implements Node & Job {\r\n  # The ID of the object.\r\n  id: ID!\r\n  user: User\r\n  app: App\r\n  # Job status.\r\n  status: JobStatusEnum!\r\n  # Created date time of job in ISO 8601 format.\r\n  createdAt: DateTime!\r\n  # Date time of job last update in ISO 8601 format.\r\n  updatedAt: DateTime!\r\n  # Job message.\r\n  message: String\r\n  # The URL of field to download.\r\n  url: String\r\n  # List of events associated with the export.\r\n  events: [ExportEvent!]\r\n}\r\n\r\ntype ExportFileCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [ExportFileCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype ExportFileCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: ExportFile!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\ninput ExportFileFilterInput {\r\n  createdAt: DateTimeRangeInput\r\n  updatedAt: DateTimeRangeInput\r\n  status: JobStatusEnum\r\n  user: String\r\n  app: String\r\n}\r\n\r\nenum ExportFileSortField {\r\n  # Sort export file by status.\r\n  STATUS\r\n  # Sort export file by created at.\r\n  CREATED_AT\r\n  # Sort export file by updated at.\r\n  UPDATED_AT\r\n}\r\n\r\ninput ExportFileSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort export file by the selected field.\r\n  field: ExportFileSortField!\r\n}\r\n\r\ninput ExportInfoInput {\r\n  # List of attribute ids witch should be exported.\r\n  attributes: [ID!]\r\n  # List of warehouse ids witch should be exported.\r\n  warehouses: [ID!]\r\n  # List of channels ids which should be exported.\r\n  channels: [ID!]\r\n  # List of product fields witch should be exported.\r\n  fields: [ProductFieldEnum!]\r\n}\r\n\r\n# Export products to csv file.\r\ntype ExportProducts {\r\n  # The newly created export file job which is responsible for export data.\r\n  exportFile: ExportFile\r\n  exportErrors: [ExportError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ExportError!]!\r\n}\r\n\r\ninput ExportProductsInput {\r\n  # Determine which products should be exported.\r\n  scope: ExportScope!\r\n  # Filtering options for products.\r\n  filter: ProductFilterInput\r\n  # List of products IDS to export.\r\n  ids: [ID!]\r\n  # Input with info about fields which should be exported.\r\n  exportInfo: ExportInfoInput\r\n  # Type of exported file.\r\n  fileType: FileTypesEnum!\r\n}\r\n\r\nenum ExportScope {\r\n  # Export all products.\r\n  ALL\r\n  # Export products with given ids.\r\n  IDS\r\n  # Export the filtered products.\r\n  FILTER\r\n}\r\n\r\ntype ExternalAuthentication {\r\n  # ID of external authentication plugin.\r\n  id: String!\r\n  # Name of external authentication plugin.\r\n  name: String\r\n}\r\n\r\n# Prepare external authentication url for user by custom plugin.\r\ntype ExternalAuthenticationUrl {\r\n  # The data returned by authentication plugin.\r\n  authenticationData: JSONString\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Logout user by custom plugin.\r\ntype ExternalLogout {\r\n  # The data returned by authentication plugin.\r\n  logoutData: JSONString\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Obtain external access tokens for user by custom plugin.\r\ntype ExternalObtainAccessTokens {\r\n  # The token, required to authenticate.\r\n  token: String\r\n  # The refresh token, required to re-generate external access token.\r\n  refreshToken: String\r\n  # CSRF token required to re-generate external access token.\r\n  csrfToken: String\r\n  # A user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Refresh user's access by custom plugin.\r\ntype ExternalRefresh {\r\n  # The token, required to authenticate.\r\n  token: String\r\n  # The refresh token, required to re-generate external access token.\r\n  refreshToken: String\r\n  # CSRF token required to re-generate external access token.\r\n  csrfToken: String\r\n  # A user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Verify external authentication data by plugin.\r\ntype ExternalVerify {\r\n  # User assigned to data.\r\n  user: User\r\n  # Determine if authentication data is valid or not.\r\n  isValid: Boolean!\r\n  # External data.\r\n  verifyData: JSONString\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\ntype File {\r\n  # The URL of the file.\r\n  url: String!\r\n  # Content type of the file.\r\n  contentType: String\r\n}\r\n\r\n# An enumeration.\r\nenum FileTypesEnum {\r\n  CSV\r\n  XLSX\r\n}\r\n\r\n# Upload a file. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\ntype FileUpload {\r\n  uploadedFile: File\r\n  uploadErrors: [UploadError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [UploadError!]!\r\n}\r\n\r\n# Represents order fulfillment.\r\ntype Fulfillment implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  fulfillmentOrder: Int!\r\n  status: FulfillmentStatus!\r\n  trackingNumber: String!\r\n  created: DateTime!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # List of lines for the fulfillment.\r\n  lines: [FulfillmentLine]\r\n  # User-friendly fulfillment status.\r\n  statusDisplay: String\r\n  # Warehouse from fulfillment was fulfilled.\r\n  warehouse: Warehouse\r\n}\r\n\r\n# Cancels existing fulfillment and optionally restocks items.\r\ntype FulfillmentCancel {\r\n  # A canceled fulfillment.\r\n  fulfillment: Fulfillment\r\n  # Order which fulfillment was cancelled.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput FulfillmentCancelInput {\r\n  # ID of warehouse where items will be restock.\r\n  warehouseId: ID!\r\n}\r\n\r\n# Represents line of the fulfillment.\r\ntype FulfillmentLine implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  quantity: Int!\r\n  orderLine: OrderLine\r\n}\r\n\r\n# Refund products.\r\ntype FulfillmentRefundProducts {\r\n  # A refunded fulfillment.\r\n  fulfillment: Fulfillment\r\n  # Order which fulfillment was refunded.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Return products.\r\ntype FulfillmentReturnProducts {\r\n  # A return fulfillment.\r\n  returnFulfillment: Fulfillment\r\n  # A replace fulfillment.\r\n  replaceFulfillment: Fulfillment\r\n  # Order which fulfillment was returned.\r\n  order: Order\r\n  # A draft order which was created for products with replace flag.\r\n  replaceOrder: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum FulfillmentStatus {\r\n  # Fulfilled\r\n  FULFILLED\r\n  # Refunded\r\n  REFUNDED\r\n  # Returned\r\n  RETURNED\r\n  # Replaced\r\n  REPLACED\r\n  # Refunded and returned\r\n  REFUNDED_AND_RETURNED\r\n  # Canceled\r\n  CANCELED\r\n}\r\n\r\n# Updates a fulfillment for an order.\r\ntype FulfillmentUpdateTracking {\r\n  # A fulfillment with updated tracking.\r\n  fulfillment: Fulfillment\r\n  # Order for which fulfillment was updated.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput FulfillmentUpdateTrackingInput {\r\n  # Fulfillment tracking number.\r\n  trackingNumber: String\r\n  # If true, send an email notification to the customer.\r\n  notifyCustomer: Boolean = false\r\n}\r\n\r\n# Payment gateway client configuration key and value pair.\r\ntype GatewayConfigLine {\r\n  # Gateway config key.\r\n  field: String!\r\n  # Gateway config value for key.\r\n  value: String\r\n}\r\n\r\n# The `GenericScalar` scalar type represents a generic\r\n# GraphQL scalar value that could be:\r\n# String, Boolean, Int, Float, List or Object.\r\nscalar GenericScalar\r\n\r\n# A gift card is a prepaid electronic payment card accepted in stores. They can be used during checkout by providing a valid gift card codes.\r\ntype GiftCard implements Node {\r\n  # Gift card code.\r\n  code: String\r\n  # The customer who bought a gift card.\r\n  user: User\r\n  created: DateTime!\r\n  startDate: Date!\r\n  endDate: Date\r\n  lastUsedOn: DateTime\r\n  isActive: Boolean!\r\n  initialBalance: Money\r\n  currentBalance: Money\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Code in format which allows displaying in a user interface.\r\n  displayCode: String\r\n}\r\n\r\n# Activate a gift card.\r\ntype GiftCardActivate {\r\n  # A gift card to activate.\r\n  giftCard: GiftCard\r\n  giftCardErrors: [GiftCardError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [GiftCardError!]!\r\n}\r\n\r\ntype GiftCardCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [GiftCardCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype GiftCardCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: GiftCard!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new gift card.\r\ntype GiftCardCreate {\r\n  giftCardErrors: [GiftCardError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [GiftCardError!]!\r\n  giftCard: GiftCard\r\n}\r\n\r\ninput GiftCardCreateInput {\r\n  # Start date of the gift card in ISO 8601 format.\r\n  startDate: Date\r\n  # End date of the gift card in ISO 8601 format.\r\n  endDate: Date\r\n  # Value of the gift card.\r\n  balance: PositiveDecimal\r\n  # The customer's email of the gift card buyer.\r\n  userEmail: String\r\n  # Code to use the gift card.\r\n  code: String\r\n}\r\n\r\n# Deactivate a gift card.\r\ntype GiftCardDeactivate {\r\n  # A gift card to deactivate.\r\n  giftCard: GiftCard\r\n  giftCardErrors: [GiftCardError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [GiftCardError!]!\r\n}\r\n\r\ntype GiftCardError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: GiftCardErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum GiftCardErrorCode {\r\n  ALREADY_EXISTS\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\n# Update a gift card.\r\ntype GiftCardUpdate {\r\n  giftCardErrors: [GiftCardError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [GiftCardError!]!\r\n  giftCard: GiftCard\r\n}\r\n\r\ninput GiftCardUpdateInput {\r\n  # Start date of the gift card in ISO 8601 format.\r\n  startDate: Date\r\n  # End date of the gift card in ISO 8601 format.\r\n  endDate: Date\r\n  # Value of the gift card.\r\n  balance: PositiveDecimal\r\n  # The customer's email of the gift card buyer.\r\n  userEmail: String\r\n}\r\n\r\n# Represents permission group data.\r\ntype Group implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # List of group permissions\r\n  permissions: [Permission]\r\n  # List of group users\r\n  users: [User]\r\n  # True, if the currently authenticated user has rights to manage a group.\r\n  userCanManage: Boolean!\r\n}\r\n\r\ntype GroupCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [GroupCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype GroupCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Group!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Represents an image.\r\ntype Image {\r\n  # The URL of the image.\r\n  url: String!\r\n  # Alt text for an image.\r\n  alt: String\r\n}\r\n\r\ninput IntRangeInput {\r\n  # Value greater than or equal to.\r\n  gte: Int\r\n  # Value less than or equal to.\r\n  lte: Int\r\n}\r\n\r\n# Represents an Invoice.\r\ntype Invoice implements ObjectWithMetadata & Job & Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Job status.\r\n  status: JobStatusEnum!\r\n  number: String\r\n  externalUrl: String\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # Created date time of job in ISO 8601 format.\r\n  createdAt: DateTime!\r\n  # Date time of job last update in ISO 8601 format.\r\n  updatedAt: DateTime!\r\n  # Job message.\r\n  message: String\r\n  # URL to download an invoice.\r\n  url: String\r\n}\r\n\r\n# Creates a ready to send invoice.\r\ntype InvoiceCreate {\r\n  invoiceErrors: [InvoiceError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [InvoiceError!]!\r\n  invoice: Invoice\r\n}\r\n\r\ninput InvoiceCreateInput {\r\n  # Invoice number.\r\n  number: String!\r\n  # URL of an invoice to download.\r\n  url: String!\r\n}\r\n\r\n# Deletes an invoice.\r\ntype InvoiceDelete {\r\n  invoiceErrors: [InvoiceError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [InvoiceError!]!\r\n  invoice: Invoice\r\n}\r\n\r\ntype InvoiceError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: InvoiceErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum InvoiceErrorCode {\r\n  REQUIRED\r\n  NOT_READY\r\n  URL_NOT_SET\r\n  EMAIL_NOT_SET\r\n  NUMBER_NOT_SET\r\n  NOT_FOUND\r\n  INVALID_STATUS\r\n}\r\n\r\n# Request an invoice for the order using plugin.\r\ntype InvoiceRequest {\r\n  # Order related to an invoice.\r\n  order: Order\r\n  invoiceErrors: [InvoiceError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [InvoiceError!]!\r\n  invoice: Invoice\r\n}\r\n\r\n# Requests deletion of an invoice.\r\ntype InvoiceRequestDelete {\r\n  invoiceErrors: [InvoiceError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [InvoiceError!]!\r\n  invoice: Invoice\r\n}\r\n\r\n# Send an invoice notification to the customer.\r\ntype InvoiceSendNotification {\r\n  invoiceErrors: [InvoiceError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [InvoiceError!]!\r\n  invoice: Invoice\r\n}\r\n\r\n# Updates an invoice.\r\ntype InvoiceUpdate {\r\n  invoiceErrors: [InvoiceError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [InvoiceError!]!\r\n  invoice: Invoice\r\n}\r\n\r\n# Allows use of a JSON String for input / output from the GraphQL schema.\r\n# Use of this type is *not recommended* as you lose the benefits of having a defined, static\r\n# schema (one of the key benefits of GraphQL).\r\nscalar JSONString\r\n\r\ninterface Job {\r\n  # Job status.\r\n  status: JobStatusEnum!\r\n  # Created date time of job in ISO 8601 format.\r\n  createdAt: DateTime!\r\n  # Date time of job last update in ISO 8601 format.\r\n  updatedAt: DateTime!\r\n  # Job message.\r\n  message: String\r\n}\r\n\r\n# An enumeration.\r\nenum JobStatusEnum {\r\n  PENDING\r\n  SUCCESS\r\n  FAILED\r\n  DELETED\r\n}\r\n\r\n# An enumeration.\r\nenum LanguageCodeEnum {\r\n  AF\r\n  AF_NA\r\n  AF_ZA\r\n  AGQ\r\n  AGQ_CM\r\n  AK\r\n  AK_GH\r\n  AM\r\n  AM_ET\r\n  AR\r\n  AR_AE\r\n  AR_BH\r\n  AR_DJ\r\n  AR_DZ\r\n  AR_EG\r\n  AR_EH\r\n  AR_ER\r\n  AR_IL\r\n  AR_IQ\r\n  AR_JO\r\n  AR_KM\r\n  AR_KW\r\n  AR_LB\r\n  AR_LY\r\n  AR_MA\r\n  AR_MR\r\n  AR_OM\r\n  AR_PS\r\n  AR_QA\r\n  AR_SA\r\n  AR_SD\r\n  AR_SO\r\n  AR_SS\r\n  AR_SY\r\n  AR_TD\r\n  AR_TN\r\n  AR_YE\r\n  AS\r\n  AS_IN\r\n  ASA\r\n  ASA_TZ\r\n  AST\r\n  AST_ES\r\n  AZ\r\n  AZ_CYRL\r\n  AZ_CYRL_AZ\r\n  AZ_LATN\r\n  AZ_LATN_AZ\r\n  BAS\r\n  BAS_CM\r\n  BE\r\n  BE_BY\r\n  BEM\r\n  BEM_ZM\r\n  BEZ\r\n  BEZ_TZ\r\n  BG\r\n  BG_BG\r\n  BM\r\n  BM_ML\r\n  BN\r\n  BN_BD\r\n  BN_IN\r\n  BO\r\n  BO_CN\r\n  BO_IN\r\n  BR\r\n  BR_FR\r\n  BRX\r\n  BRX_IN\r\n  BS\r\n  BS_CYRL\r\n  BS_CYRL_BA\r\n  BS_LATN\r\n  BS_LATN_BA\r\n  CA\r\n  CA_AD\r\n  CA_ES\r\n  CA_ES_VALENCIA\r\n  CA_FR\r\n  CA_IT\r\n  CCP\r\n  CCP_BD\r\n  CCP_IN\r\n  CE\r\n  CE_RU\r\n  CEB\r\n  CEB_PH\r\n  CGG\r\n  CGG_UG\r\n  CHR\r\n  CHR_US\r\n  CKB\r\n  CKB_IQ\r\n  CKB_IR\r\n  CS\r\n  CS_CZ\r\n  CU\r\n  CU_RU\r\n  CY\r\n  CY_GB\r\n  DA\r\n  DA_DK\r\n  DA_GL\r\n  DAV\r\n  DAV_KE\r\n  DE\r\n  DE_AT\r\n  DE_BE\r\n  DE_CH\r\n  DE_DE\r\n  DE_IT\r\n  DE_LI\r\n  DE_LU\r\n  DJE\r\n  DJE_NE\r\n  DSB\r\n  DSB_DE\r\n  DUA\r\n  DUA_CM\r\n  DYO\r\n  DYO_SN\r\n  DZ\r\n  DZ_BT\r\n  EBU\r\n  EBU_KE\r\n  EE\r\n  EE_GH\r\n  EE_TG\r\n  EL\r\n  EL_CY\r\n  EL_GR\r\n  EN\r\n  EN_AE\r\n  EN_AG\r\n  EN_AI\r\n  EN_AS\r\n  EN_AT\r\n  EN_AU\r\n  EN_BB\r\n  EN_BE\r\n  EN_BI\r\n  EN_BM\r\n  EN_BS\r\n  EN_BW\r\n  EN_BZ\r\n  EN_CA\r\n  EN_CC\r\n  EN_CH\r\n  EN_CK\r\n  EN_CM\r\n  EN_CX\r\n  EN_CY\r\n  EN_DE\r\n  EN_DG\r\n  EN_DK\r\n  EN_DM\r\n  EN_ER\r\n  EN_FI\r\n  EN_FJ\r\n  EN_FK\r\n  EN_FM\r\n  EN_GB\r\n  EN_GD\r\n  EN_GG\r\n  EN_GH\r\n  EN_GI\r\n  EN_GM\r\n  EN_GU\r\n  EN_GY\r\n  EN_HK\r\n  EN_IE\r\n  EN_IL\r\n  EN_IM\r\n  EN_IN\r\n  EN_IO\r\n  EN_JE\r\n  EN_JM\r\n  EN_KE\r\n  EN_KI\r\n  EN_KN\r\n  EN_KY\r\n  EN_LC\r\n  EN_LR\r\n  EN_LS\r\n  EN_MG\r\n  EN_MH\r\n  EN_MO\r\n  EN_MP\r\n  EN_MS\r\n  EN_MT\r\n  EN_MU\r\n  EN_MW\r\n  EN_MY\r\n  EN_NA\r\n  EN_NF\r\n  EN_NG\r\n  EN_NL\r\n  EN_NR\r\n  EN_NU\r\n  EN_NZ\r\n  EN_PG\r\n  EN_PH\r\n  EN_PK\r\n  EN_PN\r\n  EN_PR\r\n  EN_PW\r\n  EN_RW\r\n  EN_SB\r\n  EN_SC\r\n  EN_SD\r\n  EN_SE\r\n  EN_SG\r\n  EN_SH\r\n  EN_SI\r\n  EN_SL\r\n  EN_SS\r\n  EN_SX\r\n  EN_SZ\r\n  EN_TC\r\n  EN_TK\r\n  EN_TO\r\n  EN_TT\r\n  EN_TV\r\n  EN_TZ\r\n  EN_UG\r\n  EN_UM\r\n  EN_US\r\n  EN_VC\r\n  EN_VG\r\n  EN_VI\r\n  EN_VU\r\n  EN_WS\r\n  EN_ZA\r\n  EN_ZM\r\n  EN_ZW\r\n  EO\r\n  ES\r\n  ES_AR\r\n  ES_BO\r\n  ES_BR\r\n  ES_BZ\r\n  ES_CL\r\n  ES_CO\r\n  ES_CR\r\n  ES_CU\r\n  ES_DO\r\n  ES_EA\r\n  ES_EC\r\n  ES_ES\r\n  ES_GQ\r\n  ES_GT\r\n  ES_HN\r\n  ES_IC\r\n  ES_MX\r\n  ES_NI\r\n  ES_PA\r\n  ES_PE\r\n  ES_PH\r\n  ES_PR\r\n  ES_PY\r\n  ES_SV\r\n  ES_US\r\n  ES_UY\r\n  ES_VE\r\n  ET\r\n  ET_EE\r\n  EU\r\n  EU_ES\r\n  EWO\r\n  EWO_CM\r\n  FA\r\n  FA_AF\r\n  FA_IR\r\n  FF\r\n  FF_ADLM\r\n  FF_ADLM_BF\r\n  FF_ADLM_CM\r\n  FF_ADLM_GH\r\n  FF_ADLM_GM\r\n  FF_ADLM_GN\r\n  FF_ADLM_GW\r\n  FF_ADLM_LR\r\n  FF_ADLM_MR\r\n  FF_ADLM_NE\r\n  FF_ADLM_NG\r\n  FF_ADLM_SL\r\n  FF_ADLM_SN\r\n  FF_LATN\r\n  FF_LATN_BF\r\n  FF_LATN_CM\r\n  FF_LATN_GH\r\n  FF_LATN_GM\r\n  FF_LATN_GN\r\n  FF_LATN_GW\r\n  FF_LATN_LR\r\n  FF_LATN_MR\r\n  FF_LATN_NE\r\n  FF_LATN_NG\r\n  FF_LATN_SL\r\n  FF_LATN_SN\r\n  FI\r\n  FI_FI\r\n  FIL\r\n  FIL_PH\r\n  FO\r\n  FO_DK\r\n  FO_FO\r\n  FR\r\n  FR_BE\r\n  FR_BF\r\n  FR_BI\r\n  FR_BJ\r\n  FR_BL\r\n  FR_CA\r\n  FR_CD\r\n  FR_CF\r\n  FR_CG\r\n  FR_CH\r\n  FR_CI\r\n  FR_CM\r\n  FR_DJ\r\n  FR_DZ\r\n  FR_FR\r\n  FR_GA\r\n  FR_GF\r\n  FR_GN\r\n  FR_GP\r\n  FR_GQ\r\n  FR_HT\r\n  FR_KM\r\n  FR_LU\r\n  FR_MA\r\n  FR_MC\r\n  FR_MF\r\n  FR_MG\r\n  FR_ML\r\n  FR_MQ\r\n  FR_MR\r\n  FR_MU\r\n  FR_NC\r\n  FR_NE\r\n  FR_PF\r\n  FR_PM\r\n  FR_RE\r\n  FR_RW\r\n  FR_SC\r\n  FR_SN\r\n  FR_SY\r\n  FR_TD\r\n  FR_TG\r\n  FR_TN\r\n  FR_VU\r\n  FR_WF\r\n  FR_YT\r\n  FUR\r\n  FUR_IT\r\n  FY\r\n  FY_NL\r\n  GA\r\n  GA_GB\r\n  GA_IE\r\n  GD\r\n  GD_GB\r\n  GL\r\n  GL_ES\r\n  GSW\r\n  GSW_CH\r\n  GSW_FR\r\n  GSW_LI\r\n  GU\r\n  GU_IN\r\n  GUZ\r\n  GUZ_KE\r\n  GV\r\n  GV_IM\r\n  HA\r\n  HA_GH\r\n  HA_NE\r\n  HA_NG\r\n  HAW\r\n  HAW_US\r\n  HE\r\n  HE_IL\r\n  HI\r\n  HI_IN\r\n  HR\r\n  HR_BA\r\n  HR_HR\r\n  HSB\r\n  HSB_DE\r\n  HU\r\n  HU_HU\r\n  HY\r\n  HY_AM\r\n  IA\r\n  ID\r\n  ID_ID\r\n  IG\r\n  IG_NG\r\n  II\r\n  II_CN\r\n  IS\r\n  IS_IS\r\n  IT\r\n  IT_CH\r\n  IT_IT\r\n  IT_SM\r\n  IT_VA\r\n  JA\r\n  JA_JP\r\n  JGO\r\n  JGO_CM\r\n  JMC\r\n  JMC_TZ\r\n  JV\r\n  JV_ID\r\n  KA\r\n  KA_GE\r\n  KAB\r\n  KAB_DZ\r\n  KAM\r\n  KAM_KE\r\n  KDE\r\n  KDE_TZ\r\n  KEA\r\n  KEA_CV\r\n  KHQ\r\n  KHQ_ML\r\n  KI\r\n  KI_KE\r\n  KK\r\n  KK_KZ\r\n  KKJ\r\n  KKJ_CM\r\n  KL\r\n  KL_GL\r\n  KLN\r\n  KLN_KE\r\n  KM\r\n  KM_KH\r\n  KN\r\n  KN_IN\r\n  KO\r\n  KO_KP\r\n  KO_KR\r\n  KOK\r\n  KOK_IN\r\n  KS\r\n  KS_ARAB\r\n  KS_ARAB_IN\r\n  KSB\r\n  KSB_TZ\r\n  KSF\r\n  KSF_CM\r\n  KSH\r\n  KSH_DE\r\n  KU\r\n  KU_TR\r\n  KW\r\n  KW_GB\r\n  KY\r\n  KY_KG\r\n  LAG\r\n  LAG_TZ\r\n  LB\r\n  LB_LU\r\n  LG\r\n  LG_UG\r\n  LKT\r\n  LKT_US\r\n  LN\r\n  LN_AO\r\n  LN_CD\r\n  LN_CF\r\n  LN_CG\r\n  LO\r\n  LO_LA\r\n  LRC\r\n  LRC_IQ\r\n  LRC_IR\r\n  LT\r\n  LT_LT\r\n  LU\r\n  LU_CD\r\n  LUO\r\n  LUO_KE\r\n  LUY\r\n  LUY_KE\r\n  LV\r\n  LV_LV\r\n  MAI\r\n  MAI_IN\r\n  MAS\r\n  MAS_KE\r\n  MAS_TZ\r\n  MER\r\n  MER_KE\r\n  MFE\r\n  MFE_MU\r\n  MG\r\n  MG_MG\r\n  MGH\r\n  MGH_MZ\r\n  MGO\r\n  MGO_CM\r\n  MI\r\n  MI_NZ\r\n  MK\r\n  MK_MK\r\n  ML\r\n  ML_IN\r\n  MN\r\n  MN_MN\r\n  MNI\r\n  MNI_BENG\r\n  MNI_BENG_IN\r\n  MR\r\n  MR_IN\r\n  MS\r\n  MS_BN\r\n  MS_ID\r\n  MS_MY\r\n  MS_SG\r\n  MT\r\n  MT_MT\r\n  MUA\r\n  MUA_CM\r\n  MY\r\n  MY_MM\r\n  MZN\r\n  MZN_IR\r\n  NAQ\r\n  NAQ_NA\r\n  NB\r\n  NB_NO\r\n  NB_SJ\r\n  ND\r\n  ND_ZW\r\n  NDS\r\n  NDS_DE\r\n  NDS_NL\r\n  NE\r\n  NE_IN\r\n  NE_NP\r\n  NL\r\n  NL_AW\r\n  NL_BE\r\n  NL_BQ\r\n  NL_CW\r\n  NL_NL\r\n  NL_SR\r\n  NL_SX\r\n  NMG\r\n  NMG_CM\r\n  NN\r\n  NN_NO\r\n  NNH\r\n  NNH_CM\r\n  NUS\r\n  NUS_SS\r\n  NYN\r\n  NYN_UG\r\n  OM\r\n  OM_ET\r\n  OM_KE\r\n  OR\r\n  OR_IN\r\n  OS\r\n  OS_GE\r\n  OS_RU\r\n  PA\r\n  PA_ARAB\r\n  PA_ARAB_PK\r\n  PA_GURU\r\n  PA_GURU_IN\r\n  PCM\r\n  PCM_NG\r\n  PL\r\n  PL_PL\r\n  PRG\r\n  PS\r\n  PS_AF\r\n  PS_PK\r\n  PT\r\n  PT_AO\r\n  PT_BR\r\n  PT_CH\r\n  PT_CV\r\n  PT_GQ\r\n  PT_GW\r\n  PT_LU\r\n  PT_MO\r\n  PT_MZ\r\n  PT_PT\r\n  PT_ST\r\n  PT_TL\r\n  QU\r\n  QU_BO\r\n  QU_EC\r\n  QU_PE\r\n  RM\r\n  RM_CH\r\n  RN\r\n  RN_BI\r\n  RO\r\n  RO_MD\r\n  RO_RO\r\n  ROF\r\n  ROF_TZ\r\n  RU\r\n  RU_BY\r\n  RU_KG\r\n  RU_KZ\r\n  RU_MD\r\n  RU_RU\r\n  RU_UA\r\n  RW\r\n  RW_RW\r\n  RWK\r\n  RWK_TZ\r\n  SAH\r\n  SAH_RU\r\n  SAQ\r\n  SAQ_KE\r\n  SAT\r\n  SAT_OLCK\r\n  SAT_OLCK_IN\r\n  SBP\r\n  SBP_TZ\r\n  SD\r\n  SD_ARAB\r\n  SD_ARAB_PK\r\n  SD_DEVA\r\n  SD_DEVA_IN\r\n  SE\r\n  SE_FI\r\n  SE_NO\r\n  SE_SE\r\n  SEH\r\n  SEH_MZ\r\n  SES\r\n  SES_ML\r\n  SG\r\n  SG_CF\r\n  SHI\r\n  SHI_LATN\r\n  SHI_LATN_MA\r\n  SHI_TFNG\r\n  SHI_TFNG_MA\r\n  SI\r\n  SI_LK\r\n  SK\r\n  SK_SK\r\n  SL\r\n  SL_SI\r\n  SMN\r\n  SMN_FI\r\n  SN\r\n  SN_ZW\r\n  SO\r\n  SO_DJ\r\n  SO_ET\r\n  SO_KE\r\n  SO_SO\r\n  SQ\r\n  SQ_AL\r\n  SQ_MK\r\n  SQ_XK\r\n  SR\r\n  SR_CYRL\r\n  SR_CYRL_BA\r\n  SR_CYRL_ME\r\n  SR_CYRL_RS\r\n  SR_CYRL_XK\r\n  SR_LATN\r\n  SR_LATN_BA\r\n  SR_LATN_ME\r\n  SR_LATN_RS\r\n  SR_LATN_XK\r\n  SU\r\n  SU_LATN\r\n  SU_LATN_ID\r\n  SV\r\n  SV_AX\r\n  SV_FI\r\n  SV_SE\r\n  SW\r\n  SW_CD\r\n  SW_KE\r\n  SW_TZ\r\n  SW_UG\r\n  TA\r\n  TA_IN\r\n  TA_LK\r\n  TA_MY\r\n  TA_SG\r\n  TE\r\n  TE_IN\r\n  TEO\r\n  TEO_KE\r\n  TEO_UG\r\n  TG\r\n  TG_TJ\r\n  TH\r\n  TH_TH\r\n  TI\r\n  TI_ER\r\n  TI_ET\r\n  TK\r\n  TK_TM\r\n  TO\r\n  TO_TO\r\n  TR\r\n  TR_CY\r\n  TR_TR\r\n  TT\r\n  TT_RU\r\n  TWQ\r\n  TWQ_NE\r\n  TZM\r\n  TZM_MA\r\n  UG\r\n  UG_CN\r\n  UK\r\n  UK_UA\r\n  UR\r\n  UR_IN\r\n  UR_PK\r\n  UZ\r\n  UZ_ARAB\r\n  UZ_ARAB_AF\r\n  UZ_CYRL\r\n  UZ_CYRL_UZ\r\n  UZ_LATN\r\n  UZ_LATN_UZ\r\n  VAI\r\n  VAI_LATN\r\n  VAI_LATN_LR\r\n  VAI_VAII\r\n  VAI_VAII_LR\r\n  VI\r\n  VI_VN\r\n  VO\r\n  VUN\r\n  VUN_TZ\r\n  WAE\r\n  WAE_CH\r\n  WO\r\n  WO_SN\r\n  XH\r\n  XH_ZA\r\n  XOG\r\n  XOG_UG\r\n  YAV\r\n  YAV_CM\r\n  YI\r\n  YO\r\n  YO_BJ\r\n  YO_NG\r\n  YUE\r\n  YUE_HANS\r\n  YUE_HANS_CN\r\n  YUE_HANT\r\n  YUE_HANT_HK\r\n  ZGH\r\n  ZGH_MA\r\n  ZH\r\n  ZH_HANS\r\n  ZH_HANS_CN\r\n  ZH_HANS_HK\r\n  ZH_HANS_MO\r\n  ZH_HANS_SG\r\n  ZH_HANT\r\n  ZH_HANT_HK\r\n  ZH_HANT_MO\r\n  ZH_HANT_TW\r\n  ZU\r\n  ZU_ZA\r\n}\r\n\r\ntype LanguageDisplay {\r\n  # ISO 639 representation of the language name.\r\n  code: LanguageCodeEnum!\r\n  # Full name of the language.\r\n  language: String!\r\n}\r\n\r\ntype LimitInfo {\r\n  # Defines the current resource usage.\r\n  currentUsage: Limits!\r\n  # Defines the allowed maximum resource usage, null means unlimited.\r\n  allowedUsage: Limits!\r\n}\r\n\r\ntype Limits {\r\n  channels: Int\r\n  orders: Int\r\n  productVariants: Int\r\n  staffUsers: Int\r\n  warehouses: Int\r\n}\r\n\r\n# The manifest definition.\r\ntype Manifest {\r\n  identifier: String!\r\n  version: String!\r\n  name: String!\r\n  about: String\r\n  permissions: [Permission]\r\n  appUrl: String\r\n  configurationUrl: String\r\n  tokenTargetUrl: String\r\n  dataPrivacy: String\r\n  dataPrivacyUrl: String\r\n  homepageUrl: String\r\n  supportUrl: String\r\n}\r\n\r\ntype Margin {\r\n  start: Int\r\n  stop: Int\r\n}\r\n\r\n# An enumeration.\r\nenum MeasurementUnitsEnum {\r\n  CM\r\n  M\r\n  KM\r\n  FT\r\n  YD\r\n  INCH\r\n  SQ_CM\r\n  SQ_M\r\n  SQ_KM\r\n  SQ_FT\r\n  SQ_YD\r\n  SQ_INCH\r\n  CUBIC_MILLIMETER\r\n  CUBIC_CENTIMETER\r\n  CUBIC_DECIMETER\r\n  CUBIC_METER\r\n  LITER\r\n  CUBIC_FOOT\r\n  CUBIC_INCH\r\n  CUBIC_YARD\r\n  QT\r\n  PINT\r\n  FL_OZ\r\n  ACRE_IN\r\n  ACRE_FT\r\n  G\r\n  LB\r\n  OZ\r\n  KG\r\n  TONNE\r\n}\r\n\r\n# Represents a single menu - an object that is used to help navigate through the store.\r\ntype Menu implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  slug: String!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  items: [MenuItem]\r\n}\r\n\r\n# Deletes menus.\r\ntype MenuBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n}\r\n\r\ntype MenuCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [MenuCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype MenuCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Menu!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new Menu.\r\ntype MenuCreate {\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n  menu: Menu\r\n}\r\n\r\ninput MenuCreateInput {\r\n  # Name of the menu.\r\n  name: String!\r\n  # Slug of the menu. Will be generated if not provided.\r\n  slug: String\r\n  # List of menu items.\r\n  items: [MenuItemInput]\r\n}\r\n\r\n# Deletes a menu.\r\ntype MenuDelete {\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n  menu: Menu\r\n}\r\n\r\ntype MenuError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: MenuErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum MenuErrorCode {\r\n  CANNOT_ASSIGN_NODE\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  INVALID_MENU_ITEM\r\n  NO_MENU_ITEM_PROVIDED\r\n  NOT_FOUND\r\n  REQUIRED\r\n  TOO_MANY_MENU_ITEMS\r\n  UNIQUE\r\n}\r\n\r\ninput MenuFilterInput {\r\n  search: String\r\n  slug: [String]\r\n  metadata: [MetadataFilter]\r\n}\r\n\r\ninput MenuInput {\r\n  # Name of the menu.\r\n  name: String\r\n  # Slug of the menu.\r\n  slug: String\r\n}\r\n\r\n# Represents a single item of the related menu. Can store categories, collection or pages.\r\ntype MenuItem implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  menu: Menu!\r\n  parent: MenuItem\r\n  category: Category\r\n  collection: Collection\r\n  page: Page\r\n  level: Int!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  children: [MenuItem]\r\n  # URL to the menu item.\r\n  url: String\r\n  # Returns translated menu item fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for menu item.\r\n    languageCode: LanguageCodeEnum!\r\n  ): MenuItemTranslation\r\n}\r\n\r\n# Deletes menu items.\r\ntype MenuItemBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n}\r\n\r\ntype MenuItemCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [MenuItemCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype MenuItemCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: MenuItem!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new menu item.\r\ntype MenuItemCreate {\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n  menuItem: MenuItem\r\n}\r\n\r\ninput MenuItemCreateInput {\r\n  # Name of the menu item.\r\n  name: String!\r\n  # URL of the pointed item.\r\n  url: String\r\n  # Category to which item points.\r\n  category: ID\r\n  # Collection to which item points.\r\n  collection: ID\r\n  # Page to which item points.\r\n  page: ID\r\n  # Menu to which item belongs.\r\n  menu: ID!\r\n  # ID of the parent menu. If empty, menu will be top level menu.\r\n  parent: ID\r\n}\r\n\r\n# Deletes a menu item.\r\ntype MenuItemDelete {\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n  menuItem: MenuItem\r\n}\r\n\r\ninput MenuItemFilterInput {\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n}\r\n\r\ninput MenuItemInput {\r\n  # Name of the menu item.\r\n  name: String\r\n  # URL of the pointed item.\r\n  url: String\r\n  # Category to which item points.\r\n  category: ID\r\n  # Collection to which item points.\r\n  collection: ID\r\n  # Page to which item points.\r\n  page: ID\r\n}\r\n\r\n# Moves items of menus.\r\ntype MenuItemMove {\r\n  # Assigned menu to move within.\r\n  menu: Menu\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n}\r\n\r\ninput MenuItemMoveInput {\r\n  # The menu item ID to move.\r\n  itemId: ID!\r\n  # ID of the parent menu. If empty, menu will be top level menu.\r\n  parentId: ID\r\n  # The new relative sorting position of the item (from -inf to +inf). 1 moves the item one position forward, -1 moves the item one position backward, 0 leaves the item unchanged.\r\n  sortOrder: Int\r\n}\r\n\r\ninput MenuItemSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort menu items by the selected field.\r\n  field: MenuItemsSortField!\r\n}\r\n\r\ntype MenuItemTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # Returns translated menu item fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for menu item.\r\n    languageCode: LanguageCodeEnum!\r\n  ): MenuItemTranslation\r\n  # Represents a single item of the related menu. Can store categories, collection or pages.\r\n  menuItem: MenuItem @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\n# Creates/updates translations for a menu item.\r\ntype MenuItemTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  menuItem: MenuItem\r\n}\r\n\r\ntype MenuItemTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\n# Updates a menu item.\r\ntype MenuItemUpdate {\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n  menuItem: MenuItem\r\n}\r\n\r\nenum MenuItemsSortField {\r\n  # Sort menu items by name.\r\n  NAME\r\n}\r\n\r\nenum MenuSortField {\r\n  # Sort menus by name.\r\n  NAME\r\n  # Sort menus by items count.\r\n  ITEMS_COUNT\r\n}\r\n\r\ninput MenuSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort menus by the selected field.\r\n  field: MenuSortField!\r\n}\r\n\r\n# Updates a menu.\r\ntype MenuUpdate {\r\n  menuErrors: [MenuError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MenuError!]!\r\n  menu: Menu\r\n}\r\n\r\ntype MetadataError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: MetadataErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum MetadataErrorCode {\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n}\r\n\r\ninput MetadataFilter {\r\n  # Key of a metadata item.\r\n  key: String!\r\n  # Value of a metadata item.\r\n  value: String\r\n}\r\n\r\ninput MetadataInput {\r\n  # Key of a metadata item.\r\n  key: String!\r\n  # Value of a metadata item.\r\n  value: String!\r\n}\r\n\r\ntype MetadataItem {\r\n  # Key of a metadata item.\r\n  key: String!\r\n  # Value of a metadata item.\r\n  value: String!\r\n}\r\n\r\n# Represents amount of money in specific currency.\r\ntype Money {\r\n  # Currency code.\r\n  currency: String!\r\n  # Amount of money.\r\n  amount: Float!\r\n}\r\n\r\n# Represents a range of amounts of money.\r\ntype MoneyRange {\r\n  # Lower bound of a price range.\r\n  start: Money\r\n  # Upper bound of a price range.\r\n  stop: Money\r\n}\r\n\r\ninput MoveProductInput {\r\n  # The ID of the product to move.\r\n  productId: ID!\r\n  # The relative sorting position of the product (from -inf to +inf) starting from the first given product's actual position.1 moves the item one position forward, -1 moves the item one position backward, 0 leaves the item unchanged.\r\n  sortOrder: Int\r\n}\r\n\r\ntype Mutation {\r\n  # Creates a new webhook subscription.\r\n  webhookCreate(\r\n    # Fields required to create a webhook.\r\n    input: WebhookCreateInput!\r\n  ): WebhookCreate\r\n  # Deletes a webhook subscription.\r\n  webhookDelete(\r\n    # ID of a webhook to delete.\r\n    id: ID!\r\n  ): WebhookDelete\r\n  # Updates a webhook subscription.\r\n  webhookUpdate(\r\n    # ID of a webhook to update.\r\n    id: ID!\r\n    # Fields required to update a webhook.\r\n    input: WebhookUpdateInput!\r\n  ): WebhookUpdate\r\n  # Creates new warehouse.\r\n  createWarehouse(\r\n    # Fields required to create warehouse.\r\n    input: WarehouseCreateInput!\r\n  ): WarehouseCreate\r\n  # Updates given warehouse.\r\n  updateWarehouse(\r\n    # ID of a warehouse to update.\r\n    id: ID!\r\n    # Fields required to update warehouse.\r\n    input: WarehouseUpdateInput!\r\n  ): WarehouseUpdate\r\n  # Deletes selected warehouse.\r\n  deleteWarehouse(\r\n    # ID of a warehouse to delete.\r\n    id: ID!\r\n  ): WarehouseDelete\r\n  # Add shipping zone to given warehouse.\r\n  assignWarehouseShippingZone(\r\n    # ID of a warehouse to update.\r\n    id: ID!\r\n    # List of shipping zone IDs.\r\n    shippingZoneIds: [ID!]!\r\n  ): WarehouseShippingZoneAssign\r\n  # Remove shipping zone from given warehouse.\r\n  unassignWarehouseShippingZone(\r\n    # ID of a warehouse to update.\r\n    id: ID!\r\n    # List of shipping zone IDs.\r\n    shippingZoneIds: [ID!]!\r\n  ): WarehouseShippingZoneUnassign\r\n  # Creates a new staff notification recipient.\r\n  staffNotificationRecipientCreate(\r\n    # Fields required to create a staff notification recipient.\r\n    input: StaffNotificationRecipientInput!\r\n  ): StaffNotificationRecipientCreate\r\n  # Updates a staff notification recipient.\r\n  staffNotificationRecipientUpdate(\r\n    # ID of a staff notification recipient to update.\r\n    id: ID!\r\n    # Fields required to update a staff notification recipient.\r\n    input: StaffNotificationRecipientInput!\r\n  ): StaffNotificationRecipientUpdate\r\n  # Delete staff notification recipient.\r\n  staffNotificationRecipientDelete(\r\n    # ID of a staff notification recipient to delete.\r\n    id: ID!\r\n  ): StaffNotificationRecipientDelete\r\n  # Updates site domain of the shop.\r\n  shopDomainUpdate(\r\n    # Fields required to update site.\r\n    input: SiteDomainInput\r\n  ): ShopDomainUpdate\r\n  # Updates shop settings.\r\n  shopSettingsUpdate(\r\n    # Fields required to update shop settings.\r\n    input: ShopSettingsInput!\r\n  ): ShopSettingsUpdate\r\n  # Fetch tax rates.\r\n  shopFetchTaxRates: ShopFetchTaxRates\r\n  # Creates/updates translations for shop settings.\r\n  shopSettingsTranslate(\r\n    # Fields required to update shop settings translations.\r\n    input: ShopSettingsTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ShopSettingsTranslate\r\n  # Update the shop's address. If the `null` value is passed, the currently selected address will be deleted.\r\n  shopAddressUpdate(\r\n    # Fields required to update shop address.\r\n    input: AddressInput\r\n  ): ShopAddressUpdate\r\n  # Update shop order settings.\r\n  orderSettingsUpdate(\r\n    # Fields required to update shop order settings.\r\n    input: OrderSettingsUpdateInput!\r\n  ): OrderSettingsUpdate\r\n  # Manage shipping method's availability in channels.\r\n  shippingMethodChannelListingUpdate(\r\n    # ID of a shipping method to update.\r\n    id: ID!\r\n    # Fields required to update shipping method channel listings.\r\n    input: ShippingMethodChannelListingInput!\r\n  ): ShippingMethodChannelListingUpdate\r\n  # Creates a new shipping price.\r\n  shippingPriceCreate(\r\n    # Fields required to create a shipping price.\r\n    input: ShippingPriceInput!\r\n  ): ShippingPriceCreate\r\n  # Deletes a shipping price.\r\n  shippingPriceDelete(\r\n    # ID of a shipping price to delete.\r\n    id: ID!\r\n  ): ShippingPriceDelete\r\n  # Deletes shipping prices.\r\n  shippingPriceBulkDelete(\r\n    # List of shipping price IDs to delete.\r\n    ids: [ID]!\r\n  ): ShippingPriceBulkDelete\r\n  # Updates a new shipping price.\r\n  shippingPriceUpdate(\r\n    # ID of a shipping price to update.\r\n    id: ID!\r\n    # Fields required to update a shipping price.\r\n    input: ShippingPriceInput!\r\n  ): ShippingPriceUpdate\r\n  # Creates/updates translations for a shipping method.\r\n  shippingPriceTranslate(\r\n    # ShippingMethod ID or ShippingMethodTranslatableContent ID.\r\n    id: ID!\r\n    input: ShippingPriceTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ShippingPriceTranslate\r\n  # Exclude products from shipping price.\r\n  shippingPriceExcludeProducts(\r\n    # ID of a shipping price.\r\n    id: ID!\r\n    # Exclude products input.\r\n    input: ShippingPriceExcludeProductsInput!\r\n  ): ShippingPriceExcludeProducts\r\n  # Remove product from excluded list for shipping price.\r\n  shippingPriceRemoveProductFromExclude(\r\n    # ID of a shipping price.\r\n    id: ID!\r\n    # List of products which will be removed from excluded list.\r\n    products: [ID]!\r\n  ): ShippingPriceRemoveProductFromExclude\r\n  # Creates a new shipping zone.\r\n  shippingZoneCreate(\r\n    # Fields required to create a shipping zone.\r\n    input: ShippingZoneCreateInput!\r\n  ): ShippingZoneCreate\r\n  # Deletes a shipping zone.\r\n  shippingZoneDelete(\r\n    # ID of a shipping zone to delete.\r\n    id: ID!\r\n  ): ShippingZoneDelete\r\n  # Deletes shipping zones.\r\n  shippingZoneBulkDelete(\r\n    # List of shipping zone IDs to delete.\r\n    ids: [ID]!\r\n  ): ShippingZoneBulkDelete\r\n  # Updates a new shipping zone.\r\n  shippingZoneUpdate(\r\n    # ID of a shipping zone to update.\r\n    id: ID!\r\n    # Fields required to update a shipping zone.\r\n    input: ShippingZoneUpdateInput!\r\n  ): ShippingZoneUpdate\r\n  # Assign attributes to a given product type.\r\n  productAttributeAssign(\r\n    # The operations to perform.\r\n    operations: [ProductAttributeAssignInput]!\r\n    # ID of the product type to assign the attributes into.\r\n    productTypeId: ID!\r\n  ): ProductAttributeAssign\r\n  # Un-assign attributes from a given product type.\r\n  productAttributeUnassign(\r\n    # The IDs of the attributes to unassign.\r\n    attributeIds: [ID]!\r\n    # ID of the product type from which the attributes should be unassigned.\r\n    productTypeId: ID!\r\n  ): ProductAttributeUnassign\r\n  # Creates a new category.\r\n  categoryCreate(\r\n    # Fields required to create a category.\r\n    input: CategoryInput!\r\n    # ID of the parent category. If empty, category will be top level category.\r\n    parent: ID\r\n  ): CategoryCreate\r\n  # Deletes a category.\r\n  categoryDelete(\r\n    # ID of a category to delete.\r\n    id: ID!\r\n  ): CategoryDelete\r\n  # Deletes categories.\r\n  categoryBulkDelete(\r\n    # List of category IDs to delete.\r\n    ids: [ID]!\r\n  ): CategoryBulkDelete\r\n  # Updates a category.\r\n  categoryUpdate(\r\n    # ID of a category to update.\r\n    id: ID!\r\n    # Fields required to update a category.\r\n    input: CategoryInput!\r\n  ): CategoryUpdate\r\n  # Creates/updates translations for a category.\r\n  categoryTranslate(\r\n    # Category ID or CategoryTranslatableContent ID.\r\n    id: ID!\r\n    input: TranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): CategoryTranslate\r\n  # Adds products to a collection.\r\n  collectionAddProducts(\r\n    # ID of a collection.\r\n    collectionId: ID!\r\n    # List of product IDs.\r\n    products: [ID]!\r\n  ): CollectionAddProducts\r\n  # Creates a new collection.\r\n  collectionCreate(\r\n    # Fields required to create a collection.\r\n    input: CollectionCreateInput!\r\n  ): CollectionCreate\r\n  # Deletes a collection.\r\n  collectionDelete(\r\n    # ID of a collection to delete.\r\n    id: ID!\r\n  ): CollectionDelete\r\n  # Reorder the products of a collection.\r\n  collectionReorderProducts(\r\n    # ID of a collection.\r\n    collectionId: ID!\r\n    # The collection products position operations.\r\n    moves: [MoveProductInput]!\r\n  ): CollectionReorderProducts\r\n  # Deletes collections.\r\n  collectionBulkDelete(\r\n    # List of collection IDs to delete.\r\n    ids: [ID]!\r\n  ): CollectionBulkDelete\r\n  # Remove products from a collection.\r\n  collectionRemoveProducts(\r\n    # ID of a collection.\r\n    collectionId: ID!\r\n    # List of product IDs.\r\n    products: [ID]!\r\n  ): CollectionRemoveProducts\r\n  # Updates a collection.\r\n  collectionUpdate(\r\n    # ID of a collection to update.\r\n    id: ID!\r\n    # Fields required to update a collection.\r\n    input: CollectionInput!\r\n  ): CollectionUpdate\r\n  # Creates/updates translations for a collection.\r\n  collectionTranslate(\r\n    # Collection ID or CollectionTranslatableContent ID.\r\n    id: ID!\r\n    input: TranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): CollectionTranslate\r\n  # Manage collection's availability in channels.\r\n  collectionChannelListingUpdate(\r\n    # ID of a collection to update.\r\n    id: ID!\r\n    # Fields required to create or update collection channel listings.\r\n    input: CollectionChannelListingUpdateInput!\r\n  ): CollectionChannelListingUpdate\r\n  # Creates a new product.\r\n  productCreate(\r\n    # Fields required to create a product.\r\n    input: ProductCreateInput!\r\n  ): ProductCreate\r\n  # Deletes a product.\r\n  productDelete(\r\n    # ID of a product to delete.\r\n    id: ID!\r\n  ): ProductDelete\r\n  # Deletes products.\r\n  productBulkDelete(\r\n    # List of product IDs to delete.\r\n    ids: [ID]!\r\n  ): ProductBulkDelete\r\n  # Updates an existing product.\r\n  productUpdate(\r\n    # ID of a product to update.\r\n    id: ID!\r\n    # Fields required to update a product.\r\n    input: ProductInput!\r\n  ): ProductUpdate\r\n  # Creates/updates translations for a product.\r\n  productTranslate(\r\n    # Product ID or ProductTranslatableContent ID.\r\n    id: ID!\r\n    input: TranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ProductTranslate\r\n  # Manage product's availability in channels.\r\n  productChannelListingUpdate(\r\n    # ID of a product to update.\r\n    id: ID!\r\n    # Fields required to create or update product channel listings.\r\n    input: ProductChannelListingUpdateInput!\r\n  ): ProductChannelListingUpdate\r\n  # Create a media object (image or video URL) associated with product. For image, this mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\n  productMediaCreate(\r\n    # Fields required to create a product media.\r\n    input: ProductMediaCreateInput!\r\n  ): ProductMediaCreate\r\n  # Reorder the variants of a product. Mutation updates updated_at on product and triggers PRODUCT_UPDATED webhook.\r\n  productVariantReorder(\r\n    # The list of variant reordering operations.\r\n    moves: [ReorderInput]!\r\n    # Id of product that variants order will be altered.\r\n    productId: ID!\r\n  ): ProductVariantReorder\r\n  # Deletes a product media.\r\n  productMediaDelete(\r\n    # ID of a product media to delete.\r\n    id: ID!\r\n  ): ProductMediaDelete\r\n  # Deletes product media.\r\n  productMediaBulkDelete(\r\n    # List of product media IDs to delete.\r\n    ids: [ID]!\r\n  ): ProductMediaBulkDelete\r\n  # Changes ordering of the product media.\r\n  productMediaReorder(\r\n    # IDs of a product media in the desired order.\r\n    mediaIds: [ID]!\r\n    # ID of product that media order will be altered.\r\n    productId: ID!\r\n  ): ProductMediaReorder\r\n  # Updates a product media.\r\n  productMediaUpdate(\r\n    # ID of a product media to update.\r\n    id: ID!\r\n    # Fields required to update a product media.\r\n    input: ProductMediaUpdateInput!\r\n  ): ProductMediaUpdate\r\n  # Creates a new product type.\r\n  productTypeCreate(\r\n    # Fields required to create a product type.\r\n    input: ProductTypeInput!\r\n  ): ProductTypeCreate\r\n  # Deletes a product type.\r\n  productTypeDelete(\r\n    # ID of a product type to delete.\r\n    id: ID!\r\n  ): ProductTypeDelete\r\n  # Deletes product types.\r\n  productTypeBulkDelete(\r\n    # List of product type IDs to delete.\r\n    ids: [ID]!\r\n  ): ProductTypeBulkDelete\r\n  # Updates an existing product type.\r\n  productTypeUpdate(\r\n    # ID of a product type to update.\r\n    id: ID!\r\n    # Fields required to update a product type.\r\n    input: ProductTypeInput!\r\n  ): ProductTypeUpdate\r\n  # Reorder the attributes of a product type.\r\n  productTypeReorderAttributes(\r\n    # The list of attribute reordering operations.\r\n    moves: [ReorderInput]!\r\n    # ID of a product type.\r\n    productTypeId: ID!\r\n    # The attribute type to reorder.\r\n    type: ProductAttributeType!\r\n  ): ProductTypeReorderAttributes\r\n  # Reorder product attribute values.\r\n  productReorderAttributeValues(\r\n    # ID of an attribute.\r\n    attributeId: ID!\r\n    # The list of reordering operations for given attribute values.\r\n    moves: [ReorderInput]!\r\n    # ID of a product.\r\n    productId: ID!\r\n  ): ProductReorderAttributeValues\r\n  # Create new digital content. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\n  digitalContentCreate(\r\n    # Fields required to create a digital content.\r\n    input: DigitalContentUploadInput!\r\n    # ID of a product variant to upload digital content.\r\n    variantId: ID!\r\n  ): DigitalContentCreate\r\n  # Remove digital content assigned to given variant.\r\n  digitalContentDelete(\r\n    # ID of a product variant with digital content to remove.\r\n    variantId: ID!\r\n  ): DigitalContentDelete\r\n  # Update digital content.\r\n  digitalContentUpdate(\r\n    # Fields required to update a digital content.\r\n    input: DigitalContentInput!\r\n    # ID of a product variant with digital content to update.\r\n    variantId: ID!\r\n  ): DigitalContentUpdate\r\n  # Generate new URL to digital content.\r\n  digitalContentUrlCreate(\r\n    # Fields required to create a new url.\r\n    input: DigitalContentUrlCreateInput!\r\n  ): DigitalContentUrlCreate\r\n  # Creates a new variant for a product.\r\n  productVariantCreate(\r\n    # Fields required to create a product variant.\r\n    input: ProductVariantCreateInput!\r\n  ): ProductVariantCreate\r\n  # Deletes a product variant.\r\n  productVariantDelete(\r\n    # ID of a product variant to delete.\r\n    id: ID!\r\n  ): ProductVariantDelete\r\n  # Creates product variants for a given product.\r\n  productVariantBulkCreate(\r\n    # ID of the product to create the variants for.\r\n    product: ID!\r\n    # Input list of product variants to create.\r\n    variants: [ProductVariantBulkCreateInput]!\r\n  ): ProductVariantBulkCreate\r\n  # Deletes product variants.\r\n  productVariantBulkDelete(\r\n    # List of product variant IDs to delete.\r\n    ids: [ID]!\r\n  ): ProductVariantBulkDelete\r\n  # Creates stocks for product variant.\r\n  productVariantStocksCreate(\r\n    # Input list of stocks to create.\r\n    stocks: [StockInput!]!\r\n    # ID of a product variant for which stocks will be created.\r\n    variantId: ID!\r\n  ): ProductVariantStocksCreate\r\n  # Delete stocks from product variant.\r\n  productVariantStocksDelete(\r\n    # ID of product variant for which stocks will be deleted.\r\n    variantId: ID!\r\n    warehouseIds: [ID!]\r\n  ): ProductVariantStocksDelete\r\n  # Update stocks for product variant.\r\n  productVariantStocksUpdate(\r\n    # Input list of stocks to create.\r\n    stocks: [StockInput!]!\r\n    # ID of a product variant for which stocks will be created.\r\n    variantId: ID!\r\n  ): ProductVariantStocksUpdate\r\n  # Updates an existing variant for product.\r\n  productVariantUpdate(\r\n    # ID of a product variant to update.\r\n    id: ID!\r\n    # Fields required to update a product variant.\r\n    input: ProductVariantInput!\r\n  ): ProductVariantUpdate\r\n  # Set default variant for a product. Mutation triggers PRODUCT_UPDATED webhook.\r\n  productVariantSetDefault(\r\n    # Id of a product that will have the default variant set.\r\n    productId: ID!\r\n    # Id of a variant that will be set as default.\r\n    variantId: ID!\r\n  ): ProductVariantSetDefault\r\n  # Creates/updates translations for a product variant.\r\n  productVariantTranslate(\r\n    # ProductVariant ID or ProductVariantTranslatableContent ID.\r\n    id: ID!\r\n    input: NameTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ProductVariantTranslate\r\n  # Manage product variant prices in channels.\r\n  productVariantChannelListingUpdate(\r\n    # ID of a product variant to update.\r\n    id: ID!\r\n    # ('List of fields required to create or upgrade product variant ', 'channel listings.')\r\n    input: [ProductVariantChannelListingAddInput!]!\r\n  ): ProductVariantChannelListingUpdate\r\n  # Reorder product variant attribute values.\r\n  productVariantReorderAttributeValues(\r\n    # ID of an attribute.\r\n    attributeId: ID!\r\n    # The list of reordering operations for given attribute values.\r\n    moves: [ReorderInput]!\r\n    # ID of a product variant.\r\n    variantId: ID!\r\n  ): ProductVariantReorderAttributeValues\r\n  # Assign an media to a product variant.\r\n  variantMediaAssign(\r\n    # ID of a product media to assign to a variant.\r\n    mediaId: ID!\r\n    # ID of a product variant.\r\n    variantId: ID!\r\n  ): VariantMediaAssign\r\n  # Unassign an media from a product variant.\r\n  variantMediaUnassign(\r\n    # ID of a product media to unassign from a variant.\r\n    mediaId: ID!\r\n    # ID of a product variant.\r\n    variantId: ID!\r\n  ): VariantMediaUnassign\r\n  # Captures the authorized payment amount.\r\n  paymentCapture(\r\n    # Transaction amount.\r\n    amount: PositiveDecimal\r\n    # Payment ID.\r\n    paymentId: ID!\r\n  ): PaymentCapture\r\n  # Refunds the captured payment amount.\r\n  paymentRefund(\r\n    # Transaction amount.\r\n    amount: PositiveDecimal\r\n    # Payment ID.\r\n    paymentId: ID!\r\n  ): PaymentRefund\r\n  # Voids the authorized payment.\r\n  paymentVoid(\r\n    # Payment ID.\r\n    paymentId: ID!\r\n  ): PaymentVoid\r\n  # Initializes payment process when it is required by gateway.\r\n  paymentInitialize(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # A gateway name used to initialize the payment.\r\n    gateway: String!\r\n    # Client-side generated data required to initialize the payment.\r\n    paymentData: JSONString\r\n  ): PaymentInitialize\r\n  # Creates a new page.\r\n  pageCreate(\r\n    # Fields required to create a page.\r\n    input: PageCreateInput!\r\n  ): PageCreate\r\n  # Deletes a page.\r\n  pageDelete(\r\n    # ID of a page to delete.\r\n    id: ID!\r\n  ): PageDelete\r\n  # Deletes pages.\r\n  pageBulkDelete(\r\n    # List of page IDs to delete.\r\n    ids: [ID]!\r\n  ): PageBulkDelete\r\n  # Publish pages.\r\n  pageBulkPublish(\r\n    # List of page IDs to (un)publish.\r\n    ids: [ID]!\r\n    # Determine if pages will be published or not.\r\n    isPublished: Boolean!\r\n  ): PageBulkPublish\r\n  # Updates an existing page.\r\n  pageUpdate(\r\n    # ID of a page to update.\r\n    id: ID!\r\n    # Fields required to update a page.\r\n    input: PageInput!\r\n  ): PageUpdate\r\n  # Creates/updates translations for a page.\r\n  pageTranslate(\r\n    # Page ID or PageTranslatableContent ID.\r\n    id: ID!\r\n    input: PageTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): PageTranslate\r\n  # Create a new page type.\r\n  pageTypeCreate(\r\n    # Fields required to create page type.\r\n    input: PageTypeCreateInput!\r\n  ): PageTypeCreate\r\n  # Update page type.\r\n  pageTypeUpdate(\r\n    # ID of the page type to update.\r\n    id: ID\r\n    # Fields required to update page type.\r\n    input: PageTypeUpdateInput!\r\n  ): PageTypeUpdate\r\n  # Delete a page type.\r\n  pageTypeDelete(\r\n    # ID of the page type to delete.\r\n    id: ID!\r\n  ): PageTypeDelete\r\n  # Delete page types.\r\n  pageTypeBulkDelete(\r\n    # List of page type IDs to delete\r\n    ids: [ID!]!\r\n  ): PageTypeBulkDelete\r\n  # Assign attributes to a given page type.\r\n  pageAttributeAssign(\r\n    # The IDs of the attributes to assign.\r\n    attributeIds: [ID!]!\r\n    # ID of the page type to assign the attributes into.\r\n    pageTypeId: ID!\r\n  ): PageAttributeAssign\r\n  # Unassign attributes from a given page type.\r\n  pageAttributeUnassign(\r\n    # The IDs of the attributes to unassign.\r\n    attributeIds: [ID!]!\r\n    # ID of the page type from which the attributes should be unassign.\r\n    pageTypeId: ID!\r\n  ): PageAttributeUnassign\r\n  # Reorder the attributes of a page type.\r\n  pageTypeReorderAttributes(\r\n    # The list of attribute reordering operations.\r\n    moves: [ReorderInput!]!\r\n    # ID of a page type.\r\n    pageTypeId: ID!\r\n  ): PageTypeReorderAttributes\r\n  # Reorder page attribute values.\r\n  pageReorderAttributeValues(\r\n    # ID of an attribute.\r\n    attributeId: ID!\r\n    # The list of reordering operations for given attribute values.\r\n    moves: [ReorderInput]!\r\n    # ID of a page.\r\n    pageId: ID!\r\n  ): PageReorderAttributeValues\r\n  # Completes creating an order.\r\n  draftOrderComplete(\r\n    # ID of the order that will be completed.\r\n    id: ID!\r\n  ): DraftOrderComplete\r\n  # Creates a new draft order.\r\n  draftOrderCreate(\r\n    # Fields required to create an order.\r\n    input: DraftOrderCreateInput!\r\n  ): DraftOrderCreate\r\n  # Deletes a draft order.\r\n  draftOrderDelete(\r\n    # ID of a draft order to delete.\r\n    id: ID!\r\n  ): DraftOrderDelete\r\n  # Deletes draft orders.\r\n  draftOrderBulkDelete(\r\n    # List of draft order IDs to delete.\r\n    ids: [ID]!\r\n  ): DraftOrderBulkDelete\r\n  # Deletes order lines.\r\n  draftOrderLinesBulkDelete(\r\n    # List of order lines IDs to delete.\r\n    ids: [ID]!\r\n  ): DraftOrderLinesBulkDelete\r\n  # Updates a draft order.\r\n  draftOrderUpdate(\r\n    # ID of a draft order to update.\r\n    id: ID!\r\n    # Fields required to update an order.\r\n    input: DraftOrderInput!\r\n  ): DraftOrderUpdate\r\n  # Adds note to the order.\r\n  orderAddNote(\r\n    # ID of the order to add a note for.\r\n    order: ID!\r\n    # Fields required to create a note for the order.\r\n    input: OrderAddNoteInput!\r\n  ): OrderAddNote\r\n  # Cancel an order.\r\n  orderCancel(\r\n    # ID of the order to cancel.\r\n    id: ID!\r\n  ): OrderCancel\r\n  # Capture an order.\r\n  orderCapture(\r\n    # Amount of money to capture.\r\n    amount: PositiveDecimal!\r\n    # ID of the order to capture.\r\n    id: ID!\r\n  ): OrderCapture\r\n  # Confirms an unconfirmed order by changing status to unfulfilled.\r\n  orderConfirm(\r\n    # ID of an order to confirm.\r\n    id: ID!\r\n  ): OrderConfirm\r\n  # Creates new fulfillments for an order.\r\n  orderFulfill(\r\n    # Fields required to create an fulfillment.\r\n    input: OrderFulfillInput!\r\n    # ID of the order to be fulfilled.\r\n    order: ID\r\n  ): OrderFulfill\r\n  # Cancels existing fulfillment and optionally restocks items.\r\n  orderFulfillmentCancel(\r\n    # ID of an fulfillment to cancel.\r\n    id: ID!\r\n    # Fields required to cancel an fulfillment.\r\n    input: FulfillmentCancelInput!\r\n  ): FulfillmentCancel\r\n  # Updates a fulfillment for an order.\r\n  orderFulfillmentUpdateTracking(\r\n    # ID of an fulfillment to update.\r\n    id: ID!\r\n    # Fields required to update an fulfillment.\r\n    input: FulfillmentUpdateTrackingInput!\r\n  ): FulfillmentUpdateTracking\r\n  # Refund products.\r\n  orderFulfillmentRefundProducts(\r\n    # Fields required to create an refund fulfillment.\r\n    input: OrderRefundProductsInput!\r\n    # ID of the order to be refunded.\r\n    order: ID!\r\n  ): FulfillmentRefundProducts\r\n  # Return products.\r\n  orderFulfillmentReturnProducts(\r\n    # Fields required to return products.\r\n    input: OrderReturnProductsInput!\r\n    # ID of the order to be returned.\r\n    order: ID!\r\n  ): FulfillmentReturnProducts\r\n  # Create order lines for an order.\r\n  orderLinesCreate(\r\n    # ID of the order to add the lines to.\r\n    id: ID!\r\n    # Fields required to add order lines.\r\n    input: [OrderLineCreateInput]!\r\n  ): OrderLinesCreate\r\n  # Deletes an order line from an order.\r\n  orderLineDelete(\r\n    # ID of the order line to delete.\r\n    id: ID!\r\n  ): OrderLineDelete\r\n  # Updates an order line of an order.\r\n  orderLineUpdate(\r\n    # ID of the order line to update.\r\n    id: ID!\r\n    # Fields required to update an order line.\r\n    input: OrderLineInput!\r\n  ): OrderLineUpdate\r\n  # Adds discount to the order.\r\n  orderDiscountAdd(\r\n    # Fields required to create a discount for the order.\r\n    input: OrderDiscountCommonInput!\r\n    # ID of an order to discount.\r\n    orderId: ID!\r\n  ): OrderDiscountAdd\r\n  # Update discount for the order.\r\n  orderDiscountUpdate(\r\n    # ID of a discount to update.\r\n    discountId: ID!\r\n    # Fields required to update a discount for the order.\r\n    input: OrderDiscountCommonInput!\r\n  ): OrderDiscountUpdate\r\n  # Remove discount from the order.\r\n  orderDiscountDelete(\r\n    # ID of a discount to remove.\r\n    discountId: ID!\r\n  ): OrderDiscountDelete\r\n  # Update discount for the order line.\r\n  orderLineDiscountUpdate(\r\n    # Fields required to update price for the order line.\r\n    input: OrderDiscountCommonInput!\r\n    # ID of a order line to update price\r\n    orderLineId: ID!\r\n  ): OrderLineDiscountUpdate\r\n  # Remove discount applied to the order line.\r\n  orderLineDiscountRemove(\r\n    # ID of a order line to remove its discount\r\n    orderLineId: ID!\r\n  ): OrderLineDiscountRemove\r\n  # Mark order as manually paid.\r\n  orderMarkAsPaid(\r\n    # ID of the order to mark paid.\r\n    id: ID!\r\n    # The external transaction reference.\r\n    transactionReference: String\r\n  ): OrderMarkAsPaid\r\n  # Refund an order.\r\n  orderRefund(\r\n    # Amount of money to refund.\r\n    amount: PositiveDecimal!\r\n    # ID of the order to refund.\r\n    id: ID!\r\n  ): OrderRefund\r\n  # Updates an order.\r\n  orderUpdate(\r\n    # ID of an order to update.\r\n    id: ID!\r\n    # Fields required to update an order.\r\n    input: OrderUpdateInput!\r\n  ): OrderUpdate\r\n  # Updates a shipping method of the order.\r\n  orderUpdateShipping(\r\n    # ID of the order to update a shipping method.\r\n    order: ID!\r\n    # Fields required to change shipping method of the order.\r\n    input: OrderUpdateShippingInput\r\n  ): OrderUpdateShipping\r\n  # Void an order.\r\n  orderVoid(\r\n    # ID of the order to void.\r\n    id: ID!\r\n  ): OrderVoid\r\n  # Cancels orders.\r\n  orderBulkCancel(\r\n    # List of orders IDs to cancel.\r\n    ids: [ID]!\r\n  ): OrderBulkCancel\r\n  # Delete metadata of an object.\r\n  deleteMetadata(\r\n    # ID of an object to update.\r\n    id: ID!\r\n    # Metadata keys to delete.\r\n    keys: [String!]!\r\n  ): DeleteMetadata\r\n  # Delete object's private metadata.\r\n  deletePrivateMetadata(\r\n    # ID of an object to update.\r\n    id: ID!\r\n    # Metadata keys to delete.\r\n    keys: [String!]!\r\n  ): DeletePrivateMetadata\r\n  # Updates metadata of an object.\r\n  updateMetadata(\r\n    # ID of an object to update.\r\n    id: ID!\r\n    # Fields required to update the object's metadata.\r\n    input: [MetadataInput!]!\r\n  ): UpdateMetadata\r\n  # Updates private metadata of an object.\r\n  updatePrivateMetadata(\r\n    # ID of an object to update.\r\n    id: ID!\r\n    # Fields required to update the object's metadata.\r\n    input: [MetadataInput!]!\r\n  ): UpdatePrivateMetadata\r\n  # Assigns storefront's navigation menus.\r\n  assignNavigation(\r\n    # ID of the menu.\r\n    menu: ID\r\n    # Type of the navigation bar to assign the menu to.\r\n    navigationType: NavigationType!\r\n  ): AssignNavigation\r\n  # Creates a new Menu.\r\n  menuCreate(\r\n    # Fields required to create a menu.\r\n    input: MenuCreateInput!\r\n  ): MenuCreate\r\n  # Deletes a menu.\r\n  menuDelete(\r\n    # ID of a menu to delete.\r\n    id: ID!\r\n  ): MenuDelete\r\n  # Deletes menus.\r\n  menuBulkDelete(\r\n    # List of menu IDs to delete.\r\n    ids: [ID]!\r\n  ): MenuBulkDelete\r\n  # Updates a menu.\r\n  menuUpdate(\r\n    # ID of a menu to update.\r\n    id: ID!\r\n    # Fields required to update a menu.\r\n    input: MenuInput!\r\n  ): MenuUpdate\r\n  # Creates a new menu item.\r\n  menuItemCreate(\r\n    # Fields required to update a menu item. Only one of `url`, `category`, `page`, `collection` is allowed per item.\r\n    input: MenuItemCreateInput!\r\n  ): MenuItemCreate\r\n  # Deletes a menu item.\r\n  menuItemDelete(\r\n    # ID of a menu item to delete.\r\n    id: ID!\r\n  ): MenuItemDelete\r\n  # Deletes menu items.\r\n  menuItemBulkDelete(\r\n    # List of menu item IDs to delete.\r\n    ids: [ID]!\r\n  ): MenuItemBulkDelete\r\n  # Updates a menu item.\r\n  menuItemUpdate(\r\n    # ID of a menu item to update.\r\n    id: ID!\r\n    # Fields required to update a menu item. Only one of `url`, `category`, `page`, `collection` is allowed per item.\r\n    input: MenuItemInput!\r\n  ): MenuItemUpdate\r\n  # Creates/updates translations for a menu item.\r\n  menuItemTranslate(\r\n    # MenuItem ID or MenuItemTranslatableContent ID.\r\n    id: ID!\r\n    input: NameTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): MenuItemTranslate\r\n  # Moves items of menus.\r\n  menuItemMove(\r\n    # ID of the menu.\r\n    menu: ID!\r\n    # The menu position data.\r\n    moves: [MenuItemMoveInput]!\r\n  ): MenuItemMove\r\n  # Request an invoice for the order using plugin.\r\n  invoiceRequest(\r\n    # Invoice number, if not provided it will be generated.\r\n    number: String\r\n    # ID of the order related to invoice.\r\n    orderId: ID!\r\n  ): InvoiceRequest\r\n  # Requests deletion of an invoice.\r\n  invoiceRequestDelete(\r\n    # ID of an invoice to request the deletion.\r\n    id: ID!\r\n  ): InvoiceRequestDelete\r\n  # Creates a ready to send invoice.\r\n  invoiceCreate(\r\n    # Fields required when creating an invoice.\r\n    input: InvoiceCreateInput!\r\n    # ID of the order related to invoice.\r\n    orderId: ID!\r\n  ): InvoiceCreate\r\n  # Deletes an invoice.\r\n  invoiceDelete(\r\n    # ID of an invoice to delete.\r\n    id: ID!\r\n  ): InvoiceDelete\r\n  # Updates an invoice.\r\n  invoiceUpdate(\r\n    # ID of an invoice to update.\r\n    id: ID!\r\n    # Fields to use when updating an invoice.\r\n    input: UpdateInvoiceInput!\r\n  ): InvoiceUpdate\r\n  # Send an invoice notification to the customer.\r\n  invoiceSendNotification(\r\n    # ID of an invoice to be sent.\r\n    id: ID!\r\n  ): InvoiceSendNotification\r\n  # Activate a gift card.\r\n  giftCardActivate(\r\n    # ID of a gift card to activate.\r\n    id: ID!\r\n  ): GiftCardActivate\r\n  # Creates a new gift card.\r\n  giftCardCreate(\r\n    # Fields required to create a gift card.\r\n    input: GiftCardCreateInput!\r\n  ): GiftCardCreate\r\n  # Deactivate a gift card.\r\n  giftCardDeactivate(\r\n    # ID of a gift card to deactivate.\r\n    id: ID!\r\n  ): GiftCardDeactivate\r\n  # Update a gift card.\r\n  giftCardUpdate(\r\n    # ID of a gift card to update.\r\n    id: ID!\r\n    # Fields required to update a gift card.\r\n    input: GiftCardUpdateInput!\r\n  ): GiftCardUpdate\r\n  # Update plugin configuration.\r\n  pluginUpdate(\r\n    # ID of a channel for which the data should be modified.\r\n    channelId: ID\r\n    # ID of plugin to update.\r\n    id: ID!\r\n    # Fields required to update a plugin configuration.\r\n    input: PluginUpdateInput!\r\n  ): PluginUpdate\r\n  # Creates a new sale.\r\n  saleCreate(\r\n    # Fields required to create a sale.\r\n    input: SaleInput!\r\n  ): SaleCreate\r\n  # Deletes a sale.\r\n  saleDelete(\r\n    # ID of a sale to delete.\r\n    id: ID!\r\n  ): SaleDelete\r\n  # Deletes sales.\r\n  saleBulkDelete(\r\n    # List of sale IDs to delete.\r\n    ids: [ID]!\r\n  ): SaleBulkDelete\r\n  # Updates a sale.\r\n  saleUpdate(\r\n    # ID of a sale to update.\r\n    id: ID!\r\n    # Fields required to update a sale.\r\n    input: SaleInput!\r\n  ): SaleUpdate\r\n  # Adds products, categories, collections to a voucher.\r\n  saleCataloguesAdd(\r\n    # ID of a sale.\r\n    id: ID!\r\n    # Fields required to modify catalogue IDs of sale.\r\n    input: CatalogueInput!\r\n  ): SaleAddCatalogues\r\n  # Removes products, categories, collections from a sale.\r\n  saleCataloguesRemove(\r\n    # ID of a sale.\r\n    id: ID!\r\n    # Fields required to modify catalogue IDs of sale.\r\n    input: CatalogueInput!\r\n  ): SaleRemoveCatalogues\r\n  # Creates/updates translations for a sale.\r\n  saleTranslate(\r\n    # Sale ID or SaleTranslatableContent ID.\r\n    id: ID!\r\n    input: NameTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): SaleTranslate\r\n  # Manage sale's availability in channels.\r\n  saleChannelListingUpdate(\r\n    # ID of a sale to update.\r\n    id: ID!\r\n    # Fields required to update sale channel listings.\r\n    input: SaleChannelListingInput!\r\n  ): SaleChannelListingUpdate\r\n  # Creates a new voucher.\r\n  voucherCreate(\r\n    # Fields required to create a voucher.\r\n    input: VoucherInput!\r\n  ): VoucherCreate\r\n  # Deletes a voucher.\r\n  voucherDelete(\r\n    # ID of a voucher to delete.\r\n    id: ID!\r\n  ): VoucherDelete\r\n  # Deletes vouchers.\r\n  voucherBulkDelete(\r\n    # List of voucher IDs to delete.\r\n    ids: [ID]!\r\n  ): VoucherBulkDelete\r\n  # Updates a voucher.\r\n  voucherUpdate(\r\n    # ID of a voucher to update.\r\n    id: ID!\r\n    # Fields required to update a voucher.\r\n    input: VoucherInput!\r\n  ): VoucherUpdate\r\n  # Adds products, categories, collections to a voucher.\r\n  voucherCataloguesAdd(\r\n    # ID of a voucher.\r\n    id: ID!\r\n    # Fields required to modify catalogue IDs of voucher.\r\n    input: CatalogueInput!\r\n  ): VoucherAddCatalogues\r\n  # Removes products, categories, collections from a voucher.\r\n  voucherCataloguesRemove(\r\n    # ID of a voucher.\r\n    id: ID!\r\n    # Fields required to modify catalogue IDs of voucher.\r\n    input: CatalogueInput!\r\n  ): VoucherRemoveCatalogues\r\n  # Creates/updates translations for a voucher.\r\n  voucherTranslate(\r\n    # Voucher ID or VoucherTranslatableContent ID.\r\n    id: ID!\r\n    input: NameTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): VoucherTranslate\r\n  # Manage voucher's availability in channels.\r\n  voucherChannelListingUpdate(\r\n    # ID of a voucher to update.\r\n    id: ID!\r\n    # Fields required to update voucher channel listings.\r\n    input: VoucherChannelListingInput!\r\n  ): VoucherChannelListingUpdate\r\n  # Export products to csv file.\r\n  exportProducts(\r\n    # Fields required to export product data\r\n    input: ExportProductsInput!\r\n  ): ExportProducts\r\n  # Upload a file. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\n  fileUpload(\r\n    # Represents a file in a multipart request.\r\n    file: Upload!\r\n  ): FileUpload\r\n  # Adds a gift card or a voucher to a checkout.\r\n  checkoutAddPromoCode(\r\n    # Checkout ID. DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # Gift card code or voucher code.\r\n    promoCode: String!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutAddPromoCode\r\n  # Update billing address in the existing checkout.\r\n  checkoutBillingAddressUpdate(\r\n    # The billing address of the checkout.\r\n    billingAddress: AddressInput!\r\n    # ID of the checkout.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutBillingAddressUpdate\r\n  # Completes the checkout. As a result a new order is created and a payment charge is made. This action requires a successful payment before it can be performed. In case additional confirmation step as 3D secure is required confirmationNeeded flag will be set to True and no order created until payment is confirmed with second call of this mutation.\r\n  checkoutComplete(\r\n    # Checkout ID.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # Client-side generated data required to finalize the payment.\r\n    paymentData: JSONString\r\n    # URL of a view where users should be redirected to see the order details. URL in RFC 1808 format.\r\n    redirectUrl: String\r\n    # Determines whether to store the payment source for future usage.\r\n    storeSource: Boolean = false\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutComplete\r\n  # Create a new checkout.\r\n  checkoutCreate(\r\n    # Fields required to create checkout.\r\n    input: CheckoutCreateInput!\r\n  ): CheckoutCreate\r\n  # Sets the customer as the owner of the checkout.\r\n  checkoutCustomerAttach(\r\n    # ID of the checkout.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # ID of customer to attach to checkout. Can be used to attach customer to checkout by staff or app. Requires IMPERSONATE_USER permission.\r\n    customerId: ID\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutCustomerAttach\r\n  # Removes the user assigned as the owner of the checkout.\r\n  checkoutCustomerDetach(\r\n    # Checkout ID.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutCustomerDetach\r\n  # Updates email address in the existing checkout object.\r\n  checkoutEmailUpdate(\r\n    # Checkout ID.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # email.\r\n    email: String!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutEmailUpdate\r\n  # Deletes a CheckoutLine.\r\n  checkoutLineDelete(\r\n    # The ID of the checkout.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # ID of the checkout line to delete.\r\n    lineId: ID\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutLineDelete\r\n  # Adds a checkout line to the existing checkout.If line was already in checkout, its quantity will be increased.\r\n  checkoutLinesAdd(\r\n    # The ID of the checkout.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # A list of checkout lines, each containing information about an item in the checkout.\r\n    lines: [CheckoutLineInput]!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutLinesAdd\r\n  # Updates checkout line in the existing checkout.\r\n  checkoutLinesUpdate(\r\n    # The ID of the checkout.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # A list of checkout lines, each containing information about an item in the checkout.\r\n    lines: [CheckoutLineInput]!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutLinesUpdate\r\n  # Remove a gift card or a voucher from a checkout.\r\n  checkoutRemovePromoCode(\r\n    # Checkout ID.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # Gift card code or voucher code.\r\n    promoCode: String!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutRemovePromoCode\r\n  # Create a new payment for given checkout.\r\n  checkoutPaymentCreate(\r\n    # Checkout ID.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # Data required to create a new payment.\r\n    input: PaymentInput!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutPaymentCreate\r\n  # Update shipping address in the existing checkout.\r\n  checkoutShippingAddressUpdate(\r\n    # ID of the checkout.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # The mailing address to where the checkout will be shipped.\r\n    shippingAddress: AddressInput!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutShippingAddressUpdate\r\n  # Updates the shipping address of the checkout.\r\n  checkoutShippingMethodUpdate(\r\n    # Checkout ID.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # Shipping method.\r\n    shippingMethodId: ID!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutShippingMethodUpdate\r\n  # Update language code in the existing checkout.\r\n  checkoutLanguageCodeUpdate(\r\n    # ID of the checkout.DEPRECATED: Will be removed in Saleor 4.0. Use token instead.\r\n    checkoutId: ID\r\n    # New language code.\r\n    languageCode: LanguageCodeEnum!\r\n    # Checkout token.\r\n    token: UUID\r\n  ): CheckoutLanguageCodeUpdate\r\n  # Creates new channel.\r\n  channelCreate(\r\n    # Fields required to create channel.\r\n    input: ChannelCreateInput!\r\n  ): ChannelCreate\r\n  # Update a channel.\r\n  channelUpdate(\r\n    # ID of a channel to update.\r\n    id: ID!\r\n    # Fields required to update a channel.\r\n    input: ChannelUpdateInput!\r\n  ): ChannelUpdate\r\n  # Delete a channel. Orders associated with the deleted channel will be moved to the target channel. Checkouts, product availability, and pricing will be removed.\r\n  channelDelete(\r\n    # ID of a channel to delete.\r\n    id: ID!\r\n    # Fields required to delete a channel.\r\n    input: ChannelDeleteInput\r\n  ): ChannelDelete\r\n  # Activate a channel.\r\n  channelActivate(\r\n    # ID of the channel to activate.\r\n    id: ID!\r\n  ): ChannelActivate\r\n  # Deactivate a channel.\r\n  channelDeactivate(\r\n    # ID of the channel to deactivate.\r\n    id: ID!\r\n  ): ChannelDeactivate\r\n  # Creates an attribute.\r\n  attributeCreate(\r\n    # Fields required to create an attribute.\r\n    input: AttributeCreateInput!\r\n  ): AttributeCreate\r\n  # Deletes an attribute.\r\n  attributeDelete(\r\n    # ID of an attribute to delete.\r\n    id: ID!\r\n  ): AttributeDelete\r\n  # Updates attribute.\r\n  attributeUpdate(\r\n    # ID of an attribute to update.\r\n    id: ID!\r\n    # Fields required to update an attribute.\r\n    input: AttributeUpdateInput!\r\n  ): AttributeUpdate\r\n  # Creates/updates translations for an attribute.\r\n  attributeTranslate(\r\n    # Attribute ID or AttributeTranslatableContent ID.\r\n    id: ID!\r\n    input: NameTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): AttributeTranslate\r\n  # Deletes attributes.\r\n  attributeBulkDelete(\r\n    # List of attribute IDs to delete.\r\n    ids: [ID]!\r\n  ): AttributeBulkDelete\r\n  # Deletes values of attributes.\r\n  attributeValueBulkDelete(\r\n    # List of attribute value IDs to delete.\r\n    ids: [ID]!\r\n  ): AttributeValueBulkDelete\r\n  # Creates a value for an attribute.\r\n  attributeValueCreate(\r\n    # Attribute to which value will be assigned.\r\n    attribute: ID!\r\n    # Fields required to create an AttributeValue.\r\n    input: AttributeValueCreateInput!\r\n  ): AttributeValueCreate\r\n  # Deletes a value of an attribute.\r\n  attributeValueDelete(\r\n    # ID of a value to delete.\r\n    id: ID!\r\n  ): AttributeValueDelete\r\n  # Updates value of an attribute.\r\n  attributeValueUpdate(\r\n    # ID of an AttributeValue to update.\r\n    id: ID!\r\n    # Fields required to update an AttributeValue.\r\n    input: AttributeValueCreateInput!\r\n  ): AttributeValueUpdate\r\n  # Creates/updates translations for an attribute value.\r\n  attributeValueTranslate(\r\n    # AttributeValue ID or AttributeValueTranslatableContent ID.\r\n    id: ID!\r\n    input: AttributeValueTranslationInput!\r\n    # Translation language code.\r\n    languageCode: LanguageCodeEnum!\r\n  ): AttributeValueTranslate\r\n  # Reorder the values of an attribute.\r\n  attributeReorderValues(\r\n    # ID of an attribute.\r\n    attributeId: ID!\r\n    # The list of reordering operations for given attribute values.\r\n    moves: [ReorderInput]!\r\n  ): AttributeReorderValues\r\n  # Creates a new app.\r\n  appCreate(\r\n    # Fields required to create a new app.\r\n    input: AppInput!\r\n  ): AppCreate\r\n  # Updates an existing app.\r\n  appUpdate(\r\n    # ID of an app to update.\r\n    id: ID!\r\n    # Fields required to update an existing app.\r\n    input: AppInput!\r\n  ): AppUpdate\r\n  # Deletes an app.\r\n  appDelete(\r\n    # ID of an app to delete.\r\n    id: ID!\r\n  ): AppDelete\r\n  # Creates a new token.\r\n  appTokenCreate(\r\n    # Fields required to create a new auth token.\r\n    input: AppTokenInput!\r\n  ): AppTokenCreate\r\n  # Deletes an authentication token assigned to app.\r\n  appTokenDelete(\r\n    # ID of an auth token to delete.\r\n    id: ID!\r\n  ): AppTokenDelete\r\n  # Verify provided app token.\r\n  appTokenVerify(\r\n    # App token to verify.\r\n    token: String!\r\n  ): AppTokenVerify\r\n  # Install new app by using app manifest.\r\n  appInstall(\r\n    # Fields required to install a new app.\r\n    input: AppInstallInput!\r\n  ): AppInstall\r\n  # Retry failed installation of new app.\r\n  appRetryInstall(\r\n    # Determine if app will be set active or not.\r\n    activateAfterInstallation: Boolean = true\r\n    # ID of failed installation.\r\n    id: ID!\r\n  ): AppRetryInstall\r\n  # Delete failed installation.\r\n  appDeleteFailedInstallation(\r\n    # ID of failed installation to delete.\r\n    id: ID!\r\n  ): AppDeleteFailedInstallation\r\n  # Fetch and validate manifest.\r\n  appFetchManifest(manifestUrl: String!): AppFetchManifest\r\n  # Activate the app.\r\n  appActivate(\r\n    # ID of app to activate.\r\n    id: ID!\r\n  ): AppActivate\r\n  # Deactivate the app.\r\n  appDeactivate(\r\n    # ID of app to deactivate.\r\n    id: ID!\r\n  ): AppDeactivate\r\n  # Create JWT token.\r\n  tokenCreate(\r\n    # Email of a user.\r\n    email: String!\r\n    # Password of a user.\r\n    password: String!\r\n  ): CreateToken\r\n  # Refresh JWT token. Mutation tries to take refreshToken from the input.If it fails it will try to take refreshToken from the http-only cookie -refreshToken. csrfToken is required when refreshToken is provided as a cookie.\r\n  tokenRefresh(\r\n    # CSRF token required to refresh token. This argument is required when refreshToken is provided as a cookie.\r\n    csrfToken: String\r\n    # Refresh token.\r\n    refreshToken: String\r\n  ): RefreshToken\r\n  # Verify JWT token.\r\n  tokenVerify(\r\n    # JWT token to validate.\r\n    token: String!\r\n  ): VerifyToken\r\n  # Deactivate all JWT tokens of the currently authenticated user.\r\n  tokensDeactivateAll: DeactivateAllUserTokens\r\n  # Prepare external authentication url for user by custom plugin.\r\n  externalAuthenticationUrl(\r\n    # The data required by plugin to create external authentication url.\r\n    input: JSONString!\r\n    # The ID of the authentication plugin.\r\n    pluginId: String!\r\n  ): ExternalAuthenticationUrl\r\n  # Obtain external access tokens for user by custom plugin.\r\n  externalObtainAccessTokens(\r\n    # The data required by plugin to create authentication data.\r\n    input: JSONString!\r\n    # The ID of the authentication plugin.\r\n    pluginId: String!\r\n  ): ExternalObtainAccessTokens\r\n  # Refresh user's access by custom plugin.\r\n  externalRefresh(\r\n    # The data required by plugin to proceed the refresh process.\r\n    input: JSONString!\r\n    # The ID of the authentication plugin.\r\n    pluginId: String!\r\n  ): ExternalRefresh\r\n  # Logout user by custom plugin.\r\n  externalLogout(\r\n    # The data required by plugin to proceed the logout process.\r\n    input: JSONString!\r\n    # The ID of the authentication plugin.\r\n    pluginId: String!\r\n  ): ExternalLogout\r\n  # Verify external authentication data by plugin.\r\n  externalVerify(\r\n    # The data required by plugin to proceed the verification.\r\n    input: JSONString!\r\n    # The ID of the authentication plugin.\r\n    pluginId: String!\r\n  ): ExternalVerify\r\n  # Sends an email with the account password modification link.\r\n  requestPasswordReset(\r\n    # Slug of a channel which will be used for notify user. Optional when only one channel exists.\r\n    channel: String\r\n    # Email of the user that will be used for password recovery.\r\n    email: String!\r\n    # URL of a view where users should be redirected to reset the password. URL in RFC 1808 format.\r\n    redirectUrl: String!\r\n  ): RequestPasswordReset\r\n  # Confirm user account with token sent by email during registration.\r\n  confirmAccount(\r\n    # E-mail of the user performing account confirmation.\r\n    email: String!\r\n    # A one-time token required to confirm the account.\r\n    token: String!\r\n  ): ConfirmAccount\r\n  # Sets the user's password from the token sent by email using the RequestPasswordReset mutation.\r\n  setPassword(\r\n    # Email of a user.\r\n    email: String!\r\n    # Password of a user.\r\n    password: String!\r\n    # A one-time token required to set the password.\r\n    token: String!\r\n  ): SetPassword\r\n  # Change the password of the logged in user.\r\n  passwordChange(\r\n    # New user password.\r\n    newPassword: String!\r\n    # Current user password.\r\n    oldPassword: String!\r\n  ): PasswordChange\r\n  # Request email change of the logged in user.\r\n  requestEmailChange(\r\n    # Slug of a channel which will be used to notify users. Optional when only one channel exists.\r\n    channel: String\r\n    # New user email.\r\n    newEmail: String!\r\n    # User password.\r\n    password: String!\r\n    # URL of a view where users should be redirected to update the email address. URL in RFC 1808 format.\r\n    redirectUrl: String!\r\n  ): RequestEmailChange\r\n  # Confirm the email change of the logged-in user.\r\n  confirmEmailChange(\r\n    # Slug of a channel which will be used to notify users. Optional when only one channel exists.\r\n    channel: String\r\n    # A one-time token required to change the email.\r\n    token: String!\r\n  ): ConfirmEmailChange\r\n  # Create a new address for the customer.\r\n  accountAddressCreate(\r\n    # Fields required to create address.\r\n    input: AddressInput!\r\n    # A type of address. If provided, the new address will be automatically assigned as the customer's default address of that type.\r\n    type: AddressTypeEnum\r\n  ): AccountAddressCreate\r\n  # Updates an address of the logged-in user.\r\n  accountAddressUpdate(\r\n    # ID of the address to update.\r\n    id: ID!\r\n    # Fields required to update the address.\r\n    input: AddressInput!\r\n  ): AccountAddressUpdate\r\n  # Delete an address of the logged-in user.\r\n  accountAddressDelete(\r\n    # ID of the address to delete.\r\n    id: ID!\r\n  ): AccountAddressDelete\r\n  # Sets a default address for the authenticated user.\r\n  accountSetDefaultAddress(\r\n    # ID of the address to set as default.\r\n    id: ID!\r\n    # The type of address.\r\n    type: AddressTypeEnum!\r\n  ): AccountSetDefaultAddress\r\n  # Register a new user.\r\n  accountRegister(\r\n    # Fields required to create a user.\r\n    input: AccountRegisterInput!\r\n  ): AccountRegister\r\n  # Updates the account of the logged-in user.\r\n  accountUpdate(\r\n    # Fields required to update the account of the logged-in user.\r\n    input: AccountInput!\r\n  ): AccountUpdate\r\n  # Sends an email with the account removal link for the logged-in user.\r\n  accountRequestDeletion(\r\n    # Slug of a channel which will be used to notify users. Optional when only one channel exists.\r\n    channel: String\r\n    # URL of a view where users should be redirected to delete their account. URL in RFC 1808 format.\r\n    redirectUrl: String!\r\n  ): AccountRequestDeletion\r\n  # Remove user account.\r\n  accountDelete(\r\n    # A one-time token required to remove account. Sent by email using AccountRequestDeletion mutation.\r\n    token: String!\r\n  ): AccountDelete\r\n  # Creates user address.\r\n  addressCreate(\r\n    # Fields required to create address.\r\n    input: AddressInput!\r\n    # ID of a user to create address for.\r\n    userId: ID!\r\n  ): AddressCreate\r\n  # Updates an address.\r\n  addressUpdate(\r\n    # ID of the address to update.\r\n    id: ID!\r\n    # Fields required to update the address.\r\n    input: AddressInput!\r\n  ): AddressUpdate\r\n  # Deletes an address.\r\n  addressDelete(\r\n    # ID of the address to delete.\r\n    id: ID!\r\n  ): AddressDelete\r\n  # Sets a default address for the given user.\r\n  addressSetDefault(\r\n    # ID of the address.\r\n    addressId: ID!\r\n    # The type of address.\r\n    type: AddressTypeEnum!\r\n    # ID of the user to change the address for.\r\n    userId: ID!\r\n  ): AddressSetDefault\r\n  # Creates a new customer.\r\n  customerCreate(\r\n    # Fields required to create a customer.\r\n    input: UserCreateInput!\r\n  ): CustomerCreate\r\n  # Updates an existing customer.\r\n  customerUpdate(\r\n    # ID of a customer to update.\r\n    id: ID!\r\n    # Fields required to update a customer.\r\n    input: CustomerInput!\r\n  ): CustomerUpdate\r\n  # Deletes a customer.\r\n  customerDelete(\r\n    # ID of a customer to delete.\r\n    id: ID!\r\n  ): CustomerDelete\r\n  # Deletes customers.\r\n  customerBulkDelete(\r\n    # List of user IDs to delete.\r\n    ids: [ID]!\r\n  ): CustomerBulkDelete\r\n  # Creates a new staff user.\r\n  staffCreate(\r\n    # Fields required to create a staff user.\r\n    input: StaffCreateInput!\r\n  ): StaffCreate\r\n  # Updates an existing staff user.\r\n  staffUpdate(\r\n    # ID of a staff user to update.\r\n    id: ID!\r\n    # Fields required to update a staff user.\r\n    input: StaffUpdateInput!\r\n  ): StaffUpdate\r\n  # Deletes a staff user.\r\n  staffDelete(\r\n    # ID of a staff user to delete.\r\n    id: ID!\r\n  ): StaffDelete\r\n  # Deletes staff users.\r\n  staffBulkDelete(\r\n    # List of user IDs to delete.\r\n    ids: [ID]!\r\n  ): StaffBulkDelete\r\n  # Create a user avatar. Only for staff members. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\n  userAvatarUpdate(\r\n    # Represents an image file in a multipart request.\r\n    image: Upload!\r\n  ): UserAvatarUpdate\r\n  # Deletes a user avatar. Only for staff members.\r\n  userAvatarDelete: UserAvatarDelete\r\n  # Activate or deactivate users.\r\n  userBulkSetActive(\r\n    # List of user IDs to (de)activate).\r\n    ids: [ID]!\r\n    # Determine if users will be set active or not.\r\n    isActive: Boolean!\r\n  ): UserBulkSetActive\r\n  # Create new permission group.\r\n  permissionGroupCreate(\r\n    # Input fields to create permission group.\r\n    input: PermissionGroupCreateInput!\r\n  ): PermissionGroupCreate\r\n  # Update permission group.\r\n  permissionGroupUpdate(\r\n    # ID of the group to update.\r\n    id: ID!\r\n    # Input fields to create permission group.\r\n    input: PermissionGroupUpdateInput!\r\n  ): PermissionGroupUpdate\r\n  # Delete permission group.\r\n  permissionGroupDelete(\r\n    # ID of the group to delete.\r\n    id: ID!\r\n  ): PermissionGroupDelete\r\n}\r\n\r\ninput NameTranslationInput {\r\n  name: String\r\n}\r\n\r\nenum NavigationType {\r\n  # Main storefront navigation.\r\n  MAIN\r\n  # Secondary storefront navigation.\r\n  SECONDARY\r\n}\r\n\r\n# An object with an ID\r\ninterface Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n}\r\n\r\ninterface ObjectWithMetadata {\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n}\r\n\r\n# Represents an order in the shop.\r\ntype Order implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  created: DateTime!\r\n  status: OrderStatus!\r\n  user: User\r\n  trackingClientId: String!\r\n  billingAddress: Address\r\n  shippingAddress: Address\r\n  shippingMethod: ShippingMethod\r\n  shippingMethodName: String\r\n  channel: Channel!\r\n  # Total price of shipping.\r\n  shippingPrice: TaxedMoney!\r\n  shippingTaxRate: Float!\r\n  token: String!\r\n  voucher: Voucher\r\n  # List of user gift cards.\r\n  giftCards: [GiftCard]\r\n  displayGrossPrices: Boolean!\r\n  customerNote: String!\r\n  weight: Weight\r\n  redirectUrl: String\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # List of shipments for the order.\r\n  fulfillments: [Fulfillment]!\r\n  # List of order lines.\r\n  lines: [OrderLine]!\r\n  # List of actions that can be performed in the current state of an order.\r\n  actions: [OrderAction]!\r\n  # Shipping methods that can be used with this order.\r\n  availableShippingMethods: [ShippingMethod]\r\n  # List of order invoices.\r\n  invoices: [Invoice]\r\n  # User-friendly number of an order.\r\n  number: String\r\n  # The ID of the order that was the base for this order.\r\n  original: ID\r\n  # The order origin.\r\n  origin: OrderOriginEnum!\r\n  # Informs if an order is fully paid.\r\n  isPaid: Boolean!\r\n  # Internal payment status.\r\n  paymentStatus: PaymentChargeStatusEnum!\r\n  # User-friendly payment status.\r\n  paymentStatusDisplay: String!\r\n  # List of payments for the order.\r\n  payments: [Payment]\r\n  # Total amount of the order.\r\n  total: TaxedMoney!\r\n  # Undiscounted total amount of the order.\r\n  undiscountedTotal: TaxedMoney!\r\n  # The sum of line prices not including shipping.\r\n  subtotal: TaxedMoney!\r\n  # User-friendly order status.\r\n  statusDisplay: String\r\n  # Informs whether a draft order can be finalized(turned into a regular order).\r\n  canFinalize: Boolean!\r\n  # Amount authorized for the order.\r\n  totalAuthorized: Money!\r\n  # Amount captured by payment.\r\n  totalCaptured: Money!\r\n  # List of events associated with the order.\r\n  events: [OrderEvent]\r\n  # The difference between the paid and the order total amount.\r\n  totalBalance: Money!\r\n  # Email address of the customer.\r\n  userEmail: String\r\n  # Returns True, if order requires shipping.\r\n  isShippingRequired: Boolean!\r\n  languageCode: String! @deprecated(reason: \"Use the `languageCodeEnum` field to fetch the language code. This field will be removed in Saleor 4.0.\")\r\n  # Order language code.\r\n  languageCodeEnum: LanguageCodeEnum!\r\n  # Returns applied discount.\r\n  discount: Money @deprecated(reason: \"Use discounts field. This field will be removed in Saleor 4.0.\")\r\n  # Discount name.\r\n  discountName: String @deprecated(reason: \"Use discounts field. This field will be removed in Saleor 4.0.\")\r\n  # Translated discount name.\r\n  translatedDiscountName: String @deprecated(reason: \"Use discounts field. This field will be removed in Saleor 4.0.\")\r\n  # List of all discounts assigned to the order.\r\n  discounts: [OrderDiscount!]\r\n  # List of errors that occurred during order validation.\r\n  errors: [OrderError!]!\r\n}\r\n\r\nenum OrderAction {\r\n  # Represents the capture action.\r\n  CAPTURE\r\n  # Represents a mark-as-paid action.\r\n  MARK_AS_PAID\r\n  # Represents a refund action.\r\n  REFUND\r\n  # Represents a void action.\r\n  VOID\r\n}\r\n\r\n# Adds note to the order.\r\ntype OrderAddNote {\r\n  # Order with the note added.\r\n  order: Order\r\n  # Order note created.\r\n  event: OrderEvent\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput OrderAddNoteInput {\r\n  # Note message.\r\n  message: String!\r\n}\r\n\r\n# Cancels orders.\r\ntype OrderBulkCancel {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Cancel an order.\r\ntype OrderCancel {\r\n  # Canceled order.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Capture an order.\r\ntype OrderCapture {\r\n  # Captured order.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Confirms an unconfirmed order by changing status to unfulfilled.\r\ntype OrderConfirm {\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ntype OrderCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [OrderCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype OrderCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Order!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\nenum OrderDirection {\r\n  # Specifies an ascending sort order.\r\n  ASC\r\n  # Specifies a descending sort order.\r\n  DESC\r\n}\r\n\r\n# Contains all details related to the applied discount to the order.\r\ntype OrderDiscount implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  type: OrderDiscountType!\r\n  # Type of the discount: fixed or percent\r\n  valueType: DiscountValueTypeEnum!\r\n  # Value of the discount. Can store fixed value or percent value\r\n  value: PositiveDecimal!\r\n  name: String\r\n  translatedName: String\r\n  # Explanation for the applied discount.\r\n  reason: String\r\n  # Returns amount of discount.\r\n  amount: Money!\r\n}\r\n\r\n# Adds discount to the order.\r\ntype OrderDiscountAdd {\r\n  # Order which has been discounted.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput OrderDiscountCommonInput {\r\n  # Type of the discount: fixed or percent\r\n  valueType: DiscountValueTypeEnum!\r\n  # Value of the discount. Can store fixed value or percent value\r\n  value: PositiveDecimal!\r\n  # Explanation for the applied discount.\r\n  reason: String\r\n}\r\n\r\n# Remove discount from the order.\r\ntype OrderDiscountDelete {\r\n  # Order which has removed discount.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum OrderDiscountType {\r\n  # Voucher\r\n  VOUCHER\r\n  # Manual\r\n  MANUAL\r\n}\r\n\r\n# Update discount for the order.\r\ntype OrderDiscountUpdate {\r\n  # Order which has been discounted.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput OrderDraftFilterInput {\r\n  customer: String\r\n  created: DateRangeInput\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n  channels: [ID]\r\n}\r\n\r\ntype OrderError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: OrderErrorCode!\r\n  # Warehouse ID which causes the error.\r\n  warehouse: ID\r\n  # List of order line IDs that cause the error.\r\n  orderLines: [ID!]\r\n  # List of product variants that are associated with the error\r\n  variants: [ID!]\r\n  # A type of address that causes the error.\r\n  addressType: AddressTypeEnum\r\n}\r\n\r\n# An enumeration.\r\nenum OrderErrorCode {\r\n  BILLING_ADDRESS_NOT_SET\r\n  CANNOT_CANCEL_FULFILLMENT\r\n  CANNOT_CANCEL_ORDER\r\n  CANNOT_DELETE\r\n  CANNOT_DISCOUNT\r\n  CANNOT_REFUND\r\n  CAPTURE_INACTIVE_PAYMENT\r\n  NOT_EDITABLE\r\n  FULFILL_ORDER_LINE\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  PRODUCT_NOT_PUBLISHED\r\n  PRODUCT_UNAVAILABLE_FOR_PURCHASE\r\n  NOT_FOUND\r\n  ORDER_NO_SHIPPING_ADDRESS\r\n  PAYMENT_ERROR\r\n  PAYMENT_MISSING\r\n  REQUIRED\r\n  SHIPPING_METHOD_NOT_APPLICABLE\r\n  SHIPPING_METHOD_REQUIRED\r\n  TAX_ERROR\r\n  UNIQUE\r\n  VOID_INACTIVE_PAYMENT\r\n  ZERO_QUANTITY\r\n  INVALID_QUANTITY\r\n  INSUFFICIENT_STOCK\r\n  DUPLICATED_INPUT_ITEM\r\n  NOT_AVAILABLE_IN_CHANNEL\r\n  CHANNEL_INACTIVE\r\n}\r\n\r\n# History log of the order.\r\ntype OrderEvent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Date when event happened at in ISO 8601 format.\r\n  date: DateTime\r\n  # Order event type.\r\n  type: OrderEventsEnum\r\n  # User who performed the action.\r\n  user: User\r\n  # App that performed the action.\r\n  app: App\r\n  # Content of the event.\r\n  message: String\r\n  # Email of the customer.\r\n  email: String\r\n  # Type of an email sent to the customer.\r\n  emailType: OrderEventsEmailsEnum\r\n  # Amount of money.\r\n  amount: Float\r\n  # The payment ID from the payment gateway.\r\n  paymentId: String\r\n  # The payment gateway of the payment.\r\n  paymentGateway: String\r\n  # Number of items.\r\n  quantity: Int\r\n  # Composed ID of the Fulfillment.\r\n  composedId: String\r\n  # User-friendly number of an order.\r\n  orderNumber: String\r\n  # Number of an invoice related to the order.\r\n  invoiceNumber: String\r\n  # List of oversold lines names.\r\n  oversoldItems: [String]\r\n  # The concerned lines.\r\n  lines: [OrderEventOrderLineObject]\r\n  # The lines fulfilled.\r\n  fulfilledItems: [FulfillmentLine]\r\n  # The warehouse were items were restocked.\r\n  warehouse: Warehouse\r\n  # The transaction reference of captured payment.\r\n  transactionReference: String\r\n  # Define if shipping costs were included to the refund.\r\n  shippingCostsIncluded: Boolean\r\n  # The order which is related to this order.\r\n  relatedOrder: Order\r\n  # The discount applied to the order.\r\n  discount: OrderEventDiscountObject\r\n}\r\n\r\ntype OrderEventCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [OrderEventCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype OrderEventCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: OrderEvent!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\ntype OrderEventDiscountObject {\r\n  # Type of the discount: fixed or percent.\r\n  valueType: DiscountValueTypeEnum!\r\n  # Value of the discount. Can store fixed value or percent value.\r\n  value: PositiveDecimal!\r\n  # Explanation for the applied discount.\r\n  reason: String\r\n  # Returns amount of discount.\r\n  amount: Money\r\n  # Type of the discount: fixed or percent.\r\n  oldValueType: DiscountValueTypeEnum\r\n  # Value of the discount. Can store fixed value or percent value.\r\n  oldValue: PositiveDecimal\r\n  # Returns amount of discount.\r\n  oldAmount: Money\r\n}\r\n\r\ntype OrderEventOrderLineObject {\r\n  # The variant quantity.\r\n  quantity: Int\r\n  # The order line.\r\n  orderLine: OrderLine\r\n  # The variant name.\r\n  itemName: String\r\n  # The discount applied to the order line.\r\n  discount: OrderEventDiscountObject\r\n}\r\n\r\n# An enumeration.\r\nenum OrderEventsEmailsEnum {\r\n  PAYMENT_CONFIRMATION\r\n  CONFIRMED\r\n  SHIPPING_CONFIRMATION\r\n  TRACKING_UPDATED\r\n  ORDER_CONFIRMATION\r\n  ORDER_CANCEL\r\n  ORDER_REFUND\r\n  FULFILLMENT_CONFIRMATION\r\n  DIGITAL_LINKS\r\n}\r\n\r\n# An enumeration.\r\nenum OrderEventsEnum {\r\n  DRAFT_CREATED\r\n  DRAFT_CREATED_FROM_REPLACE\r\n  ADDED_PRODUCTS\r\n  REMOVED_PRODUCTS\r\n  PLACED\r\n  PLACED_FROM_DRAFT\r\n  OVERSOLD_ITEMS\r\n  CANCELED\r\n  ORDER_MARKED_AS_PAID\r\n  ORDER_FULLY_PAID\r\n  ORDER_REPLACEMENT_CREATED\r\n  ORDER_DISCOUNT_ADDED\r\n  ORDER_DISCOUNT_AUTOMATICALLY_UPDATED\r\n  ORDER_DISCOUNT_UPDATED\r\n  ORDER_DISCOUNT_DELETED\r\n  ORDER_LINE_DISCOUNT_UPDATED\r\n  ORDER_LINE_DISCOUNT_REMOVED\r\n  ORDER_LINE_PRODUCT_DELETED\r\n  ORDER_LINE_VARIANT_DELETED\r\n  UPDATED_ADDRESS\r\n  EMAIL_SENT\r\n  CONFIRMED\r\n  PAYMENT_AUTHORIZED\r\n  PAYMENT_CAPTURED\r\n  EXTERNAL_SERVICE_NOTIFICATION\r\n  PAYMENT_REFUNDED\r\n  PAYMENT_VOIDED\r\n  PAYMENT_FAILED\r\n  INVOICE_REQUESTED\r\n  INVOICE_GENERATED\r\n  INVOICE_UPDATED\r\n  INVOICE_SENT\r\n  FULFILLMENT_CANCELED\r\n  FULFILLMENT_RESTOCKED_ITEMS\r\n  FULFILLMENT_FULFILLED_ITEMS\r\n  FULFILLMENT_REFUNDED\r\n  FULFILLMENT_RETURNED\r\n  FULFILLMENT_REPLACED\r\n  TRACKING_UPDATED\r\n  NOTE_ADDED\r\n  OTHER\r\n}\r\n\r\ninput OrderFilterInput {\r\n  paymentStatus: [PaymentChargeStatusEnum]\r\n  status: [OrderStatusFilter]\r\n  customer: String\r\n  created: DateRangeInput\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n  channels: [ID]\r\n  ids: [ID]\r\n}\r\n\r\n# Creates new fulfillments for an order.\r\ntype OrderFulfill {\r\n  # List of created fulfillments.\r\n  fulfillments: [Fulfillment]\r\n  # Fulfilled order.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput OrderFulfillInput {\r\n  # List of items informing how to fulfill the order.\r\n  lines: [OrderFulfillLineInput!]!\r\n  # If true, send an email notification to the customer.\r\n  notifyCustomer: Boolean\r\n  # If true, then allow proceed fulfillment when stock is exceeded.\r\n  allowStockToBeExceeded: Boolean = false\r\n}\r\n\r\ninput OrderFulfillLineInput {\r\n  # The ID of the order line.\r\n  orderLineId: ID\r\n  # List of stock items to create.\r\n  stocks: [OrderFulfillStockInput!]!\r\n}\r\n\r\ninput OrderFulfillStockInput {\r\n  # The number of line items to be fulfilled from given warehouse.\r\n  quantity: Int!\r\n  # ID of the warehouse from which the item will be fulfilled.\r\n  warehouse: ID!\r\n}\r\n\r\n# Represents order line of particular order.\r\ntype OrderLine implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  productName: String!\r\n  variantName: String!\r\n  productSku: String!\r\n  isShippingRequired: Boolean!\r\n  quantity: Int!\r\n  quantityFulfilled: Int!\r\n  unitDiscountReason: String\r\n  taxRate: Float!\r\n  digitalContentUrl: DigitalContentUrl\r\n  # The main thumbnail for the ordered product.\r\n  thumbnail(\r\n    # Size of thumbnail.\r\n    size: Int\r\n  ): Image\r\n  # Price of the single item in the order line.\r\n  unitPrice: TaxedMoney!\r\n  # Price of the single item in the order line without applied an order line discount.\r\n  undiscountedUnitPrice: TaxedMoney!\r\n  # The discount applied to the single order line.\r\n  unitDiscount: Money!\r\n  # Value of the discount. Can store fixed value or percent value\r\n  unitDiscountValue: PositiveDecimal!\r\n  # Price of the order line.\r\n  totalPrice: TaxedMoney!\r\n  # A purchased product variant. Note: this field may be null if the variant has been removed from stock at all.\r\n  variant: ProductVariant\r\n  # Product name in the customer's language\r\n  translatedProductName: String!\r\n  # Variant name in the customer's language\r\n  translatedVariantName: String!\r\n  # List of allocations across warehouses.\r\n  allocations: [Allocation!]\r\n  # Type of the discount: fixed or percent\r\n  unitDiscountType: DiscountValueTypeEnum\r\n}\r\n\r\ninput OrderLineCreateInput {\r\n  # Number of variant items ordered.\r\n  quantity: Int!\r\n  # Product variant ID.\r\n  variantId: ID!\r\n}\r\n\r\n# Deletes an order line from an order.\r\ntype OrderLineDelete {\r\n  # A related order.\r\n  order: Order\r\n  # An order line that was deleted.\r\n  orderLine: OrderLine\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Remove discount applied to the order line.\r\ntype OrderLineDiscountRemove {\r\n  # Order line which has removed discount.\r\n  orderLine: OrderLine\r\n  # Order which is related to line which has removed discount.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Update discount for the order line.\r\ntype OrderLineDiscountUpdate {\r\n  # Order line which has been discounted.\r\n  orderLine: OrderLine\r\n  # Order which is related to the discounted line.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput OrderLineInput {\r\n  # Number of variant items ordered.\r\n  quantity: Int!\r\n}\r\n\r\n# Updates an order line of an order.\r\ntype OrderLineUpdate {\r\n  # Related order.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n  orderLine: OrderLine\r\n}\r\n\r\n# Create order lines for an order.\r\ntype OrderLinesCreate {\r\n  # Related order.\r\n  order: Order\r\n  # List of added order lines.\r\n  orderLines: [OrderLine!]\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# Mark order as manually paid.\r\ntype OrderMarkAsPaid {\r\n  # Order marked as paid.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum OrderOriginEnum {\r\n  CHECKOUT\r\n  DRAFT\r\n  REISSUE\r\n}\r\n\r\n# Refund an order.\r\ntype OrderRefund {\r\n  # A refunded order.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput OrderRefundFulfillmentLineInput {\r\n  # The ID of the fulfillment line to refund.\r\n  fulfillmentLineId: ID!\r\n  # The number of items to be refunded.\r\n  quantity: Int!\r\n}\r\n\r\ninput OrderRefundLineInput {\r\n  # The ID of the order line to refund.\r\n  orderLineId: ID!\r\n  # The number of items to be refunded.\r\n  quantity: Int!\r\n}\r\n\r\ninput OrderRefundProductsInput {\r\n  # List of unfulfilled lines to refund.\r\n  orderLines: [OrderRefundLineInput!]\r\n  # List of fulfilled lines to refund.\r\n  fulfillmentLines: [OrderRefundFulfillmentLineInput!]\r\n  # The total amount of refund when the value is provided manually.\r\n  amountToRefund: PositiveDecimal\r\n  # If true, Saleor will refund shipping costs. If amountToRefund is providedincludeShippingCosts will be ignored.\r\n  includeShippingCosts: Boolean = false\r\n}\r\n\r\ninput OrderReturnFulfillmentLineInput {\r\n  # The ID of the fulfillment line to return.\r\n  fulfillmentLineId: ID!\r\n  # The number of items to be returned.\r\n  quantity: Int!\r\n  # Determines, if the line should be added to replace order.\r\n  replace: Boolean = false\r\n}\r\n\r\ninput OrderReturnLineInput {\r\n  # The ID of the order line to return.\r\n  orderLineId: ID!\r\n  # The number of items to be returned.\r\n  quantity: Int!\r\n  # Determines, if the line should be added to replace order.\r\n  replace: Boolean = false\r\n}\r\n\r\ninput OrderReturnProductsInput {\r\n  # List of unfulfilled lines to return.\r\n  orderLines: [OrderReturnLineInput!]\r\n  # List of fulfilled lines to return.\r\n  fulfillmentLines: [OrderReturnFulfillmentLineInput!]\r\n  # The total amount of refund when the value is provided manually.\r\n  amountToRefund: PositiveDecimal\r\n  # If true, Saleor will refund shipping costs. If amountToRefund is providedincludeShippingCosts will be ignored.\r\n  includeShippingCosts: Boolean = false\r\n  # If true, Saleor will call refund action for all lines.\r\n  refund: Boolean = false\r\n}\r\n\r\n# Order related settings from site settings.\r\ntype OrderSettings {\r\n  automaticallyConfirmAllNewOrders: Boolean!\r\n}\r\n\r\ntype OrderSettingsError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: OrderSettingsErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum OrderSettingsErrorCode {\r\n  INVALID\r\n}\r\n\r\n# Update shop order settings.\r\ntype OrderSettingsUpdate {\r\n  # Order settings.\r\n  orderSettings: OrderSettings\r\n  orderSettingsErrors: [OrderSettingsError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderSettingsError!]!\r\n}\r\n\r\ninput OrderSettingsUpdateInput {\r\n  # When disabled, all new orders from checkout will be marked as unconfirmed. When enabled orders from checkout will become unfulfilled immediately.\r\n  automaticallyConfirmAllNewOrders: Boolean!\r\n}\r\n\r\nenum OrderSortField {\r\n  # Sort orders by number.\r\n  NUMBER\r\n  # Sort orders by creation date.\r\n  CREATION_DATE\r\n  # Sort orders by customer.\r\n  CUSTOMER\r\n  # Sort orders by payment.\r\n  PAYMENT\r\n  # Sort orders by fulfillment status.\r\n  FULFILLMENT_STATUS\r\n}\r\n\r\ninput OrderSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort orders by the selected field.\r\n  field: OrderSortField!\r\n}\r\n\r\n# An enumeration.\r\nenum OrderStatus {\r\n  # Draft\r\n  DRAFT\r\n  # Unconfirmed\r\n  UNCONFIRMED\r\n  # Unfulfilled\r\n  UNFULFILLED\r\n  # Partially fulfilled\r\n  PARTIALLY_FULFILLED\r\n  # Partially returned\r\n  PARTIALLY_RETURNED\r\n  # Returned\r\n  RETURNED\r\n  # Fulfilled\r\n  FULFILLED\r\n  # Canceled\r\n  CANCELED\r\n}\r\n\r\nenum OrderStatusFilter {\r\n  READY_TO_FULFILL\r\n  READY_TO_CAPTURE\r\n  UNFULFILLED\r\n  UNCONFIRMED\r\n  PARTIALLY_FULFILLED\r\n  FULFILLED\r\n  CANCELED\r\n}\r\n\r\n# Updates an order.\r\ntype OrderUpdate {\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n  order: Order\r\n}\r\n\r\ninput OrderUpdateInput {\r\n  # Billing address of the customer.\r\n  billingAddress: AddressInput\r\n  # Email address of the customer.\r\n  userEmail: String\r\n  # Shipping address of the customer.\r\n  shippingAddress: AddressInput\r\n}\r\n\r\n# Updates a shipping method of the order.\r\ntype OrderUpdateShipping {\r\n  # Order with updated shipping method.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\ninput OrderUpdateShippingInput {\r\n  # ID of the selected shipping method.\r\n  shippingMethod: ID\r\n}\r\n\r\n# Void an order.\r\ntype OrderVoid {\r\n  # A voided order.\r\n  order: Order\r\n  orderErrors: [OrderError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [OrderError!]!\r\n}\r\n\r\n# A static page that can be manually added by a shop operator through the dashboard.\r\ntype Page implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  title: String!\r\n  content: JSONString\r\n  publicationDate: Date\r\n  isPublished: Boolean!\r\n  slug: String!\r\n  pageType: PageType!\r\n  created: DateTime!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Content of the page (JSON).\r\n  contentJson: JSONString! @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `content` field instead.\")\r\n  # Returns translated page fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for page.\r\n    languageCode: LanguageCodeEnum!\r\n  ): PageTranslation\r\n  # List of attributes assigned to this product.\r\n  attributes: [SelectedAttribute!]!\r\n}\r\n\r\n# Assign attributes to a given page type.\r\ntype PageAttributeAssign {\r\n  # The updated page type.\r\n  pageType: PageType\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n}\r\n\r\n# Unassign attributes from a given page type.\r\ntype PageAttributeUnassign {\r\n  # The updated page type.\r\n  pageType: PageType\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n}\r\n\r\n# Deletes pages.\r\ntype PageBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n}\r\n\r\n# Publish pages.\r\ntype PageBulkPublish {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n}\r\n\r\ntype PageCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [PageCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype PageCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Page!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new page.\r\ntype PageCreate {\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n  page: Page\r\n}\r\n\r\ninput PageCreateInput {\r\n  # Page internal name.\r\n  slug: String\r\n  # Page title.\r\n  title: String\r\n  # Page content in JSON format.\r\n  content: JSONString\r\n  # List of attributes.\r\n  attributes: [AttributeValueInput!]\r\n  # Determines if page is visible in the storefront.\r\n  isPublished: Boolean\r\n  # Publication date. ISO 8601 standard.\r\n  publicationDate: String\r\n  # Search engine optimization fields.\r\n  seo: SeoInput\r\n  # ID of the page type that page belongs to.\r\n  pageType: ID!\r\n}\r\n\r\n# Deletes a page.\r\ntype PageDelete {\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n  page: Page\r\n}\r\n\r\ntype PageError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: PageErrorCode!\r\n  # List of attributes IDs which causes the error.\r\n  attributes: [ID!]\r\n  # List of attribute values IDs which causes the error.\r\n  values: [ID!]\r\n}\r\n\r\n# An enumeration.\r\nenum PageErrorCode {\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  DUPLICATED_INPUT_ITEM\r\n  ATTRIBUTE_ALREADY_ASSIGNED\r\n}\r\n\r\ninput PageFilterInput {\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n  pageTypes: [ID]\r\n  ids: [ID]\r\n}\r\n\r\n# The Relay compliant `PageInfo` type, containing data necessary to paginate this connection.\r\ntype PageInfo {\r\n  # When paginating forwards, are there more items?\r\n  hasNextPage: Boolean!\r\n  # When paginating backwards, are there more items?\r\n  hasPreviousPage: Boolean!\r\n  # When paginating backwards, the cursor to continue.\r\n  startCursor: String\r\n  # When paginating forwards, the cursor to continue.\r\n  endCursor: String\r\n}\r\n\r\ninput PageInput {\r\n  # Page internal name.\r\n  slug: String\r\n  # Page title.\r\n  title: String\r\n  # Page content in JSON format.\r\n  content: JSONString\r\n  # List of attributes.\r\n  attributes: [AttributeValueInput!]\r\n  # Determines if page is visible in the storefront.\r\n  isPublished: Boolean\r\n  # Publication date. ISO 8601 standard.\r\n  publicationDate: String\r\n  # Search engine optimization fields.\r\n  seo: SeoInput\r\n}\r\n\r\n# Reorder page attribute values.\r\ntype PageReorderAttributeValues {\r\n  # Page from which attribute values are reordered.\r\n  page: Page\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n}\r\n\r\nenum PageSortField {\r\n  # Sort pages by title.\r\n  TITLE\r\n  # Sort pages by slug.\r\n  SLUG\r\n  # Sort pages by visibility.\r\n  VISIBILITY\r\n  # Sort pages by creation date.\r\n  CREATION_DATE\r\n  # Sort pages by publication date.\r\n  PUBLICATION_DATE\r\n}\r\n\r\ninput PageSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort pages by the selected field.\r\n  field: PageSortField!\r\n}\r\n\r\ntype PageTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  title: String!\r\n  content: JSONString\r\n  # Content of the page (JSON).\r\n  contentJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `content` field instead.\")\r\n  # Returns translated page fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for page.\r\n    languageCode: LanguageCodeEnum!\r\n  ): PageTranslation\r\n  # ('A static page that can be manually added by a shop operator ', 'through the dashboard.')\r\n  page: Page @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n  # List of page content attribute values that can be translated.\r\n  attributeValues: [AttributeValueTranslatableContent!]!\r\n}\r\n\r\n# Creates/updates translations for a page.\r\ntype PageTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  page: PageTranslatableContent\r\n}\r\n\r\ntype PageTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  title: String\r\n  content: JSONString\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n  # Translated description of the page (JSON).\r\n  contentJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `content` field instead.\")\r\n}\r\n\r\ninput PageTranslationInput {\r\n  seoTitle: String\r\n  seoDescription: String\r\n  title: String\r\n  content: JSONString\r\n}\r\n\r\n# Represents a type of page. It defines what attributes are available to pages of this type.\r\ntype PageType implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  slug: String!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Page attributes of that page type.\r\n  attributes: [Attribute]\r\n  # Attributes that can be assigned to the page type.\r\n  availableAttributes(\r\n    filter: AttributeFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): AttributeCountableConnection\r\n  # Whether page type has pages assigned.\r\n  hasPages: Boolean\r\n}\r\n\r\n# Delete page types.\r\ntype PageTypeBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n}\r\n\r\ntype PageTypeCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [PageTypeCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype PageTypeCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: PageType!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Create a new page type.\r\ntype PageTypeCreate {\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n  pageType: PageType\r\n}\r\n\r\ninput PageTypeCreateInput {\r\n  # Name of the page type.\r\n  name: String\r\n  # Page type slug.\r\n  slug: String\r\n  # List of attribute IDs to be assigned to the page type.\r\n  addAttributes: [ID!]\r\n}\r\n\r\n# Delete a page type.\r\ntype PageTypeDelete {\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n  pageType: PageType\r\n}\r\n\r\ninput PageTypeFilterInput {\r\n  search: String\r\n}\r\n\r\n# Reorder the attributes of a page type.\r\ntype PageTypeReorderAttributes {\r\n  # Page type from which attributes are reordered.\r\n  pageType: PageType\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n}\r\n\r\nenum PageTypeSortField {\r\n  # Sort page types by name.\r\n  NAME\r\n  # Sort page types by slug.\r\n  SLUG\r\n}\r\n\r\ninput PageTypeSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort page types by the selected field.\r\n  field: PageTypeSortField!\r\n}\r\n\r\n# Update page type.\r\ntype PageTypeUpdate {\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n  pageType: PageType\r\n}\r\n\r\ninput PageTypeUpdateInput {\r\n  # Name of the page type.\r\n  name: String\r\n  # Page type slug.\r\n  slug: String\r\n  # List of attribute IDs to be assigned to the page type.\r\n  addAttributes: [ID!]\r\n  # List of attribute IDs to be assigned to the page type.\r\n  removeAttributes: [ID!]\r\n}\r\n\r\n# Updates an existing page.\r\ntype PageUpdate {\r\n  pageErrors: [PageError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PageError!]!\r\n  page: Page\r\n}\r\n\r\n# Change the password of the logged in user.\r\ntype PasswordChange {\r\n  # A user instance with a new password.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Represents a payment of a given type.\r\ntype Payment implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  gateway: String!\r\n  isActive: Boolean!\r\n  created: DateTime!\r\n  modified: DateTime!\r\n  token: String!\r\n  checkout: Checkout\r\n  order: Order\r\n  paymentMethodType: String!\r\n  customerIpAddress: String\r\n  # Internal payment status.\r\n  chargeStatus: PaymentChargeStatusEnum!\r\n  # List of actions that can be performed in the current state of a payment.\r\n  actions: [OrderAction]!\r\n  # Total amount of the payment.\r\n  total: Money\r\n  # Total amount captured for this payment.\r\n  capturedAmount: Money\r\n  # List of all transactions within this payment.\r\n  transactions: [Transaction]\r\n  # Maximum amount of money that can be captured.\r\n  availableCaptureAmount: Money\r\n  # Maximum amount of money that can be refunded.\r\n  availableRefundAmount: Money\r\n  # The details of the card used for this payment.\r\n  creditCard: CreditCard\r\n}\r\n\r\n# Captures the authorized payment amount.\r\ntype PaymentCapture {\r\n  # Updated payment.\r\n  payment: Payment\r\n  paymentErrors: [PaymentError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PaymentError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum PaymentChargeStatusEnum {\r\n  NOT_CHARGED\r\n  PENDING\r\n  PARTIALLY_CHARGED\r\n  FULLY_CHARGED\r\n  PARTIALLY_REFUNDED\r\n  FULLY_REFUNDED\r\n  REFUSED\r\n  CANCELLED\r\n}\r\n\r\ntype PaymentCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [PaymentCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype PaymentCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Payment!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\ntype PaymentError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: PaymentErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum PaymentErrorCode {\r\n  BILLING_ADDRESS_NOT_SET\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  PARTIAL_PAYMENT_NOT_ALLOWED\r\n  SHIPPING_ADDRESS_NOT_SET\r\n  INVALID_SHIPPING_METHOD\r\n  SHIPPING_METHOD_NOT_SET\r\n  PAYMENT_ERROR\r\n  NOT_SUPPORTED_GATEWAY\r\n  CHANNEL_INACTIVE\r\n}\r\n\r\ninput PaymentFilterInput {\r\n  checkouts: [ID]\r\n}\r\n\r\n# Available payment gateway backend with configuration necessary to setup client.\r\ntype PaymentGateway {\r\n  # Payment gateway name.\r\n  name: String!\r\n  # Payment gateway ID.\r\n  id: ID!\r\n  # Payment gateway client configuration.\r\n  config: [GatewayConfigLine!]!\r\n  # Payment gateway supported currencies.\r\n  currencies: [String]!\r\n}\r\n\r\n# Initializes payment process when it is required by gateway.\r\ntype PaymentInitialize {\r\n  initializedPayment: PaymentInitialized\r\n  paymentErrors: [PaymentError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PaymentError!]!\r\n}\r\n\r\n# Server-side data generated by a payment gateway. Optional step when the payment provider requires an additional action to initialize payment session.\r\ntype PaymentInitialized {\r\n  # ID of a payment gateway.\r\n  gateway: String!\r\n  # Payment gateway name.\r\n  name: String!\r\n  # Initialized data by gateway.\r\n  data: JSONString\r\n}\r\n\r\ninput PaymentInput {\r\n  # A gateway to use with that payment.\r\n  gateway: String!\r\n  # Client-side generated payment token, representing customer's billing data in a secure manner.\r\n  token: String\r\n  # Total amount of the transaction, including all taxes and discounts. If no amount is provided, the checkout total will be used.\r\n  amount: PositiveDecimal\r\n  # URL of a storefront view where user should be redirected after requiring additional actions. Payment with additional actions will not be finished if this field is not provided.\r\n  returnUrl: String\r\n}\r\n\r\n# Refunds the captured payment amount.\r\ntype PaymentRefund {\r\n  # Updated payment.\r\n  payment: Payment\r\n  paymentErrors: [PaymentError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PaymentError!]!\r\n}\r\n\r\n# Represents a payment source stored for user in payment gateway, such as credit card.\r\ntype PaymentSource {\r\n  # Payment gateway name.\r\n  gateway: String!\r\n  # ID of stored payment method.\r\n  paymentMethodId: String\r\n  # Stored credit card details if available.\r\n  creditCardInfo: CreditCard\r\n}\r\n\r\n# Voids the authorized payment.\r\ntype PaymentVoid {\r\n  # Updated payment.\r\n  payment: Payment\r\n  paymentErrors: [PaymentError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PaymentError!]!\r\n}\r\n\r\n# Represents a permission object in a friendly form.\r\ntype Permission {\r\n  # Internal code for permission.\r\n  code: PermissionEnum!\r\n  # Describe action(s) allowed to do by permission.\r\n  name: String!\r\n}\r\n\r\n# An enumeration.\r\nenum PermissionEnum {\r\n  MANAGE_USERS\r\n  MANAGE_STAFF\r\n  IMPERSONATE_USER\r\n  MANAGE_APPS\r\n  MANAGE_CHANNELS\r\n  MANAGE_DISCOUNTS\r\n  MANAGE_PLUGINS\r\n  MANAGE_GIFT_CARD\r\n  MANAGE_MENUS\r\n  MANAGE_ORDERS\r\n  MANAGE_PAGES\r\n  MANAGE_PAGE_TYPES_AND_ATTRIBUTES\r\n  HANDLE_PAYMENTS\r\n  MANAGE_PRODUCTS\r\n  MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES\r\n  MANAGE_SHIPPING\r\n  MANAGE_SETTINGS\r\n  MANAGE_TRANSLATIONS\r\n  MANAGE_CHECKOUTS\r\n}\r\n\r\n# Create new permission group.\r\ntype PermissionGroupCreate {\r\n  permissionGroupErrors: [PermissionGroupError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PermissionGroupError!]!\r\n  group: Group\r\n}\r\n\r\ninput PermissionGroupCreateInput {\r\n  # List of permission code names to assign to this group.\r\n  addPermissions: [PermissionEnum!]\r\n  # List of users to assign to this group.\r\n  addUsers: [ID!]\r\n  # Group name.\r\n  name: String!\r\n}\r\n\r\n# Delete permission group.\r\ntype PermissionGroupDelete {\r\n  permissionGroupErrors: [PermissionGroupError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PermissionGroupError!]!\r\n  group: Group\r\n}\r\n\r\ntype PermissionGroupError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: PermissionGroupErrorCode!\r\n  # List of permissions which causes the error.\r\n  permissions: [PermissionEnum!]\r\n  # List of user IDs which causes the error.\r\n  users: [ID!]\r\n}\r\n\r\n# An enumeration.\r\nenum PermissionGroupErrorCode {\r\n  ASSIGN_NON_STAFF_MEMBER\r\n  DUPLICATED_INPUT_ITEM\r\n  CANNOT_REMOVE_FROM_LAST_GROUP\r\n  LEFT_NOT_MANAGEABLE_PERMISSION\r\n  OUT_OF_SCOPE_PERMISSION\r\n  OUT_OF_SCOPE_USER\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\ninput PermissionGroupFilterInput {\r\n  search: String\r\n}\r\n\r\nenum PermissionGroupSortField {\r\n  # Sort permission group accounts by name.\r\n  NAME\r\n}\r\n\r\ninput PermissionGroupSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort permission group by the selected field.\r\n  field: PermissionGroupSortField!\r\n}\r\n\r\n# Update permission group.\r\ntype PermissionGroupUpdate {\r\n  permissionGroupErrors: [PermissionGroupError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PermissionGroupError!]!\r\n  group: Group\r\n}\r\n\r\ninput PermissionGroupUpdateInput {\r\n  # List of permission code names to assign to this group.\r\n  addPermissions: [PermissionEnum!]\r\n  # List of users to assign to this group.\r\n  addUsers: [ID!]\r\n  # Group name.\r\n  name: String\r\n  # List of permission code names to unassign from this group.\r\n  removePermissions: [PermissionEnum!]\r\n  # List of users to unassign from this group.\r\n  removeUsers: [ID!]\r\n}\r\n\r\n# Plugin.\r\ntype Plugin {\r\n  # Identifier of the plugin.\r\n  id: ID!\r\n  # Name of the plugin.\r\n  name: String!\r\n  # Description of the plugin.\r\n  description: String!\r\n  # Global configuration of the plugin (not channel-specific).\r\n  globalConfiguration: PluginConfiguration\r\n  # Channel-specific plugin configuration.\r\n  channelConfigurations: [PluginConfiguration!]!\r\n}\r\n\r\n# Stores information about a configuration of plugin.\r\ntype PluginConfiguration {\r\n  # Determines if plugin is active or not.\r\n  active: Boolean!\r\n  # The channel to which the plugin configuration is assigned to.\r\n  channel: Channel\r\n  # Configuration of the plugin.\r\n  configuration: [ConfigurationItem]\r\n}\r\n\r\nenum PluginConfigurationType {\r\n  PER_CHANNEL\r\n  GLOBAL\r\n}\r\n\r\ntype PluginCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [PluginCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype PluginCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Plugin!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\ntype PluginError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: PluginErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum PluginErrorCode {\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  PLUGIN_MISCONFIGURED\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\ninput PluginFilterInput {\r\n  statusInChannels: PluginStatusInChannelsInput\r\n  search: String\r\n  type: PluginConfigurationType\r\n}\r\n\r\nenum PluginSortField {\r\n  NAME\r\n  IS_ACTIVE\r\n}\r\n\r\ninput PluginSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort plugins by the selected field.\r\n  field: PluginSortField!\r\n}\r\n\r\ninput PluginStatusInChannelsInput {\r\n  active: Boolean!\r\n  channels: [ID!]!\r\n}\r\n\r\n# Update plugin configuration.\r\ntype PluginUpdate {\r\n  plugin: Plugin\r\n  pluginsErrors: [PluginError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [PluginError!]!\r\n}\r\n\r\ninput PluginUpdateInput {\r\n  # Indicates whether the plugin should be enabled.\r\n  active: Boolean\r\n  # Configuration of the plugin.\r\n  configuration: [ConfigurationItemInput]\r\n}\r\n\r\n# Positive Decimal scalar implementation.\r\n# Should be used in places where value must be positive.\r\nscalar PositiveDecimal\r\n\r\n# An enumeration.\r\nenum PostalCodeRuleInclusionTypeEnum {\r\n  INCLUDE\r\n  EXCLUDE\r\n}\r\n\r\ninput PriceRangeInput {\r\n  # Price greater than or equal to.\r\n  gte: Float\r\n  # Price less than or equal to.\r\n  lte: Float\r\n}\r\n\r\n# Represents an individual item for sale in the storefront.\r\ntype Product implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String!\r\n  description: JSONString\r\n  productType: ProductType!\r\n  slug: String!\r\n  category: Category\r\n  updatedAt: DateTime\r\n  chargeTaxes: Boolean!\r\n  weight: Weight\r\n  defaultVariant: ProductVariant\r\n  rating: Float\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Channel given to retrieve this product. Also used by federation gateway to resolve this object in a federated query.\r\n  channel: String\r\n  # Description of the product (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n  # The main thumbnail for a product.\r\n  thumbnail(\r\n    # Size of thumbnail.\r\n    size: Int\r\n  ): Image\r\n  # Lists the storefront product's pricing, the current price and discounts, only meant for displaying.\r\n  pricing(\r\n    # Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.\r\n    address: AddressInput\r\n  ): ProductPricingInfo\r\n  # Whether the product is in stock and visible or not.\r\n  isAvailable(\r\n    # Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.\r\n    address: AddressInput\r\n  ): Boolean\r\n  # A type of tax. Assigned by enabled tax gateway\r\n  taxType: TaxType\r\n  # List of attributes assigned to this product.\r\n  attributes: [SelectedAttribute!]!\r\n  # List of availability in channels for the product.\r\n  channelListings: [ProductChannelListing!]\r\n  # Get a single product media by ID.\r\n  mediaById(\r\n    # ID of a product media.\r\n    id: ID\r\n  ): ProductMedia\r\n  # Get a single product image by ID.\r\n  imageById(\r\n    # ID of a product image.\r\n    id: ID\r\n  ): ProductImage @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `mediaById` field instead.\")\r\n  # List of variants for the product.\r\n  variants: [ProductVariant]\r\n  # List of media for the product.\r\n  media: [ProductMedia!]\r\n  # List of images for the product.\r\n  images: [ProductImage] @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `media` field instead.\")\r\n  # List of collections for the product.\r\n  collections: [Collection]\r\n  # Returns translated product fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for product.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ProductTranslation\r\n  # Date when product is available for purchase. \r\n  availableForPurchase: Date\r\n  # Whether the product is available for purchase.\r\n  isAvailableForPurchase: Boolean\r\n}\r\n\r\n# Assign attributes to a given product type.\r\ntype ProductAttributeAssign {\r\n  # The updated product type.\r\n  productType: ProductType\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\ninput ProductAttributeAssignInput {\r\n  # The ID of the attribute to assign.\r\n  id: ID!\r\n  # The attribute type to be assigned as.\r\n  type: ProductAttributeType!\r\n}\r\n\r\nenum ProductAttributeType {\r\n  PRODUCT\r\n  VARIANT\r\n}\r\n\r\n# Un-assign attributes from a given product type.\r\ntype ProductAttributeUnassign {\r\n  # The updated product type.\r\n  productType: ProductType\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Deletes products.\r\ntype ProductBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Represents product channel listing.\r\ntype ProductChannelListing implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  publicationDate: Date\r\n  isPublished: Boolean!\r\n  channel: Channel!\r\n  visibleInListings: Boolean!\r\n  availableForPurchase: Date\r\n  # The price of the cheapest variant (including discounts).\r\n  discountedPrice: Money\r\n  # Purchase cost of product.\r\n  purchaseCost: MoneyRange\r\n  # Range of margin percentage value.\r\n  margin: Margin\r\n  # Whether the product is available for purchase.\r\n  isAvailableForPurchase: Boolean\r\n  # Lists the storefront product's pricing, the current price and discounts, only meant for displaying.\r\n  pricing(\r\n    # Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.\r\n    address: AddressInput\r\n  ): ProductPricingInfo\r\n}\r\n\r\ninput ProductChannelListingAddInput {\r\n  # ID of a channel.\r\n  channelId: ID!\r\n  # Determines if object is visible to customers.\r\n  isPublished: Boolean\r\n  # Publication date. ISO 8601 standard.\r\n  publicationDate: Date\r\n  # Determines if product is visible in product listings (doesn't apply to product collections).\r\n  visibleInListings: Boolean\r\n  # Determine if product should be available for purchase.\r\n  isAvailableForPurchase: Boolean\r\n  # A start date from which a product will be available for purchase. When not set and isAvailable is set to True, the current day is assumed.\r\n  availableForPurchaseDate: Date\r\n  # List of variants to which the channel should be assigned.\r\n  addVariants: [ID!]\r\n  # List of variants from which the channel should be unassigned.\r\n  removeVariants: [ID!]\r\n}\r\n\r\ntype ProductChannelListingError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ProductErrorCode!\r\n  # List of attributes IDs which causes the error.\r\n  attributes: [ID!]\r\n  # List of attribute values IDs which causes the error.\r\n  values: [ID!]\r\n  # List of channels IDs which causes the error.\r\n  channels: [ID!]\r\n  # List of variants IDs which causes the error.\r\n  variants: [ID!]\r\n}\r\n\r\n# Manage product's availability in channels.\r\ntype ProductChannelListingUpdate {\r\n  # An updated product instance.\r\n  product: Product\r\n  productChannelListingErrors: [ProductChannelListingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductChannelListingError!]!\r\n}\r\n\r\ninput ProductChannelListingUpdateInput {\r\n  # List of channels to which the product should be assigned or updated.\r\n  updateChannels: [ProductChannelListingAddInput!]\r\n  # List of channels from which the product should be unassigned.\r\n  removeChannels: [ID!]\r\n}\r\n\r\ntype ProductCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [ProductCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype ProductCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Product!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new product.\r\ntype ProductCreate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  product: Product\r\n}\r\n\r\ninput ProductCreateInput {\r\n  # List of attributes.\r\n  attributes: [AttributeValueInput!]\r\n  # ID of the product's category.\r\n  category: ID\r\n  # Determine if taxes are being charged for the product.\r\n  chargeTaxes: Boolean\r\n  # List of IDs of collections that the product belongs to.\r\n  collections: [ID!]\r\n  # Product description (JSON).\r\n  description: JSONString\r\n  # Product name.\r\n  name: String\r\n  # Product slug.\r\n  slug: String\r\n  # Tax rate for enabled tax gateway.\r\n  taxCode: String\r\n  # Search engine optimization fields.\r\n  seo: SeoInput\r\n  # Weight of the Product.\r\n  weight: WeightScalar\r\n  # Defines the product rating value.\r\n  rating: Float\r\n  # ID of the type that product belongs to.\r\n  productType: ID!\r\n}\r\n\r\n# Deletes a product.\r\ntype ProductDelete {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  product: Product\r\n}\r\n\r\ntype ProductError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ProductErrorCode!\r\n  # List of attributes IDs which causes the error.\r\n  attributes: [ID!]\r\n  # List of attribute values IDs which causes the error.\r\n  values: [ID!]\r\n}\r\n\r\n# An enumeration.\r\nenum ProductErrorCode {\r\n  ALREADY_EXISTS\r\n  ATTRIBUTE_ALREADY_ASSIGNED\r\n  ATTRIBUTE_CANNOT_BE_ASSIGNED\r\n  ATTRIBUTE_VARIANTS_DISABLED\r\n  DUPLICATED_INPUT_ITEM\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  PRODUCT_WITHOUT_CATEGORY\r\n  NOT_PRODUCTS_IMAGE\r\n  NOT_PRODUCTS_VARIANT\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  VARIANT_NO_DIGITAL_CONTENT\r\n  CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT\r\n  PRODUCT_NOT_ASSIGNED_TO_CHANNEL\r\n  UNSUPPORTED_MEDIA_PROVIDER\r\n}\r\n\r\nenum ProductFieldEnum {\r\n  NAME\r\n  DESCRIPTION\r\n  PRODUCT_TYPE\r\n  CATEGORY\r\n  PRODUCT_WEIGHT\r\n  COLLECTIONS\r\n  CHARGE_TAXES\r\n  PRODUCT_MEDIA\r\n  VARIANT_SKU\r\n  VARIANT_WEIGHT\r\n  VARIANT_MEDIA\r\n}\r\n\r\ninput ProductFilterInput {\r\n  isPublished: Boolean\r\n  collections: [ID]\r\n  categories: [ID]\r\n  hasCategory: Boolean\r\n  attributes: [AttributeInput]\r\n  stockAvailability: StockAvailability\r\n  stocks: ProductStockFilterInput\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n  price: PriceRangeInput\r\n  minimalPrice: PriceRangeInput\r\n  productTypes: [ID]\r\n  ids: [ID]\r\n  # Specifies the channel by which the data should be filtered. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n}\r\n\r\n# Represents a product image.\r\ntype ProductImage {\r\n  # The ID of the image.\r\n  id: ID!\r\n  # The alt text of the image.\r\n  alt: String\r\n  # The new relative sorting position of the item (from -inf to +inf). 1 moves the item one position forward, -1 moves the item one position backward, 0 leaves the item unchanged.\r\n  sortOrder: Int\r\n  # The URL of the image.\r\n  url(\r\n    # Size of the image.\r\n    size: Int\r\n  ): String!\r\n}\r\n\r\ninput ProductInput {\r\n  # List of attributes.\r\n  attributes: [AttributeValueInput!]\r\n  # ID of the product's category.\r\n  category: ID\r\n  # Determine if taxes are being charged for the product.\r\n  chargeTaxes: Boolean\r\n  # List of IDs of collections that the product belongs to.\r\n  collections: [ID!]\r\n  # Product description (JSON).\r\n  description: JSONString\r\n  # Product name.\r\n  name: String\r\n  # Product slug.\r\n  slug: String\r\n  # Tax rate for enabled tax gateway.\r\n  taxCode: String\r\n  # Search engine optimization fields.\r\n  seo: SeoInput\r\n  # Weight of the Product.\r\n  weight: WeightScalar\r\n  # Defines the product rating value.\r\n  rating: Float\r\n}\r\n\r\n# Represents a product media.\r\ntype ProductMedia implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  sortOrder: Int\r\n  alt: String!\r\n  type: ProductMediaType!\r\n  oembedData: JSONString!\r\n  # The URL of the media.\r\n  url(\r\n    # Size of the image.\r\n    size: Int\r\n  ): String!\r\n}\r\n\r\n# Deletes product media.\r\ntype ProductMediaBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Create a media object (image or video URL) associated with product. For image, this mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\ntype ProductMediaCreate {\r\n  product: Product\r\n  media: ProductMedia\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\ninput ProductMediaCreateInput {\r\n  # Alt text for a product media.\r\n  alt: String\r\n  # Represents an image file in a multipart request.\r\n  image: Upload\r\n  # ID of an product.\r\n  product: ID!\r\n  # Represents an URL to an external media.\r\n  mediaUrl: String\r\n}\r\n\r\n# Deletes a product media.\r\ntype ProductMediaDelete {\r\n  product: Product\r\n  media: ProductMedia\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Changes ordering of the product media.\r\ntype ProductMediaReorder {\r\n  product: Product\r\n  media: [ProductMedia!]\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum ProductMediaType {\r\n  # An uploaded image or an URL to an image\r\n  IMAGE\r\n  # A URL to an external video\r\n  VIDEO\r\n}\r\n\r\n# Updates a product media.\r\ntype ProductMediaUpdate {\r\n  product: Product\r\n  media: ProductMedia\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\ninput ProductMediaUpdateInput {\r\n  # Alt text for a product media.\r\n  alt: String\r\n}\r\n\r\ninput ProductOrder {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Specifies the channel in which to sort the data. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n  # Sort product by the selected attribute's values.\r\n  # Note: this doesn't take translations into account yet.\r\n  attributeId: ID\r\n  # Sort products by the selected field.\r\n  field: ProductOrderField\r\n}\r\n\r\nenum ProductOrderField {\r\n  # Sort products by name.\r\n  NAME\r\n  # Sort products by rank. Note: This option is available only with the `search` filter.\r\n  RANK\r\n  # Sort products by price.\r\n  PRICE\r\n  # Sort products by a minimal price of a product's variant.\r\n  MINIMAL_PRICE\r\n  # Sort products by update date.\r\n  DATE\r\n  # Sort products by type.\r\n  TYPE\r\n  # Sort products by publication status.\r\n  PUBLISHED\r\n  # Sort products by publication date.\r\n  PUBLICATION_DATE\r\n  # Sort products by collection. Note: This option is available only for the `Collection.products` query.\r\n  COLLECTION\r\n  # Sort products by rating.\r\n  RATING\r\n}\r\n\r\n# Represents availability of a product in the storefront.\r\ntype ProductPricingInfo {\r\n  # Whether it is in sale or not.\r\n  onSale: Boolean\r\n  # The discount amount if in sale (null otherwise).\r\n  discount: TaxedMoney\r\n  # The discount amount in the local currency.\r\n  discountLocalCurrency: TaxedMoney\r\n  # The discounted price range of the product variants.\r\n  priceRange: TaxedMoneyRange\r\n  # The undiscounted price range of the product variants.\r\n  priceRangeUndiscounted: TaxedMoneyRange\r\n  # The discounted price range of the product variants in the local currency.\r\n  priceRangeLocalCurrency: TaxedMoneyRange\r\n}\r\n\r\n# Reorder product attribute values.\r\ntype ProductReorderAttributeValues {\r\n  # Product from which attribute values are reordered.\r\n  product: Product\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\ninput ProductStockFilterInput {\r\n  warehouseIds: [ID!]\r\n  quantity: IntRangeInput\r\n}\r\n\r\ntype ProductTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String!\r\n  description: JSONString\r\n  # Description of the product (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n  # Returns translated product fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for product.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ProductTranslation\r\n  # Represents an individual item for sale in the storefront.\r\n  product: Product @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n  # List of product attribute values that can be translated.\r\n  attributeValues: [AttributeValueTranslatableContent!]!\r\n}\r\n\r\n# Creates/updates translations for a product.\r\ntype ProductTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  product: Product\r\n}\r\n\r\ntype ProductTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String\r\n  description: JSONString\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n  # Translated description of the product (JSON).\r\n  descriptionJson: JSONString @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `description` field instead.\")\r\n}\r\n\r\n# Represents a type of product. It defines what attributes are available to products of this type.\r\ntype ProductType implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  slug: String!\r\n  hasVariants: Boolean!\r\n  isShippingRequired: Boolean!\r\n  isDigital: Boolean!\r\n  weight: Weight\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # List of products of this type.\r\n  products(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductCountableConnection @deprecated(reason: \"Will be removed in Saleor 4.0. Use the top-level `products` query with the `productTypes` filter.\")\r\n  # A type of tax. Assigned by enabled tax gateway\r\n  taxType: TaxType\r\n  # Variant attributes of that product type.\r\n  variantAttributes(\r\n    # Define scope of returned attributes.\r\n    variantSelection: VariantAttributeScope\r\n  ): [Attribute]\r\n  # Product attributes of that product type.\r\n  productAttributes: [Attribute]\r\n  availableAttributes(\r\n    filter: AttributeFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): AttributeCountableConnection\r\n}\r\n\r\n# Deletes product types.\r\ntype ProductTypeBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\nenum ProductTypeConfigurable {\r\n  CONFIGURABLE\r\n  SIMPLE\r\n}\r\n\r\ntype ProductTypeCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [ProductTypeCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype ProductTypeCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: ProductType!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new product type.\r\ntype ProductTypeCreate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  productType: ProductType\r\n}\r\n\r\n# Deletes a product type.\r\ntype ProductTypeDelete {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  productType: ProductType\r\n}\r\n\r\nenum ProductTypeEnum {\r\n  DIGITAL\r\n  SHIPPABLE\r\n}\r\n\r\ninput ProductTypeFilterInput {\r\n  search: String\r\n  configurable: ProductTypeConfigurable\r\n  productType: ProductTypeEnum\r\n  metadata: [MetadataFilter]\r\n  ids: [ID]\r\n}\r\n\r\ninput ProductTypeInput {\r\n  # Name of the product type.\r\n  name: String\r\n  # Product type slug.\r\n  slug: String\r\n  # Determines if product of this type has multiple variants. This option mainly simplifies product management in the dashboard. There is always at least one variant created under the hood.\r\n  hasVariants: Boolean\r\n  # List of attributes shared among all product variants.\r\n  productAttributes: [ID]\r\n  # List of attributes used to distinguish between different variants of a product.\r\n  variantAttributes: [ID]\r\n  # Determines if shipping is required for products of this variant.\r\n  isShippingRequired: Boolean\r\n  # Determines if products are digital.\r\n  isDigital: Boolean\r\n  # Weight of the ProductType items.\r\n  weight: WeightScalar\r\n  # Tax rate for enabled tax gateway.\r\n  taxCode: String\r\n}\r\n\r\n# Reorder the attributes of a product type.\r\ntype ProductTypeReorderAttributes {\r\n  # Product type from which attributes are reordered.\r\n  productType: ProductType\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\nenum ProductTypeSortField {\r\n  # Sort products by name.\r\n  NAME\r\n  # Sort products by type.\r\n  DIGITAL\r\n  # Sort products by shipping.\r\n  SHIPPING_REQUIRED\r\n}\r\n\r\ninput ProductTypeSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort product types by the selected field.\r\n  field: ProductTypeSortField!\r\n}\r\n\r\n# Updates an existing product type.\r\ntype ProductTypeUpdate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  productType: ProductType\r\n}\r\n\r\n# Updates an existing product.\r\ntype ProductUpdate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  product: Product\r\n}\r\n\r\n# Represents a version of a product such as different size or color.\r\ntype ProductVariant implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  sku: String!\r\n  product: Product!\r\n  trackInventory: Boolean!\r\n  weight: Weight\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Channel given to retrieve this product variant. Also used by federation gateway to resolve this object in a federated query.\r\n  channel: String\r\n  # List of price information in channels for the product.\r\n  channelListings: [ProductVariantChannelListing!]\r\n  # Lists the storefront variant's pricing, the current price and discounts, only meant for displaying.\r\n  pricing(\r\n    # Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.\r\n    address: AddressInput\r\n  ): VariantPricingInfo\r\n  # List of attributes assigned to this variant.\r\n  attributes(\r\n    # Define scope of returned attributes.\r\n    variantSelection: VariantAttributeScope\r\n  ): [SelectedAttribute!]!\r\n  # Gross margin percentage value.\r\n  margin: Int\r\n  # Total quantity ordered.\r\n  quantityOrdered: Int\r\n  # Total revenue generated by a variant in given period of time. Note: this field should be queried using `reportProductSales` query as it uses optimizations suitable for such calculations.\r\n  revenue(period: ReportingPeriod): TaxedMoney\r\n  # List of images for the product variant.\r\n  images: [ProductImage] @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `media` instead.\")\r\n  # List of media for the product variant.\r\n  media: [ProductMedia!]\r\n  # Returns translated product variant fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for product variant.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ProductVariantTranslation\r\n  # Digital content for the product variant.\r\n  digitalContent: DigitalContent\r\n  # Stocks for the product variant.\r\n  stocks(\r\n    # Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.\r\n    address: AddressInput\r\n    # DEPRECATED: use `address` argument instead. This argument will be removed in Saleor 4.0. Two-letter ISO 3166-1 country code.\r\n    countryCode: CountryCode\r\n  ): [Stock]\r\n  # Quantity of a product available for sale in one checkout.\r\n  quantityAvailable(\r\n    # Destination address used to find warehouses where stock availability for this product is checked. If address is empty, uses `Shop.companyAddress` or fallbacks to server's `settings.DEFAULT_COUNTRY` configuration.\r\n    address: AddressInput\r\n    # DEPRECATED: use `address` argument instead. This argument will be removed in Saleor 4.0.Two-letter ISO 3166-1 country code. When provided, the exact quantity from a warehouse operating in shipping zones that contain this country will be returned. Otherwise, it will return the maximum quantity from all shipping zones.\r\n    countryCode: CountryCode\r\n  ): Int!\r\n}\r\n\r\n# Creates product variants for a given product.\r\ntype ProductVariantBulkCreate {\r\n  # Returns how many objects were created.\r\n  count: Int!\r\n  # List of the created variants.\r\n  productVariants: [ProductVariant!]!\r\n  bulkProductErrors: [BulkProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [BulkProductError!]!\r\n}\r\n\r\ninput ProductVariantBulkCreateInput {\r\n  # List of attributes specific to this variant.\r\n  attributes: [BulkAttributeValueInput!]!\r\n  # Stock keeping unit.\r\n  sku: String!\r\n  # Determines if the inventory of this variant should be tracked. If false, the quantity won't change when customers buy this item.\r\n  trackInventory: Boolean\r\n  # Weight of the Product Variant.\r\n  weight: WeightScalar\r\n  # Stocks of a product available for sale.\r\n  stocks: [StockInput!]\r\n  # List of prices assigned to channels.\r\n  channelListings: [ProductVariantChannelListingAddInput!]\r\n}\r\n\r\n# Deletes product variants.\r\ntype ProductVariantBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Represents product varaint channel listing.\r\ntype ProductVariantChannelListing implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  channel: Channel!\r\n  price: Money\r\n  # Cost price of the variant.\r\n  costPrice: Money\r\n  # Gross margin percentage value.\r\n  margin: Int\r\n}\r\n\r\ninput ProductVariantChannelListingAddInput {\r\n  # ID of a channel.\r\n  channelId: ID!\r\n  # Price of the particular variant in channel.\r\n  price: PositiveDecimal!\r\n  # Cost price of the variant in channel.\r\n  costPrice: PositiveDecimal\r\n}\r\n\r\n# Manage product variant prices in channels.\r\ntype ProductVariantChannelListingUpdate {\r\n  # An updated product variant instance.\r\n  variant: ProductVariant\r\n  productChannelListingErrors: [ProductChannelListingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductChannelListingError!]!\r\n}\r\n\r\ntype ProductVariantCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [ProductVariantCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype ProductVariantCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: ProductVariant!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new variant for a product.\r\ntype ProductVariantCreate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  productVariant: ProductVariant\r\n}\r\n\r\ninput ProductVariantCreateInput {\r\n  # List of attributes specific to this variant.\r\n  attributes: [AttributeValueInput!]!\r\n  # Stock keeping unit.\r\n  sku: String\r\n  # Determines if the inventory of this variant should be tracked. If false, the quantity won't change when customers buy this item.\r\n  trackInventory: Boolean\r\n  # Weight of the Product Variant.\r\n  weight: WeightScalar\r\n  # Product ID of which type is the variant.\r\n  product: ID!\r\n  # Stocks of a product available for sale.\r\n  stocks: [StockInput!]\r\n}\r\n\r\n# Deletes a product variant.\r\ntype ProductVariantDelete {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  productVariant: ProductVariant\r\n}\r\n\r\ninput ProductVariantFilterInput {\r\n  search: String\r\n  sku: [String]\r\n  metadata: [MetadataFilter]\r\n}\r\n\r\ninput ProductVariantInput {\r\n  # List of attributes specific to this variant.\r\n  attributes: [AttributeValueInput!]\r\n  # Stock keeping unit.\r\n  sku: String\r\n  # Determines if the inventory of this variant should be tracked. If false, the quantity won't change when customers buy this item.\r\n  trackInventory: Boolean\r\n  # Weight of the Product Variant.\r\n  weight: WeightScalar\r\n}\r\n\r\n# Reorder the variants of a product. Mutation updates updated_at on product and triggers PRODUCT_UPDATED webhook.\r\ntype ProductVariantReorder {\r\n  product: Product\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Reorder product variant attribute values.\r\ntype ProductVariantReorderAttributeValues {\r\n  # Product variant from which attribute values are reordered.\r\n  productVariant: ProductVariant\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Set default variant for a product. Mutation triggers PRODUCT_UPDATED webhook.\r\ntype ProductVariantSetDefault {\r\n  product: Product\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Creates stocks for product variant.\r\ntype ProductVariantStocksCreate {\r\n  # Updated product variant.\r\n  productVariant: ProductVariant\r\n  bulkStockErrors: [BulkStockError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [BulkStockError!]!\r\n}\r\n\r\n# Delete stocks from product variant.\r\ntype ProductVariantStocksDelete {\r\n  # Updated product variant.\r\n  productVariant: ProductVariant\r\n  stockErrors: [StockError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [StockError!]!\r\n}\r\n\r\n# Update stocks for product variant.\r\ntype ProductVariantStocksUpdate {\r\n  # Updated product variant.\r\n  productVariant: ProductVariant\r\n  bulkStockErrors: [BulkStockError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [BulkStockError!]!\r\n}\r\n\r\ntype ProductVariantTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # Returns translated product variant fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for product variant.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ProductVariantTranslation\r\n  # Represents a version of a product such as different size or color.\r\n  productVariant: ProductVariant @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n  # List of product variant attribute values that can be translated.\r\n  attributeValues: [AttributeValueTranslatableContent!]!\r\n}\r\n\r\n# Creates/updates translations for a product variant.\r\ntype ProductVariantTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  productVariant: ProductVariant\r\n}\r\n\r\ntype ProductVariantTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\n# Updates an existing variant for product.\r\ntype ProductVariantUpdate {\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n  productVariant: ProductVariant\r\n}\r\n\r\ninput PublishableChannelListingInput {\r\n  # ID of a channel.\r\n  channelId: ID!\r\n  # Determines if object is visible to customers.\r\n  isPublished: Boolean\r\n  # Publication date. ISO 8601 standard.\r\n  publicationDate: Date\r\n}\r\n\r\ntype Query {\r\n  # Look up a webhook by ID.\r\n  webhook(\r\n    # ID of the webhook.\r\n    id: ID!\r\n  ): Webhook\r\n  # List of all available webhook events.\r\n  webhookEvents: [WebhookEvent]\r\n  # Retrieve a sample payload for a given webhook event based on real data. It can be useful for some integrations where sample payload is required.\r\n  webhookSamplePayload(\r\n    # Name of the requested event type.\r\n    eventType: WebhookSampleEventTypeEnum!\r\n  ): JSONString\r\n  # Look up a warehouse by ID.\r\n  warehouse(\r\n    # ID of an warehouse\r\n    id: ID!\r\n  ): Warehouse\r\n  # List of warehouses.\r\n  warehouses(\r\n    filter: WarehouseFilterInput\r\n    sortBy: WarehouseSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): WarehouseCountableConnection\r\n  # Returns a list of all translatable items of a given kind.\r\n  translations(\r\n    # Kind of objects to retrieve.\r\n    kind: TranslatableKinds!\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): TranslatableItemConnection\r\n  translation(\r\n    # ID of the object to retrieve.\r\n    id: ID!\r\n    # Kind of the object to retrieve.\r\n    kind: TranslatableKinds!\r\n  ): TranslatableItem\r\n  # Look up a stock by ID\r\n  stock(\r\n    # ID of an warehouse\r\n    id: ID!\r\n  ): Stock\r\n  # List of stocks.\r\n  stocks(\r\n    filter: StockFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): StockCountableConnection\r\n  # Return information about the shop.\r\n  shop: Shop!\r\n  # Order related settings from site settings.\r\n  orderSettings: OrderSettings\r\n  # Look up a shipping zone by ID.\r\n  shippingZone(\r\n    # ID of the shipping zone.\r\n    id: ID!\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): ShippingZone\r\n  # List of the shop's shipping zones.\r\n  shippingZones(\r\n    # Filtering options for shipping zones.\r\n    filter: ShippingZoneFilterInput\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ShippingZoneCountableConnection\r\n  # Look up digital content by ID.\r\n  digitalContent(\r\n    # ID of the digital content.\r\n    id: ID!\r\n  ): DigitalContent\r\n  # List of digital content.\r\n  digitalContents(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): DigitalContentCountableConnection\r\n  # List of the shop's categories.\r\n  categories(\r\n    # Filtering options for categories.\r\n    filter: CategoryFilterInput\r\n    # Sort categories.\r\n    sortBy: CategorySortingInput\r\n    # Filter categories by the nesting level in the category tree.\r\n    level: Int\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CategoryCountableConnection\r\n  # Look up a category by ID or slug.\r\n  category(\r\n    # ID of the category.\r\n    id: ID\r\n    # Slug of the category\r\n    slug: String\r\n  ): Category\r\n  # Look up a collection by ID.\r\n  collection(\r\n    # ID of the collection.\r\n    id: ID\r\n    # Slug of the category\r\n    slug: String\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): Collection\r\n  # List of the shop's collections.\r\n  collections(\r\n    # Filtering options for collections.\r\n    filter: CollectionFilterInput\r\n    # Sort collections.\r\n    sortBy: CollectionSortingInput\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CollectionCountableConnection\r\n  # Look up a product by ID.\r\n  product(\r\n    # ID of the product.\r\n    id: ID\r\n    # Slug of the product.\r\n    slug: String\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): Product\r\n  # List of the shop's products.\r\n  products(\r\n    # Filtering options for products.\r\n    filter: ProductFilterInput\r\n    # Sort products.\r\n    sortBy: ProductOrder\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductCountableConnection\r\n  # Look up a product type by ID.\r\n  productType(\r\n    # ID of the product type.\r\n    id: ID!\r\n  ): ProductType\r\n  # List of the shop's product types.\r\n  productTypes(\r\n    # Filtering options for product types.\r\n    filter: ProductTypeFilterInput\r\n    # Sort product types.\r\n    sortBy: ProductTypeSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductTypeCountableConnection\r\n  # Look up a product variant by ID or SKU.\r\n  productVariant(\r\n    # ID of the product variant.\r\n    id: ID\r\n    # Sku of the product variant.\r\n    sku: String\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): ProductVariant\r\n  # List of product variants.\r\n  productVariants(\r\n    # Filter product variants by given IDs.\r\n    ids: [ID]\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Filtering options for product variant.\r\n    filter: ProductVariantFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductVariantCountableConnection\r\n  # List of top selling products.\r\n  reportProductSales(\r\n    # Span of time.\r\n    period: ReportingPeriod!\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String!\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductVariantCountableConnection\r\n  # Look up a payment by ID.\r\n  payment(\r\n    # ID of the payment.\r\n    id: ID!\r\n  ): Payment\r\n  # List of payments.\r\n  payments(\r\n    # Filtering options for payments.\r\n    filter: PaymentFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): PaymentCountableConnection\r\n  # Look up a page by ID or slug.\r\n  page(\r\n    # ID of the page.\r\n    id: ID\r\n    # The slug of the page.\r\n    slug: String\r\n  ): Page\r\n  # List of the shop's pages.\r\n  pages(\r\n    # Sort pages.\r\n    sortBy: PageSortingInput\r\n    # Filtering options for pages.\r\n    filter: PageFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): PageCountableConnection\r\n  # Look up a page type by ID.\r\n  pageType(\r\n    # ID of the page type.\r\n    id: ID!\r\n  ): PageType\r\n  # List of the page types.\r\n  pageTypes(\r\n    # Sort page types.\r\n    sortBy: PageTypeSortingInput\r\n    # Filtering options for page types.\r\n    filter: PageTypeFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): PageTypeCountableConnection\r\n  # List of activity events to display on homepage (at the moment it only contains order-events).\r\n  homepageEvents(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): OrderEventCountableConnection\r\n  # Look up an order by ID.\r\n  order(\r\n    # ID of an order.\r\n    id: ID!\r\n  ): Order\r\n  # List of orders.\r\n  orders(\r\n    # Sort orders.\r\n    sortBy: OrderSortingInput\r\n    # Filtering options for orders.\r\n    filter: OrderFilterInput\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): OrderCountableConnection\r\n  # List of draft orders.\r\n  draftOrders(\r\n    # Sort draft orders.\r\n    sortBy: OrderSortingInput\r\n    # Filtering options for draft orders.\r\n    filter: OrderDraftFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): OrderCountableConnection\r\n  # Return the total sales amount from a specific period.\r\n  ordersTotal(\r\n    # A period of time.\r\n    period: ReportingPeriod\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): TaxedMoney\r\n  # Look up an order by token.\r\n  orderByToken(\r\n    # The order's token.\r\n    token: UUID!\r\n  ): Order\r\n  # Look up a navigation menu by ID or name.\r\n  menu(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # ID of the menu.\r\n    id: ID\r\n    # The menu's name.\r\n    name: String\r\n    # The menu's slug.\r\n    slug: String\r\n  ): Menu\r\n  # List of the storefront's menus.\r\n  menus(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Sort menus.\r\n    sortBy: MenuSortingInput\r\n    # Filtering options for menus.\r\n    filter: MenuFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): MenuCountableConnection\r\n  # Look up a menu item by ID.\r\n  menuItem(\r\n    # ID of the menu item.\r\n    id: ID!\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): MenuItem\r\n  # List of the storefronts's menu items.\r\n  menuItems(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Sort menus items.\r\n    sortBy: MenuItemSortingInput\r\n    # Filtering options for menu items.\r\n    filter: MenuItemFilterInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): MenuItemCountableConnection\r\n  # Look up a gift card by ID.\r\n  giftCard(\r\n    # ID of the gift card.\r\n    id: ID!\r\n  ): GiftCard\r\n  # List of gift cards.\r\n  giftCards(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): GiftCardCountableConnection\r\n  # Look up a plugin by ID.\r\n  plugin(\r\n    # ID of the plugin.\r\n    id: ID!\r\n  ): Plugin\r\n  # List of plugins.\r\n  plugins(\r\n    # Filtering options for plugins.\r\n    filter: PluginFilterInput\r\n    # Sort plugins.\r\n    sortBy: PluginSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): PluginCountableConnection\r\n  # Look up a sale by ID.\r\n  sale(\r\n    # ID of the sale.\r\n    id: ID!\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): Sale\r\n  # List of the shop's sales.\r\n  sales(\r\n    # Filtering options for sales.\r\n    filter: SaleFilterInput\r\n    # Sort sales.\r\n    sortBy: SaleSortingInput\r\n    # Search sales by name, value or type. DEPRECATED: Will be removed in Saleor 4.0. Use `filter.search` input instead.\r\n    query: String\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): SaleCountableConnection\r\n  # Look up a voucher by ID.\r\n  voucher(\r\n    # ID of the voucher.\r\n    id: ID!\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): Voucher\r\n  # List of the shop's vouchers.\r\n  vouchers(\r\n    # Filtering options for vouchers.\r\n    filter: VoucherFilterInput\r\n    # Sort voucher.\r\n    sortBy: VoucherSortingInput\r\n    # Search vouchers by name or code. DEPRECATED: Will be removed in Saleor 4.0. Use `filter.search` input instead.\r\n    query: String\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): VoucherCountableConnection\r\n  # Look up a export file by ID.\r\n  exportFile(\r\n    # ID of the export file job.\r\n    id: ID!\r\n  ): ExportFile\r\n  # List of export files.\r\n  exportFiles(\r\n    # Filtering options for export files.\r\n    filter: ExportFileFilterInput\r\n    # Sort export files.\r\n    sortBy: ExportFileSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ExportFileCountableConnection\r\n  # List of all tax rates available from tax gateway.\r\n  taxTypes: [TaxType]\r\n  # Look up a checkout by token and slug of channel.\r\n  checkout(\r\n    # The checkout's token.\r\n    token: UUID\r\n  ): Checkout\r\n  # List of checkouts.\r\n  checkouts(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CheckoutCountableConnection\r\n  # List of checkout lines.\r\n  checkoutLines(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CheckoutLineCountableConnection\r\n  # Look up a channel by ID.\r\n  channel(\r\n    # ID of the channel.\r\n    id: ID\r\n  ): Channel\r\n  # List of all channels.\r\n  channels: [Channel!]\r\n  # List of the shop's attributes.\r\n  attributes(\r\n    # Filtering options for attributes.\r\n    filter: AttributeFilterInput\r\n    # Sorting options for attributes.\r\n    sortBy: AttributeSortingInput\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): AttributeCountableConnection\r\n  # Look up an attribute by ID.\r\n  attribute(\r\n    # ID of the attribute.\r\n    id: ID\r\n    # Slug of the attribute.\r\n    slug: String\r\n  ): Attribute\r\n  # List of all apps installations\r\n  appsInstallations: [AppInstallation!]!\r\n  # List of the apps.\r\n  apps(\r\n    # Filtering options for apps.\r\n    filter: AppFilterInput\r\n    # Sort apps.\r\n    sortBy: AppSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): AppCountableConnection\r\n  # Look up an app by ID. If ID is not provided, return the currently authenticated app.\r\n  app(\r\n    # ID of the app.\r\n    id: ID\r\n  ): App\r\n  # Returns address validation rules.\r\n  addressValidationRules(\r\n    # Two-letter ISO 3166-1 country code.\r\n    countryCode: CountryCode!\r\n    # Designation of a region, province or state.\r\n    countryArea: String\r\n    # City or a town name.\r\n    city: String\r\n    # Sublocality like a district.\r\n    cityArea: String\r\n  ): AddressValidationData\r\n  # Look up an address by ID.\r\n  address(\r\n    # ID of an address.\r\n    id: ID!\r\n  ): Address\r\n  # List of the shop's customers.\r\n  customers(\r\n    # Filtering options for customers.\r\n    filter: CustomerFilterInput\r\n    # Sort customers.\r\n    sortBy: UserSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): UserCountableConnection\r\n  # List of permission groups.\r\n  permissionGroups(\r\n    # Filtering options for permission groups.\r\n    filter: PermissionGroupFilterInput\r\n    # Sort permission groups.\r\n    sortBy: PermissionGroupSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): GroupCountableConnection\r\n  # Look up permission group by ID.\r\n  permissionGroup(\r\n    # ID of the group.\r\n    id: ID!\r\n  ): Group\r\n  # Return the currently authenticated user.\r\n  me: User\r\n  # List of the shop's staff users.\r\n  staffUsers(\r\n    # Filtering options for staff users.\r\n    filter: StaffUserInput\r\n    # Sort staff users.\r\n    sortBy: UserSortingInput\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): UserCountableConnection\r\n  # Look up a user by ID or email address.\r\n  user(\r\n    # ID of the user.\r\n    id: ID\r\n    # Email address of the user.\r\n    email: String\r\n  ): User\r\n  _entities(representations: [_Any]): [_Entity]\r\n  _service: _Service\r\n}\r\n\r\n# Represents a reduced VAT rate for a particular type of goods.\r\ntype ReducedRate {\r\n  # Reduced VAT rate in percent.\r\n  rate: Float!\r\n  # A type of goods.\r\n  rateType: String!\r\n}\r\n\r\n# Refresh JWT token. Mutation tries to take refreshToken from the input.If it fails it will try to take refreshToken from the http-only cookie -refreshToken. csrfToken is required when refreshToken is provided as a cookie.\r\ntype RefreshToken {\r\n  # JWT token, required to authenticate.\r\n  token: String\r\n  # A user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\ninput ReorderInput {\r\n  # The ID of the item to move.\r\n  id: ID!\r\n  # The new relative sorting position of the item (from -inf to +inf). 1 moves the item one position forward, -1 moves the item one position backward, 0 leaves the item unchanged.\r\n  sortOrder: Int\r\n}\r\n\r\nenum ReportingPeriod {\r\n  TODAY\r\n  THIS_MONTH\r\n}\r\n\r\n# Request email change of the logged in user.\r\ntype RequestEmailChange {\r\n  # A user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Sends an email with the account password modification link.\r\ntype RequestPasswordReset {\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Sales allow creating discounts for categories, collections or products and are visible to all the customers.\r\ntype Sale implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  type: SaleType!\r\n  startDate: DateTime!\r\n  endDate: DateTime\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # List of categories this sale applies to.\r\n  categories(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CategoryCountableConnection\r\n  # List of collections this sale applies to.\r\n  collections(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CollectionCountableConnection\r\n  # List of products this sale applies to.\r\n  products(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductCountableConnection\r\n  # Returns translated sale fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for sale.\r\n    languageCode: LanguageCodeEnum!\r\n  ): SaleTranslation\r\n  # List of channels available for the sale.\r\n  channelListings: [SaleChannelListing!]\r\n  # Sale value.\r\n  discountValue: Float\r\n  # Currency code for sale.\r\n  currency: String\r\n}\r\n\r\n# Adds products, categories, collections to a voucher.\r\ntype SaleAddCatalogues {\r\n  # Sale of which catalogue IDs will be modified.\r\n  sale: Sale\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\n# Deletes sales.\r\ntype SaleBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\n# Represents sale channel listing.\r\ntype SaleChannelListing implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  channel: Channel!\r\n  discountValue: Float!\r\n  currency: String!\r\n}\r\n\r\ninput SaleChannelListingAddInput {\r\n  # ID of a channel.\r\n  channelId: ID!\r\n  # The value of the discount.\r\n  discountValue: PositiveDecimal!\r\n}\r\n\r\ninput SaleChannelListingInput {\r\n  # List of channels to which the sale should be assigned.\r\n  addChannels: [SaleChannelListingAddInput!]\r\n  # List of channels from which the sale should be unassigned.\r\n  removeChannels: [ID!]\r\n}\r\n\r\n# Manage sale's availability in channels.\r\ntype SaleChannelListingUpdate {\r\n  # An updated sale instance.\r\n  sale: Sale\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\ntype SaleCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [SaleCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype SaleCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Sale!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new sale.\r\ntype SaleCreate {\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n  sale: Sale\r\n}\r\n\r\n# Deletes a sale.\r\ntype SaleDelete {\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n  sale: Sale\r\n}\r\n\r\ninput SaleFilterInput {\r\n  status: [DiscountStatusEnum]\r\n  saleType: DiscountValueTypeEnum\r\n  started: DateTimeRangeInput\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n}\r\n\r\ninput SaleInput {\r\n  # Voucher name.\r\n  name: String\r\n  # Fixed or percentage.\r\n  type: DiscountValueTypeEnum\r\n  # Value of the voucher.\r\n  value: PositiveDecimal\r\n  # Products related to the discount.\r\n  products: [ID]\r\n  # Categories related to the discount.\r\n  categories: [ID]\r\n  # Collections related to the discount.\r\n  collections: [ID]\r\n  # Start date of the voucher in ISO 8601 format.\r\n  startDate: DateTime\r\n  # End date of the voucher in ISO 8601 format.\r\n  endDate: DateTime\r\n}\r\n\r\n# Removes products, categories, collections from a sale.\r\ntype SaleRemoveCatalogues {\r\n  # Sale of which catalogue IDs will be modified.\r\n  sale: Sale\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\nenum SaleSortField {\r\n  # Sort sales by name.\r\n  NAME\r\n  # Sort sales by start date.\r\n  START_DATE\r\n  # Sort sales by end date.\r\n  END_DATE\r\n  # Sort sales by value.\r\n  VALUE\r\n  # Sort sales by type.\r\n  TYPE\r\n}\r\n\r\ninput SaleSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Specifies the channel in which to sort the data. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n  # Sort sales by the selected field.\r\n  field: SaleSortField!\r\n}\r\n\r\ntype SaleTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  # Returns translated sale fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for sale.\r\n    languageCode: LanguageCodeEnum!\r\n  ): SaleTranslation\r\n  # Sales allow creating discounts for categories, collections or products and are visible to all the customers.\r\n  sale: Sale @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\n# Creates/updates translations for a sale.\r\ntype SaleTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  sale: Sale\r\n}\r\n\r\ntype SaleTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\n# An enumeration.\r\nenum SaleType {\r\n  # fixed\r\n  FIXED\r\n  # %\r\n  PERCENTAGE\r\n}\r\n\r\n# Updates a sale.\r\ntype SaleUpdate {\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n  sale: Sale\r\n}\r\n\r\n# Represents a custom attribute.\r\ntype SelectedAttribute {\r\n  # Name of an attribute displayed in the interface.\r\n  attribute: Attribute!\r\n  # Values of an attribute.\r\n  values: [AttributeValue]!\r\n}\r\n\r\ninput SeoInput {\r\n  # SEO title.\r\n  title: String\r\n  # SEO description.\r\n  description: String\r\n}\r\n\r\n# Sets the user's password from the token sent by email using the RequestPasswordReset mutation.\r\ntype SetPassword {\r\n  # JWT token, required to authenticate.\r\n  token: String\r\n  # JWT refresh token, required to re-generate access token.\r\n  refreshToken: String\r\n  # CSRF token required to re-generate access token.\r\n  csrfToken: String\r\n  # A user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\ntype ShippingError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ShippingErrorCode!\r\n  # List of warehouse IDs which causes the error.\r\n  warehouses: [ID!]\r\n  # List of channels IDs which causes the error.\r\n  channels: [ID!]\r\n}\r\n\r\n# An enumeration.\r\nenum ShippingErrorCode {\r\n  ALREADY_EXISTS\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  MAX_LESS_THAN_MIN\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n  DUPLICATED_INPUT_ITEM\r\n}\r\n\r\n# Shipping method are the methods you'll use to get customer's orders to them. They are directly exposed to the customers.\r\ntype ShippingMethod implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  description: JSONString\r\n  minimumOrderWeight: Weight\r\n  maximumOrderWeight: Weight\r\n  maximumDeliveryDays: Int\r\n  minimumDeliveryDays: Int\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Type of the shipping method.\r\n  type: ShippingMethodTypeEnum\r\n  # Returns translated shipping method fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for shipping method.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ShippingMethodTranslation\r\n  # List of channels available for the method.\r\n  channelListings: [ShippingMethodChannelListing!]\r\n  # The price of the cheapest variant (including discounts).\r\n  price: Money\r\n  # The price of the cheapest variant (including discounts).\r\n  maximumOrderPrice: Money\r\n  # The price of the cheapest variant (including discounts).\r\n  minimumOrderPrice: Money\r\n  # Postal code ranges rule of exclusion or inclusion of the shipping method.\r\n  postalCodeRules: [ShippingMethodPostalCodeRule]\r\n  # List of excluded products for the shipping method.\r\n  excludedProducts(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductCountableConnection\r\n}\r\n\r\n# Represents shipping method channel listing.\r\ntype ShippingMethodChannelListing implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  channel: Channel!\r\n  minimumOrderPrice: Money\r\n  maximumOrderPrice: Money\r\n  price: Money\r\n}\r\n\r\ninput ShippingMethodChannelListingAddInput {\r\n  # ID of a channel.\r\n  channelId: ID!\r\n  # Shipping price of the shipping method in this channel.\r\n  price: PositiveDecimal\r\n  # Minimum order price to use this shipping method.\r\n  minimumOrderPrice: PositiveDecimal\r\n  # Maximum order price to use this shipping method.\r\n  maximumOrderPrice: PositiveDecimal\r\n}\r\n\r\ninput ShippingMethodChannelListingInput {\r\n  # List of channels to which the shipping method should be assigned.\r\n  addChannels: [ShippingMethodChannelListingAddInput!]\r\n  # List of channels from which the shipping method should be unassigned.\r\n  removeChannels: [ID!]\r\n}\r\n\r\n# Manage shipping method's availability in channels.\r\ntype ShippingMethodChannelListingUpdate {\r\n  # An updated shipping method instance.\r\n  shippingMethod: ShippingMethod\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\n# Represents shipping method postal code rule.\r\ntype ShippingMethodPostalCodeRule implements Node {\r\n  # Start address range.\r\n  start: String\r\n  # End address range.\r\n  end: String\r\n  # Inclusion type of the postal code rule.\r\n  inclusionType: PostalCodeRuleInclusionTypeEnum\r\n  # The ID of the object.\r\n  id: ID!\r\n}\r\n\r\ntype ShippingMethodTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  description: JSONString\r\n  # Returns translated shipping method fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for shipping method.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ShippingMethodTranslation\r\n  # Shipping method are the methods you'll use to get customer's orders  to them. They are directly exposed to the customers.\r\n  shippingMethod: ShippingMethod @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\ntype ShippingMethodTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String\r\n  description: JSONString\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\n# An enumeration.\r\nenum ShippingMethodTypeEnum {\r\n  PRICE\r\n  WEIGHT\r\n}\r\n\r\ninput ShippingPostalCodeRulesCreateInputRange {\r\n  # Start range of the postal code.\r\n  start: String!\r\n  # End range of the postal code.\r\n  end: String\r\n}\r\n\r\n# Deletes shipping prices.\r\ntype ShippingPriceBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\n# Creates a new shipping price.\r\ntype ShippingPriceCreate {\r\n  # A shipping zone to which the shipping method belongs.\r\n  shippingZone: ShippingZone\r\n  shippingMethod: ShippingMethod\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\n# Deletes a shipping price.\r\ntype ShippingPriceDelete {\r\n  # A shipping method to delete.\r\n  shippingMethod: ShippingMethod\r\n  # A shipping zone to which the shipping method belongs.\r\n  shippingZone: ShippingZone\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\n# Exclude products from shipping price.\r\ntype ShippingPriceExcludeProducts {\r\n  # A shipping method with new list of excluded products.\r\n  shippingMethod: ShippingMethod\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\ninput ShippingPriceExcludeProductsInput {\r\n  # List of products which will be excluded.\r\n  products: [ID]!\r\n}\r\n\r\ninput ShippingPriceInput {\r\n  # Name of the shipping method.\r\n  name: String\r\n  # Shipping method description (JSON).\r\n  description: JSONString\r\n  # Minimum order weight to use this shipping method.\r\n  minimumOrderWeight: WeightScalar\r\n  # Maximum order weight to use this shipping method.\r\n  maximumOrderWeight: WeightScalar\r\n  # Maximum number of days for delivery.\r\n  maximumDeliveryDays: Int\r\n  # Minimal number of days for delivery.\r\n  minimumDeliveryDays: Int\r\n  # Shipping type: price or weight based.\r\n  type: ShippingMethodTypeEnum\r\n  # Shipping zone this method belongs to.\r\n  shippingZone: ID\r\n  # Postal code rules to add.\r\n  addPostalCodeRules: [ShippingPostalCodeRulesCreateInputRange!]\r\n  # Postal code rules to delete.\r\n  deletePostalCodeRules: [ID!]\r\n  # Inclusion type for currently assigned postal code rules.\r\n  inclusionType: PostalCodeRuleInclusionTypeEnum\r\n}\r\n\r\n# Remove product from excluded list for shipping price.\r\ntype ShippingPriceRemoveProductFromExclude {\r\n  # A shipping method with new list of excluded products.\r\n  shippingMethod: ShippingMethod\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\n# Creates/updates translations for a shipping method.\r\ntype ShippingPriceTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  shippingMethod: ShippingMethod\r\n}\r\n\r\ninput ShippingPriceTranslationInput {\r\n  name: String\r\n  # Translated shipping method description (JSON).\r\n  description: JSONString\r\n}\r\n\r\n# Updates a new shipping price.\r\ntype ShippingPriceUpdate {\r\n  # A shipping zone to which the shipping method belongs.\r\n  shippingZone: ShippingZone\r\n  shippingMethod: ShippingMethod\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\n# Represents a shipping zone in the shop. Zones are the concept used only for grouping shipping methods in the dashboard, and are never exposed to the customers directly.\r\ntype ShippingZone implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  default: Boolean!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Lowest and highest prices for the shipping.\r\n  priceRange: MoneyRange\r\n  # List of countries available for the method.\r\n  countries: [CountryDisplay]\r\n  # List of shipping methods available for orders shipped to countries within this shipping zone.\r\n  shippingMethods: [ShippingMethod]\r\n  # List of warehouses for shipping zone.\r\n  warehouses: [Warehouse!]!\r\n  # List of channels for shipping zone.\r\n  channels: [Channel!]!\r\n  # Description of a shipping zone.\r\n  description: String\r\n}\r\n\r\n# Deletes shipping zones.\r\ntype ShippingZoneBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n}\r\n\r\ntype ShippingZoneCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [ShippingZoneCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype ShippingZoneCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: ShippingZone!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new shipping zone.\r\ntype ShippingZoneCreate {\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n  shippingZone: ShippingZone\r\n}\r\n\r\ninput ShippingZoneCreateInput {\r\n  # Shipping zone's name. Visible only to the staff.\r\n  name: String\r\n  # Description of the shipping zone.\r\n  description: String\r\n  # List of countries in this shipping zone.\r\n  countries: [String]\r\n  # Default shipping zone will be used for countries not covered by other zones.\r\n  default: Boolean\r\n  # List of warehouses to assign to a shipping zone\r\n  addWarehouses: [ID]\r\n  # List of channels to assign to the shipping zone.\r\n  addChannels: [ID!]\r\n}\r\n\r\n# Deletes a shipping zone.\r\ntype ShippingZoneDelete {\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n  shippingZone: ShippingZone\r\n}\r\n\r\ninput ShippingZoneFilterInput {\r\n  search: String\r\n  channels: [ID]\r\n}\r\n\r\n# Updates a new shipping zone.\r\ntype ShippingZoneUpdate {\r\n  shippingErrors: [ShippingError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShippingError!]!\r\n  shippingZone: ShippingZone\r\n}\r\n\r\ninput ShippingZoneUpdateInput {\r\n  # Shipping zone's name. Visible only to the staff.\r\n  name: String\r\n  # Description of the shipping zone.\r\n  description: String\r\n  # List of countries in this shipping zone.\r\n  countries: [String]\r\n  # Default shipping zone will be used for countries not covered by other zones.\r\n  default: Boolean\r\n  # List of warehouses to assign to a shipping zone\r\n  addWarehouses: [ID]\r\n  # List of channels to assign to the shipping zone.\r\n  addChannels: [ID!]\r\n  # List of warehouses to unassign from a shipping zone\r\n  removeWarehouses: [ID]\r\n  # List of channels to unassign from the shipping zone.\r\n  removeChannels: [ID!]\r\n}\r\n\r\n# Represents a shop resource containing general shop data and configuration.\r\ntype Shop {\r\n  # List of available payment gateways.\r\n  availablePaymentGateways(\r\n    # DEPRECATED: use `channel` argument instead. This argument will be removed in Saleor 4.0.A currency for which gateways will be returned.\r\n    currency: String\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): [PaymentGateway!]!\r\n  # List of available external authentications.\r\n  availableExternalAuthentications: [ExternalAuthentication!]!\r\n  # Shipping methods that are available for the shop.\r\n  availableShippingMethods(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String!\r\n    # Address for which available shipping methods should be returned.\r\n    address: AddressInput\r\n  ): [ShippingMethod]\r\n  # List of countries available in the shop.\r\n  countries(\r\n    # DEPRECATED: This argument will be removed in Saleor 4.0. A language code to return the translation for.\r\n    languageCode: LanguageCodeEnum\r\n  ): [CountryDisplay!]!\r\n  # Shop's default country.\r\n  defaultCountry: CountryDisplay\r\n  # Default shop's email sender's name.\r\n  defaultMailSenderName: String\r\n  # Default shop's email sender's address.\r\n  defaultMailSenderAddress: String\r\n  # Shop's description.\r\n  description: String\r\n  # Shop's domain data.\r\n  domain: Domain!\r\n  # List of the shops's supported languages.\r\n  languages: [LanguageDisplay]!\r\n  # Shop's name.\r\n  name: String!\r\n  # List of available permissions.\r\n  permissions: [Permission]!\r\n  # List of possible phone prefixes.\r\n  phonePrefixes: [String]!\r\n  # Header text.\r\n  headerText: String\r\n  # Include taxes in prices.\r\n  includeTaxesInPrices: Boolean!\r\n  # Display prices with tax in store.\r\n  displayGrossPrices: Boolean!\r\n  # Charge taxes on shipping.\r\n  chargeTaxesOnShipping: Boolean!\r\n  # Enable inventory tracking.\r\n  trackInventoryByDefault: Boolean\r\n  # Default weight unit.\r\n  defaultWeightUnit: WeightUnitsEnum\r\n  # Returns translated shop fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for shop.\r\n    languageCode: LanguageCodeEnum!\r\n  ): ShopTranslation\r\n  # Enable automatic fulfillment for all digital products.\r\n  automaticFulfillmentDigitalProducts: Boolean\r\n  # Default number of max downloads per digital content URL.\r\n  defaultDigitalMaxDownloads: Int\r\n  # Default number of days which digital content URL will be valid.\r\n  defaultDigitalUrlValidDays: Int\r\n  # Company address.\r\n  companyAddress: Address\r\n  # URL of a view where customers can set their password.\r\n  customerSetPasswordUrl: String\r\n  # List of staff notification recipients.\r\n  staffNotificationRecipients: [StaffNotificationRecipient]\r\n  # Resource limitations and current usage if any set for a shop\r\n  limits: LimitInfo!\r\n  # Saleor API version.\r\n  version: String!\r\n}\r\n\r\n# Update the shop's address. If the `null` value is passed, the currently selected address will be deleted.\r\ntype ShopAddressUpdate {\r\n  # Updated shop.\r\n  shop: Shop\r\n  shopErrors: [ShopError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShopError!]!\r\n}\r\n\r\n# Updates site domain of the shop.\r\ntype ShopDomainUpdate {\r\n  # Updated shop.\r\n  shop: Shop\r\n  shopErrors: [ShopError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShopError!]!\r\n}\r\n\r\ntype ShopError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: ShopErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum ShopErrorCode {\r\n  ALREADY_EXISTS\r\n  CANNOT_FETCH_TAX_RATES\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\n# Fetch tax rates.\r\ntype ShopFetchTaxRates {\r\n  # Updated shop.\r\n  shop: Shop\r\n  shopErrors: [ShopError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShopError!]!\r\n}\r\n\r\ninput ShopSettingsInput {\r\n  # Header text.\r\n  headerText: String\r\n  # SEO description.\r\n  description: String\r\n  # Include taxes in prices.\r\n  includeTaxesInPrices: Boolean\r\n  # Display prices with tax in store.\r\n  displayGrossPrices: Boolean\r\n  # Charge taxes on shipping.\r\n  chargeTaxesOnShipping: Boolean\r\n  # Enable inventory tracking.\r\n  trackInventoryByDefault: Boolean\r\n  # Default weight unit.\r\n  defaultWeightUnit: WeightUnitsEnum\r\n  # Enable automatic fulfillment for all digital products.\r\n  automaticFulfillmentDigitalProducts: Boolean\r\n  # Default number of max downloads per digital content URL.\r\n  defaultDigitalMaxDownloads: Int\r\n  # Default number of days which digital content URL will be valid.\r\n  defaultDigitalUrlValidDays: Int\r\n  # Default email sender's name.\r\n  defaultMailSenderName: String\r\n  # Default email sender's address.\r\n  defaultMailSenderAddress: String\r\n  # URL of a view where customers can set their password.\r\n  customerSetPasswordUrl: String\r\n}\r\n\r\n# Creates/updates translations for shop settings.\r\ntype ShopSettingsTranslate {\r\n  # Updated shop settings.\r\n  shop: Shop\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n}\r\n\r\ninput ShopSettingsTranslationInput {\r\n  headerText: String\r\n  description: String\r\n}\r\n\r\n# Updates shop settings.\r\ntype ShopSettingsUpdate {\r\n  # Updated shop.\r\n  shop: Shop\r\n  shopErrors: [ShopError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShopError!]!\r\n}\r\n\r\ntype ShopTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  headerText: String!\r\n  description: String!\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\ninput SiteDomainInput {\r\n  # Domain name for shop.\r\n  domain: String\r\n  # Shop site name.\r\n  name: String\r\n}\r\n\r\n# Deletes staff users.\r\ntype StaffBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  staffErrors: [StaffError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [StaffError!]!\r\n}\r\n\r\n# Creates a new staff user.\r\ntype StaffCreate {\r\n  staffErrors: [StaffError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [StaffError!]!\r\n  user: User\r\n}\r\n\r\ninput StaffCreateInput {\r\n  # Given name.\r\n  firstName: String\r\n  # Family name.\r\n  lastName: String\r\n  # The unique email address of the user.\r\n  email: String\r\n  # User account is active.\r\n  isActive: Boolean\r\n  # A note about the user.\r\n  note: String\r\n  # List of permission group IDs to which user should be assigned.\r\n  addGroups: [ID!]\r\n  # URL of a view where users should be redirected to set the password. URL in RFC 1808 format.\r\n  redirectUrl: String\r\n}\r\n\r\n# Deletes a staff user.\r\ntype StaffDelete {\r\n  staffErrors: [StaffError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [StaffError!]!\r\n  user: User\r\n}\r\n\r\ntype StaffError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: AccountErrorCode!\r\n  # A type of address that causes the error.\r\n  addressType: AddressTypeEnum\r\n  # List of permissions which causes the error.\r\n  permissions: [PermissionEnum!]\r\n  # List of permission group IDs which cause the error.\r\n  groups: [ID!]\r\n  # List of user IDs which causes the error.\r\n  users: [ID!]\r\n}\r\n\r\nenum StaffMemberStatus {\r\n  # User account has been activated.\r\n  ACTIVE\r\n  # User account has not been activated yet.\r\n  DEACTIVATED\r\n}\r\n\r\n# Represents a recipient of email notifications send by Saleor, such as notifications about new orders. Notifications can be assigned to staff users or arbitrary email addresses.\r\ntype StaffNotificationRecipient implements Node {\r\n  # Returns a user subscribed to email notifications.\r\n  user: User\r\n  # Determines if a notification active.\r\n  active: Boolean\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Returns email address of a user subscribed to email notifications.\r\n  email: String\r\n}\r\n\r\n# Creates a new staff notification recipient.\r\ntype StaffNotificationRecipientCreate {\r\n  shopErrors: [ShopError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShopError!]!\r\n  staffNotificationRecipient: StaffNotificationRecipient\r\n}\r\n\r\n# Delete staff notification recipient.\r\ntype StaffNotificationRecipientDelete {\r\n  shopErrors: [ShopError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShopError!]!\r\n  staffNotificationRecipient: StaffNotificationRecipient\r\n}\r\n\r\ninput StaffNotificationRecipientInput {\r\n  # The ID of the user subscribed to email notifications..\r\n  user: ID\r\n  # Email address of a user subscribed to email notifications.\r\n  email: String\r\n  # Determines if a notification active.\r\n  active: Boolean\r\n}\r\n\r\n# Updates a staff notification recipient.\r\ntype StaffNotificationRecipientUpdate {\r\n  shopErrors: [ShopError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ShopError!]!\r\n  staffNotificationRecipient: StaffNotificationRecipient\r\n}\r\n\r\n# Updates an existing staff user.\r\ntype StaffUpdate {\r\n  staffErrors: [StaffError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [StaffError!]!\r\n  user: User\r\n}\r\n\r\ninput StaffUpdateInput {\r\n  # Given name.\r\n  firstName: String\r\n  # Family name.\r\n  lastName: String\r\n  # The unique email address of the user.\r\n  email: String\r\n  # User account is active.\r\n  isActive: Boolean\r\n  # A note about the user.\r\n  note: String\r\n  # List of permission group IDs to which user should be assigned.\r\n  addGroups: [ID!]\r\n  # List of permission group IDs from which user should be unassigned.\r\n  removeGroups: [ID!]\r\n}\r\n\r\ninput StaffUserInput {\r\n  status: StaffMemberStatus\r\n  search: String\r\n}\r\n\r\n# Represents stock.\r\ntype Stock implements Node {\r\n  warehouse: Warehouse!\r\n  productVariant: ProductVariant!\r\n  # Quantity of a product in the warehouse's possession, including the allocated stock that is waiting for shipment.\r\n  quantity: Int!\r\n  # The ID of the object.\r\n  id: ID!\r\n  # Quantity allocated for orders\r\n  quantityAllocated: Int!\r\n}\r\n\r\nenum StockAvailability {\r\n  IN_STOCK\r\n  OUT_OF_STOCK\r\n}\r\n\r\ntype StockCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [StockCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype StockCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Stock!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\ntype StockError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: StockErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum StockErrorCode {\r\n  ALREADY_EXISTS\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\ninput StockFilterInput {\r\n  quantity: Float\r\n  search: String\r\n}\r\n\r\ninput StockInput {\r\n  # Warehouse in which stock is located.\r\n  warehouse: ID!\r\n  # Quantity of items available for sell.\r\n  quantity: Int!\r\n}\r\n\r\n# Representation of tax types fetched from tax gateway.\r\ntype TaxType {\r\n  # Description of the tax type.\r\n  description: String\r\n  # External tax code used to identify given tax group.\r\n  taxCode: String\r\n}\r\n\r\n# Represents a monetary value with taxes. In cases where taxes were not applied, net and gross values will be equal.\r\ntype TaxedMoney {\r\n  # Currency code.\r\n  currency: String!\r\n  # Amount of money including taxes.\r\n  gross: Money!\r\n  # Amount of money without taxes.\r\n  net: Money!\r\n  # Amount of taxes.\r\n  tax: Money!\r\n}\r\n\r\n# Represents a range of monetary values.\r\ntype TaxedMoneyRange {\r\n  # Lower bound of a price range.\r\n  start: TaxedMoney\r\n  # Upper bound of a price range.\r\n  stop: TaxedMoney\r\n}\r\n\r\n# An object representing a single payment.\r\ntype Transaction implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  created: DateTime!\r\n  payment: Payment!\r\n  token: String!\r\n  kind: TransactionKind!\r\n  isSuccess: Boolean!\r\n  error: String\r\n  gatewayResponse: JSONString!\r\n  # Total amount of the transaction.\r\n  amount: Money\r\n}\r\n\r\n# An enumeration.\r\nenum TransactionKind {\r\n  # External reference\r\n  EXTERNAL\r\n  # Authorization\r\n  AUTH\r\n  # Pending\r\n  PENDING\r\n  # Action to confirm\r\n  ACTION_TO_CONFIRM\r\n  # Refund\r\n  REFUND\r\n  # Refund in progress\r\n  REFUND_ONGOING\r\n  # Capture\r\n  CAPTURE\r\n  # Void\r\n  VOID\r\n  # Confirm\r\n  CONFIRM\r\n  # Cancel\r\n  CANCEL\r\n}\r\n\r\nunion TranslatableItem = ProductTranslatableContent | CollectionTranslatableContent | CategoryTranslatableContent | AttributeTranslatableContent | AttributeValueTranslatableContent | ProductVariantTranslatableContent | PageTranslatableContent | ShippingMethodTranslatableContent | SaleTranslatableContent | VoucherTranslatableContent | MenuItemTranslatableContent\r\n\r\ntype TranslatableItemConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [TranslatableItemEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype TranslatableItemEdge {\r\n  # The item at the end of the edge.\r\n  node: TranslatableItem!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\nenum TranslatableKinds {\r\n  ATTRIBUTE\r\n  ATTRIBUTE_VALUE\r\n  CATEGORY\r\n  COLLECTION\r\n  MENU_ITEM\r\n  PAGE\r\n  PRODUCT\r\n  SALE\r\n  SHIPPING_METHOD\r\n  VARIANT\r\n  VOUCHER\r\n}\r\n\r\ntype TranslationError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: TranslationErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum TranslationErrorCode {\r\n  GRAPHQL_ERROR\r\n  NOT_FOUND\r\n  REQUIRED\r\n}\r\n\r\ninput TranslationInput {\r\n  seoTitle: String\r\n  seoDescription: String\r\n  name: String\r\n  description: JSONString\r\n}\r\n\r\nscalar UUID\r\n\r\ninput UpdateInvoiceInput {\r\n  # Invoice number\r\n  number: String\r\n  # URL of an invoice to download.\r\n  url: String\r\n}\r\n\r\n# Updates metadata of an object.\r\ntype UpdateMetadata {\r\n  metadataErrors: [MetadataError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MetadataError!]!\r\n  item: ObjectWithMetadata\r\n}\r\n\r\n# Updates private metadata of an object.\r\ntype UpdatePrivateMetadata {\r\n  metadataErrors: [MetadataError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [MetadataError!]!\r\n  item: ObjectWithMetadata\r\n}\r\n\r\n# Variables of this type must be set to null in mutations. They will be replaced with a filename from a following multipart part containing a binary file. See: https://github.com/jaydenseric/graphql-multipart-request-spec.\r\nscalar Upload\r\n\r\ntype UploadError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: UploadErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum UploadErrorCode {\r\n  GRAPHQL_ERROR\r\n}\r\n\r\n# Represents user data.\r\ntype User implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  lastLogin: DateTime\r\n  email: String!\r\n  firstName: String!\r\n  lastName: String!\r\n  isStaff: Boolean!\r\n  isActive: Boolean!\r\n  # A note about the customer.\r\n  note: String\r\n  dateJoined: DateTime!\r\n  defaultShippingAddress: Address\r\n  defaultBillingAddress: Address\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # List of all user's addresses.\r\n  addresses: [Address]\r\n  # Returns the last open checkout of this user.\r\n  checkout: Checkout @deprecated(reason: \"Will be removed in Saleor 4.0. Use the `checkout_tokens` field to fetch the user checkouts.\")\r\n  # Returns the checkout UUID's assigned to this user.\r\n  checkoutTokens(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): [UUID!]\r\n  # List of the user gift cards.\r\n  giftCards(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): GiftCardCountableConnection\r\n  # List of user's orders.\r\n  orders(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): OrderCountableConnection\r\n  # List of user's permissions.\r\n  userPermissions: [UserPermission]\r\n  # List of user's permission groups.\r\n  permissionGroups: [Group]\r\n  # List of user's permission groups which user can manage.\r\n  editableGroups: [Group]\r\n  avatar(\r\n    # Size of the avatar.\r\n    size: Int\r\n  ): Image\r\n  # List of events associated with the user.\r\n  events: [CustomerEvent]\r\n  # List of stored payment sources.\r\n  storedPaymentSources(\r\n    # Slug of a channel for which the data should be returned.\r\n    channel: String\r\n  ): [PaymentSource]\r\n  # User language code.\r\n  languageCode: LanguageCodeEnum!\r\n}\r\n\r\n# Deletes a user avatar. Only for staff members.\r\ntype UserAvatarDelete {\r\n  # An updated user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Create a user avatar. Only for staff members. This mutation must be sent as a `multipart` request. More detailed specs of the upload format can be found here: https://github.com/jaydenseric/graphql-multipart-request-spec\r\ntype UserAvatarUpdate {\r\n  # An updated user instance.\r\n  user: User\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# Activate or deactivate users.\r\ntype UserBulkSetActive {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\ntype UserCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [UserCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype UserCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: User!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\ninput UserCreateInput {\r\n  # Billing address of the customer.\r\n  defaultBillingAddress: AddressInput\r\n  # Shipping address of the customer.\r\n  defaultShippingAddress: AddressInput\r\n  # Given name.\r\n  firstName: String\r\n  # Family name.\r\n  lastName: String\r\n  # The unique email address of the user.\r\n  email: String\r\n  # User account is active.\r\n  isActive: Boolean\r\n  # A note about the user.\r\n  note: String\r\n  # User language code.\r\n  languageCode: LanguageCodeEnum\r\n  # URL of a view where users should be redirected to set the password. URL in RFC 1808 format.\r\n  redirectUrl: String\r\n  # Slug of a channel which will be used for notify user. Optional when only one channel exists.\r\n  channel: String\r\n}\r\n\r\ntype UserPermission {\r\n  # Internal code for permission.\r\n  code: PermissionEnum!\r\n  # Describe action(s) allowed to do by permission.\r\n  name: String!\r\n  # List of user permission groups which contains this permission.\r\n  sourcePermissionGroups(\r\n    # ID of user whose groups should be returned.\r\n    userId: ID!\r\n  ): [Group!]\r\n}\r\n\r\nenum UserSortField {\r\n  # Sort users by first name.\r\n  FIRST_NAME\r\n  # Sort users by last name.\r\n  LAST_NAME\r\n  # Sort users by email.\r\n  EMAIL\r\n  # Sort users by order count.\r\n  ORDER_COUNT\r\n}\r\n\r\ninput UserSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort users by the selected field.\r\n  field: UserSortField!\r\n}\r\n\r\n# Represents a VAT rate for a country.\r\ntype VAT {\r\n  # Country code.\r\n  countryCode: String!\r\n  # Standard VAT rate in percent.\r\n  standardRate: Float\r\n  # Country's VAT rate exceptions for specific types of goods.\r\n  reducedRates: [ReducedRate]!\r\n}\r\n\r\nenum VariantAttributeScope {\r\n  ALL\r\n  VARIANT_SELECTION\r\n  NOT_VARIANT_SELECTION\r\n}\r\n\r\n# Assign an media to a product variant.\r\ntype VariantMediaAssign {\r\n  productVariant: ProductVariant\r\n  media: ProductMedia\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Unassign an media from a product variant.\r\ntype VariantMediaUnassign {\r\n  productVariant: ProductVariant\r\n  media: ProductMedia\r\n  productErrors: [ProductError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [ProductError!]!\r\n}\r\n\r\n# Represents availability of a variant in the storefront.\r\ntype VariantPricingInfo {\r\n  # Whether it is in sale or not.\r\n  onSale: Boolean\r\n  # The discount amount if in sale (null otherwise).\r\n  discount: TaxedMoney\r\n  # The discount amount in the local currency.\r\n  discountLocalCurrency: TaxedMoney\r\n  # The price, with any discount subtracted.\r\n  price: TaxedMoney\r\n  # The price without any discount.\r\n  priceUndiscounted: TaxedMoney\r\n  # The discounted price in the local currency.\r\n  priceLocalCurrency: TaxedMoney\r\n}\r\n\r\n# Verify JWT token.\r\ntype VerifyToken {\r\n  # User assigned to token.\r\n  user: User\r\n  # Determine if token is valid or not.\r\n  isValid: Boolean!\r\n  # JWT payload.\r\n  payload: GenericScalar\r\n  accountErrors: [AccountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [AccountError!]!\r\n}\r\n\r\n# An enumeration.\r\nenum VolumeUnitsEnum {\r\n  CUBIC_MILLIMETER\r\n  CUBIC_CENTIMETER\r\n  CUBIC_DECIMETER\r\n  CUBIC_METER\r\n  LITER\r\n  CUBIC_FOOT\r\n  CUBIC_INCH\r\n  CUBIC_YARD\r\n  QT\r\n  PINT\r\n  FL_OZ\r\n  ACRE_IN\r\n  ACRE_FT\r\n}\r\n\r\n# Vouchers allow giving discounts to particular customers on categories, collections or specific products. They can be used during checkout by providing valid voucher codes.\r\ntype Voucher implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String\r\n  # Determines a type of voucher.\r\n  type: VoucherTypeEnum!\r\n  code: String!\r\n  usageLimit: Int\r\n  used: Int!\r\n  startDate: DateTime!\r\n  endDate: DateTime\r\n  applyOncePerOrder: Boolean!\r\n  applyOncePerCustomer: Boolean!\r\n  onlyForStaff: Boolean!\r\n  # Determines a type of discount for voucher - value or percentage\r\n  discountValueType: DiscountValueTypeEnum!\r\n  minCheckoutItemsQuantity: Int\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # List of categories this voucher applies to.\r\n  categories(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CategoryCountableConnection\r\n  # List of collections this voucher applies to.\r\n  collections(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): CollectionCountableConnection\r\n  # List of products this voucher applies to.\r\n  products(\r\n    # Return the elements in the list that come before the specified cursor.\r\n    before: String\r\n    # Return the elements in the list that come after the specified cursor.\r\n    after: String\r\n    # Return the first n elements from the list.\r\n    first: Int\r\n    # Return the last n elements from the list.\r\n    last: Int\r\n  ): ProductCountableConnection\r\n  # List of countries available for the shipping voucher.\r\n  countries: [CountryDisplay]\r\n  # Returns translated voucher fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for voucher.\r\n    languageCode: LanguageCodeEnum!\r\n  ): VoucherTranslation\r\n  # Voucher value.\r\n  discountValue: Float\r\n  # Currency code for voucher.\r\n  currency: String\r\n  # Minimum order value to apply voucher.\r\n  minSpent: Money\r\n  # List of availability in channels for the voucher.\r\n  channelListings: [VoucherChannelListing!]\r\n}\r\n\r\n# Adds products, categories, collections to a voucher.\r\ntype VoucherAddCatalogues {\r\n  # Voucher of which catalogue IDs will be modified.\r\n  voucher: Voucher\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\n# Deletes vouchers.\r\ntype VoucherBulkDelete {\r\n  # Returns how many objects were affected.\r\n  count: Int!\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\n# Represents voucher channel listing.\r\ntype VoucherChannelListing implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  channel: Channel!\r\n  discountValue: Float!\r\n  currency: String!\r\n  minSpent: Money\r\n}\r\n\r\ninput VoucherChannelListingAddInput {\r\n  # ID of a channel.\r\n  channelId: ID!\r\n  # Value of the voucher.\r\n  discountValue: PositiveDecimal\r\n  # Min purchase amount required to apply the voucher.\r\n  minAmountSpent: PositiveDecimal\r\n}\r\n\r\ninput VoucherChannelListingInput {\r\n  # List of channels to which the voucher should be assigned.\r\n  addChannels: [VoucherChannelListingAddInput!]\r\n  # List of channels from which the voucher should be unassigned.\r\n  removeChannels: [ID!]\r\n}\r\n\r\n# Manage voucher's availability in channels.\r\ntype VoucherChannelListingUpdate {\r\n  # An updated voucher instance.\r\n  voucher: Voucher\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\ntype VoucherCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [VoucherCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype VoucherCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Voucher!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates a new voucher.\r\ntype VoucherCreate {\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n  voucher: Voucher\r\n}\r\n\r\n# Deletes a voucher.\r\ntype VoucherDelete {\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n  voucher: Voucher\r\n}\r\n\r\nenum VoucherDiscountType {\r\n  FIXED\r\n  PERCENTAGE\r\n  SHIPPING\r\n}\r\n\r\ninput VoucherFilterInput {\r\n  status: [DiscountStatusEnum]\r\n  timesUsed: IntRangeInput\r\n  discountType: [VoucherDiscountType]\r\n  started: DateTimeRangeInput\r\n  search: String\r\n  metadata: [MetadataFilter]\r\n}\r\n\r\ninput VoucherInput {\r\n  # Voucher type: PRODUCT, CATEGORY SHIPPING or ENTIRE_ORDER.\r\n  type: VoucherTypeEnum\r\n  # Voucher name.\r\n  name: String\r\n  # Code to use the voucher.\r\n  code: String\r\n  # Start date of the voucher in ISO 8601 format.\r\n  startDate: DateTime\r\n  # End date of the voucher in ISO 8601 format.\r\n  endDate: DateTime\r\n  # Choices: fixed or percentage.\r\n  discountValueType: DiscountValueTypeEnum\r\n  # Products discounted by the voucher.\r\n  products: [ID]\r\n  # Collections discounted by the voucher.\r\n  collections: [ID]\r\n  # Categories discounted by the voucher.\r\n  categories: [ID]\r\n  # Minimal quantity of checkout items required to apply the voucher.\r\n  minCheckoutItemsQuantity: Int\r\n  # Country codes that can be used with the shipping voucher.\r\n  countries: [String]\r\n  # Voucher should be applied to the cheapest item or entire order.\r\n  applyOncePerOrder: Boolean\r\n  # Voucher should be applied once per customer.\r\n  applyOncePerCustomer: Boolean\r\n  # Voucher can be used only by staff user.\r\n  onlyForStaff: Boolean\r\n  # Limit number of times this voucher can be used in total.\r\n  usageLimit: Int\r\n}\r\n\r\n# Removes products, categories, collections from a voucher.\r\ntype VoucherRemoveCatalogues {\r\n  # Voucher of which catalogue IDs will be modified.\r\n  voucher: Voucher\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n}\r\n\r\nenum VoucherSortField {\r\n  # Sort vouchers by code.\r\n  CODE\r\n  # Sort vouchers by start date.\r\n  START_DATE\r\n  # Sort vouchers by end date.\r\n  END_DATE\r\n  # Sort vouchers by value.\r\n  VALUE\r\n  # Sort vouchers by type.\r\n  TYPE\r\n  # Sort vouchers by usage limit.\r\n  USAGE_LIMIT\r\n  # Sort vouchers by minimum spent amount.\r\n  MINIMUM_SPENT_AMOUNT\r\n}\r\n\r\ninput VoucherSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Specifies the channel in which to sort the data. DEPRECATED: Will be removed in Saleor 4.0.Use root-level channel argument instead.\r\n  channel: String\r\n  # Sort vouchers by the selected field.\r\n  field: VoucherSortField!\r\n}\r\n\r\ntype VoucherTranslatableContent implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String\r\n  # Returns translated voucher fields for the given language code.\r\n  translation(\r\n    # A language code to return the translation for voucher.\r\n    languageCode: LanguageCodeEnum!\r\n  ): VoucherTranslation\r\n  # Vouchers allow giving discounts to particular customers on categories, collections or specific products. They can be used during checkout by providing valid voucher codes.\r\n  voucher: Voucher @deprecated(reason: \"Will be removed in Saleor 4.0. Get model fields from the root level.\")\r\n}\r\n\r\n# Creates/updates translations for a voucher.\r\ntype VoucherTranslate {\r\n  translationErrors: [TranslationError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [TranslationError!]!\r\n  voucher: Voucher\r\n}\r\n\r\ntype VoucherTranslation implements Node {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String\r\n  # Translation language.\r\n  language: LanguageDisplay!\r\n}\r\n\r\nenum VoucherTypeEnum {\r\n  SHIPPING\r\n  ENTIRE_ORDER\r\n  SPECIFIC_PRODUCT\r\n}\r\n\r\n# Updates a voucher.\r\ntype VoucherUpdate {\r\n  discountErrors: [DiscountError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [DiscountError!]!\r\n  voucher: Voucher\r\n}\r\n\r\n# Represents warehouse.\r\ntype Warehouse implements Node & ObjectWithMetadata {\r\n  # The ID of the object.\r\n  id: ID!\r\n  name: String!\r\n  slug: String!\r\n  shippingZones(before: String, after: String, first: Int, last: Int): ShippingZoneCountableConnection!\r\n  address: Address!\r\n  email: String!\r\n  # List of private metadata items.Requires proper staff permissions to access.\r\n  privateMetadata: [MetadataItem]!\r\n  # List of public metadata items. Can be accessed without permissions.\r\n  metadata: [MetadataItem]!\r\n  # Warehouse company name.\r\n  companyName: String! @deprecated(reason: \"Use address.CompanyName. This field will be removed in Saleor 4.0.\")\r\n}\r\n\r\ntype WarehouseCountableConnection {\r\n  # Pagination data for this connection.\r\n  pageInfo: PageInfo!\r\n  edges: [WarehouseCountableEdge!]!\r\n  # A total count of items in the collection.\r\n  totalCount: Int\r\n}\r\n\r\ntype WarehouseCountableEdge {\r\n  # The item at the end of the edge.\r\n  node: Warehouse!\r\n  # A cursor for use in pagination.\r\n  cursor: String!\r\n}\r\n\r\n# Creates new warehouse.\r\ntype WarehouseCreate {\r\n  warehouseErrors: [WarehouseError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WarehouseError!]!\r\n  warehouse: Warehouse\r\n}\r\n\r\ninput WarehouseCreateInput {\r\n  # Warehouse slug.\r\n  slug: String\r\n  # The email address of the warehouse.\r\n  email: String\r\n  # Warehouse name.\r\n  name: String!\r\n  # Address of the warehouse.\r\n  address: AddressInput!\r\n  # Shipping zones supported by the warehouse.\r\n  shippingZones: [ID]\r\n}\r\n\r\n# Deletes selected warehouse.\r\ntype WarehouseDelete {\r\n  warehouseErrors: [WarehouseError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WarehouseError!]!\r\n  warehouse: Warehouse\r\n}\r\n\r\ntype WarehouseError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: WarehouseErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum WarehouseErrorCode {\r\n  ALREADY_EXISTS\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\ninput WarehouseFilterInput {\r\n  search: String\r\n  ids: [ID]\r\n}\r\n\r\n# Add shipping zone to given warehouse.\r\ntype WarehouseShippingZoneAssign {\r\n  warehouseErrors: [WarehouseError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WarehouseError!]!\r\n  warehouse: Warehouse\r\n}\r\n\r\n# Remove shipping zone from given warehouse.\r\ntype WarehouseShippingZoneUnassign {\r\n  warehouseErrors: [WarehouseError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WarehouseError!]!\r\n  warehouse: Warehouse\r\n}\r\n\r\nenum WarehouseSortField {\r\n  # Sort warehouses by name.\r\n  NAME\r\n}\r\n\r\ninput WarehouseSortingInput {\r\n  # Specifies the direction in which to sort products.\r\n  direction: OrderDirection!\r\n  # Sort warehouses by the selected field.\r\n  field: WarehouseSortField!\r\n}\r\n\r\n# Updates given warehouse.\r\ntype WarehouseUpdate {\r\n  warehouseErrors: [WarehouseError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WarehouseError!]!\r\n  warehouse: Warehouse\r\n}\r\n\r\ninput WarehouseUpdateInput {\r\n  # Warehouse slug.\r\n  slug: String\r\n  # The email address of the warehouse.\r\n  email: String\r\n  # Warehouse name.\r\n  name: String\r\n  # Address of the warehouse.\r\n  address: AddressInput\r\n}\r\n\r\n# Webhook.\r\ntype Webhook implements Node {\r\n  name: String!\r\n  targetUrl: String!\r\n  isActive: Boolean!\r\n  secretKey: String\r\n  # The ID of the object.\r\n  id: ID!\r\n  # List of webhook events.\r\n  events: [WebhookEvent!]!\r\n  app: App!\r\n}\r\n\r\n# Creates a new webhook subscription.\r\ntype WebhookCreate {\r\n  webhookErrors: [WebhookError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WebhookError!]!\r\n  webhook: Webhook\r\n}\r\n\r\ninput WebhookCreateInput {\r\n  # The name of the webhook.\r\n  name: String\r\n  # The url to receive the payload.\r\n  targetUrl: String\r\n  # The events that webhook wants to subscribe.\r\n  events: [WebhookEventTypeEnum]\r\n  # ID of the app to which webhook belongs.\r\n  app: ID\r\n  # Determine if webhook will be set active or not.\r\n  isActive: Boolean\r\n  # The secret key used to create a hash signature with each payload.\r\n  secretKey: String\r\n}\r\n\r\n# Deletes a webhook subscription.\r\ntype WebhookDelete {\r\n  webhookErrors: [WebhookError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WebhookError!]!\r\n  webhook: Webhook\r\n}\r\n\r\ntype WebhookError {\r\n  # Name of a field that caused the error. A value of `null` indicates that the error isn't associated with a particular field.\r\n  field: String\r\n  # The error message.\r\n  message: String\r\n  # The error code.\r\n  code: WebhookErrorCode!\r\n}\r\n\r\n# An enumeration.\r\nenum WebhookErrorCode {\r\n  GRAPHQL_ERROR\r\n  INVALID\r\n  NOT_FOUND\r\n  REQUIRED\r\n  UNIQUE\r\n}\r\n\r\n# Webhook event.\r\ntype WebhookEvent {\r\n  # Internal name of the event type.\r\n  eventType: WebhookEventTypeEnum!\r\n  # Display name of the event.\r\n  name: String!\r\n}\r\n\r\n# Enum determining type of webhook.\r\nenum WebhookEventTypeEnum {\r\n  # All the events.\r\n  ANY_EVENTS\r\n  # A new order is placed.\r\n  ORDER_CREATED\r\n  # An order is confirmed (status change unconfirmed -> unfulfilled) by a staff user using the OrderConfirm mutation. It also triggers when the user completes the checkout and the shop setting `automatically_confirm_all_new_orders` is enabled.\r\n  ORDER_CONFIRMED\r\n  # Payment is made and an order is fully paid.\r\n  ORDER_FULLY_PAID\r\n  # An order is updated; triggered for all changes related to an order; covers all other order webhooks, except for ORDER_CREATED.\r\n  ORDER_UPDATED\r\n  # An order is cancelled.\r\n  ORDER_CANCELLED\r\n  # An order is fulfilled.\r\n  ORDER_FULFILLED\r\n  DRAFT_ORDER_CREATED\r\n  DRAFT_ORDER_UPDATED\r\n  DRAFT_ORDER_DELETED\r\n  # An invoice for order requested.\r\n  INVOICE_REQUESTED\r\n  # An invoice is deleted.\r\n  INVOICE_DELETED\r\n  # Invoice has been sent.\r\n  INVOICE_SENT\r\n  # A new customer account is created.\r\n  CUSTOMER_CREATED\r\n  # A customer account is updated.\r\n  CUSTOMER_UPDATED\r\n  # A new product is created.\r\n  PRODUCT_CREATED\r\n  # A product is updated.\r\n  PRODUCT_UPDATED\r\n  # A product is deleted.\r\n  PRODUCT_DELETED\r\n  # A new product variant is created.\r\n  PRODUCT_VARIANT_CREATED\r\n  # A product variant is updated.\r\n  PRODUCT_VARIANT_UPDATED\r\n  # A product variant is deleted.\r\n  PRODUCT_VARIANT_DELETED\r\n  # A new checkout is created.\r\n  CHECKOUT_CREATED\r\n  # A checkout is updated. It also triggers all updates related to the checkout.\r\n  CHECKOUT_UPDATED\r\n  # A new fulfillment is created.\r\n  FULFILLMENT_CREATED\r\n  # User notification triggered.\r\n  NOTIFY_USER\r\n  # A new page is created.\r\n  PAGE_CREATED\r\n  # A page is updated.\r\n  PAGE_UPDATED\r\n  # A page is deleted.\r\n  PAGE_DELETED\r\n  PAYMENT_AUTHORIZE\r\n  PAYMENT_CAPTURE\r\n  PAYMENT_CONFIRM\r\n  PAYMENT_LIST_GATEWAYS\r\n  PAYMENT_PROCESS\r\n  PAYMENT_REFUND\r\n  PAYMENT_VOID\r\n  TRANSLATION_CREATED\r\n  TRANSLATION_UPDATED\r\n}\r\n\r\n# An enumeration.\r\nenum WebhookSampleEventTypeEnum {\r\n  ORDER_CREATED\r\n  ORDER_CONFIRMED\r\n  ORDER_FULLY_PAID\r\n  ORDER_UPDATED\r\n  ORDER_CANCELLED\r\n  ORDER_FULFILLED\r\n  DRAFT_ORDER_CREATED\r\n  DRAFT_ORDER_UPDATED\r\n  DRAFT_ORDER_DELETED\r\n  INVOICE_REQUESTED\r\n  INVOICE_DELETED\r\n  INVOICE_SENT\r\n  CUSTOMER_CREATED\r\n  CUSTOMER_UPDATED\r\n  PRODUCT_CREATED\r\n  PRODUCT_UPDATED\r\n  PRODUCT_DELETED\r\n  PRODUCT_VARIANT_CREATED\r\n  PRODUCT_VARIANT_UPDATED\r\n  PRODUCT_VARIANT_DELETED\r\n  CHECKOUT_CREATED\r\n  CHECKOUT_UPDATED\r\n  FULFILLMENT_CREATED\r\n  NOTIFY_USER\r\n  PAGE_CREATED\r\n  PAGE_UPDATED\r\n  PAGE_DELETED\r\n  PAYMENT_AUTHORIZE\r\n  PAYMENT_CAPTURE\r\n  PAYMENT_CONFIRM\r\n  PAYMENT_LIST_GATEWAYS\r\n  PAYMENT_PROCESS\r\n  PAYMENT_REFUND\r\n  PAYMENT_VOID\r\n  TRANSLATION_CREATED\r\n  TRANSLATION_UPDATED\r\n}\r\n\r\n# Updates a webhook subscription.\r\ntype WebhookUpdate {\r\n  webhookErrors: [WebhookError!]! @deprecated(reason: \"Use errors field instead. This field will be removed in Saleor 4.0.\")\r\n  errors: [WebhookError!]!\r\n  webhook: Webhook\r\n}\r\n\r\ninput WebhookUpdateInput {\r\n  # The new name of the webhook.\r\n  name: String\r\n  # The url to receive the payload.\r\n  targetUrl: String\r\n  # The events that webhook wants to subscribe.\r\n  events: [WebhookEventTypeEnum]\r\n  # ID of the app to which webhook belongs.\r\n  app: ID\r\n  # Determine if webhook will be set active or not.\r\n  isActive: Boolean\r\n  # Use to create a hash signature with each payload.\r\n  secretKey: String\r\n}\r\n\r\n# Represents weight value in a specific weight unit.\r\ntype Weight {\r\n  # Weight unit.\r\n  unit: WeightUnitsEnum!\r\n  # Weight value.\r\n  value: Float!\r\n}\r\n\r\nscalar WeightScalar\r\n\r\n# An enumeration.\r\nenum WeightUnitsEnum {\r\n  G\r\n  LB\r\n  OZ\r\n  KG\r\n  TONNE\r\n}\r\n\r\n# Anything\r\nscalar _Any\r\n\r\nunion _Entity = App | Address | User | Group | ProductVariant | Product | ProductType | Collection | Category | ProductMedia | ProductImage | PageType\r\n\r\ntype _Service {\r\n  sdl: String\r\n}\r\n"
                }
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/http-bin/products": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/http-bin/products/unlimited",
                    "type": "Microsoft.ApiManagement/service/apis/products",
                    "name": "test",
                    "properties": {
                        "displayName": "test",
                        "description": "whatever",
                        "terms": null,
                        "subscriptionRequired": true,
                        "approvalRequired": false,
                        "subscriptionsLimit": null,
                        "state": "published"
                    }
                }
            ],
            "count": 1
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/test": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/test",
            "type": "Microsoft.ApiManagement/service/apis",
            "name": "test",
            "properties": {
                "displayName": "test",
                "apiRevision": "1",
                "description": "",
                "subscriptionRequired": true,
                "serviceUrl": "ws://www.example.com/test",
                "path": "",
                "protocols": [
                    "ws",
                    "wss"
                ],
                "authenticationSettings": {
                    "oAuth2": null,
                    "openid": null
                },
                "subscriptionKeyParameterNames": {
                    "header": "Ocp-Apim-Subscription-Key",
                    "query": "subscription-key"
                },
                "type": "websocket",
                "isCurrent": true
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/test/hostnames": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "contoso_azure-api_net",
                    "type": "Microsoft.ApiManagement/service/apis/hostnames",
                    "name": "contoso_azure-api_net",
                    "properties": {
                        "value": "contoso.azure-api.net"
                    }
                }
            ],
            "count": 1
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/test/operations": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/test/operations/onHandshake",
                    "type": "Microsoft.ApiManagement/service/apis/operations",
                    "name": "onHandshake",
                    "properties": {
                        "displayName": "onHandshake",
                        "method": "GET",
                        "urlTemplate": "",
                        "templateParameters": [],
                        "description": "WebSocket opening handshake",
                        "responses": [],
                        "policies": null
                    }
                }
            ],
            "count": 1
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/test/operations/onHandshake": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/test/operations/onHandshake",
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "name": "onHandshake",
            "properties": {
                "displayName": "onHandshake",
                "method": "GET",
                "urlTemplate": "",
                "templateParameters": [],
                "description": "WebSocket opening handshake",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": []
                },
                "responses": [],
                "policies": null
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/test/operations/onHandshake/tags": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [],
            "count": 0
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/test/products": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/test/products/unlimited",
                    "type": "Microsoft.ApiManagement/service/apis/products",
                    "name": "test",
                    "properties": {
                        "displayName": "test",
                        "description": "whatever",
                        "terms": null,
                        "subscriptionRequired": true,
                        "approvalRequired": false,
                        "subscriptionsLimit": null,
                        "state": "published"
                    }
                }
            ],
            "count": 1
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/products": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/products/starter",
                    "type": "Microsoft.ApiManagement/service/products",
                    "name": "starter",
                    "properties": {
                        "displayName": "Starter",
                        "description": "Subscribers will be able to run 5 calls/minute up to a maximum of 100 calls/week.",
                        "terms": "",
                        "subscriptionRequired": true,
                        "approvalRequired": false,
                        "subscriptionsLimit": 1,
                        "state": "published"
                    }
                },
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/products/unlimited",
                    "type": "Microsoft.ApiManagement/service/products",
                    "name": "unlimited",
                    "properties": {
                        "displayName": "Unlimited",
                        "description": "Subscribers have completely unlimited access to the API. Administrator approval is required.",
                        "terms": null,
                        "subscriptionRequired": true,
                        "approvalRequired": true,
                        "subscriptionsLimit": 1,
                        "state": "published"
                    }
                }
            ],
            "count": 2
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/products/starter": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/products/starter",
            "type": "Microsoft.ApiManagement/service/products",
            "name": "starter",
            "properties": {
                "displayName": "Starter",
                "description": "Subscribers will be able to run 5 calls/minute up to a maximum of 100 calls/week.",
                "terms": "",
                "subscriptionRequired": true,
                "approvalRequired": false,
                "subscriptionsLimit": 1,
                "state": "published"
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/products/starter/apis": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/products/starter/apis/echo-api",
                    "type": "Microsoft.ApiManagement/service/products/apis",
                    "name": "echo-api",
                    "properties": {
                        "displayName": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": [
                            "https"
                        ],
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                }
            ],
            "count": 1
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/tenant/settings": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/settings/public",
            "settings": {
                "CustomPortalSettings.UserRegistrationTerms": "",
                "CustomPortalSettings.UserRegistrationTermsEnabled": "False",
                "CustomPortalSettings.UserRegistrationTermsConsentRequired": "False",
                "CustomPortalSettings.DelegationEnabled": "False",
                "CustomPortalSettings.DelegationUrl": "",
                "CustomPortalSettings.DelegatedSubscriptionEnabled": "False",
                "CustomPortalSettings.RequireUserSigninEnabled": "True"
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/products/unlimited": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/products/unlimited",
            "type": "Microsoft.ApiManagement/service/products",
            "name": "unlimited",
            "properties": {
                "displayName": "Unlimited",
                "description": "Subscribers have completely unlimited access to the API. Administrator approval is required.",
                "terms": null,
                "subscriptionRequired": true,
                "approvalRequired": true,
                "subscriptionsLimit": 1,
                "state": "published"
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/products/unlimited/apis": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/products/unlimited/apis/echo-api",
                    "type": "Microsoft.ApiManagement/service/products/apis",
                    "name": "echo-api",
                    "properties": {
                        "displayName": "Echo API",
                        "apiRevision": "1",
                        "description": null,
                        "subscriptionRequired": true,
                        "serviceUrl": "http://echoapi.cloudapp.net/api",
                        "path": "echo",
                        "protocols": [
                            "https"
                        ],
                        "authenticationSettings": null,
                        "subscriptionKeyParameterNames": null,
                        "isCurrent": true
                    }
                }
            ],
            "count": 1
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999/reports/byApi": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "name": "test",
                    "apiId": "/apis/test",
                    "callCountSuccess": 1,
                    "callCountBlocked": 0,
                    "callCountFailed": 0,
                    "callCountOther": 0,
                    "callCountTotal": 1,
                    "bandwidth": 0,
                    "cacheHitCount": 0,
                    "cacheMissCount": 0,
                    "valueCacheHitCount": 0,
                    "valueCacheMissCount": 0,
                    "apiTimeAvg": 2404.5187,
                    "apiTimeMin": 2404.5187,
                    "apiTimeMax": 2404.5187,
                    "serviceTimeAvg": 880.7705000000001,
                    "serviceTimeMin": 880.7705000000001,
                    "serviceTimeMax": 880.7705000000001
                },
                {
                    "name": "Echo API",
                    "apiId": "/apis/echo-api",
                    "callCountSuccess": 0,
                    "callCountBlocked": 0,
                    "callCountFailed": 0,
                    "callCountOther": 0,
                    "callCountTotal": 0,
                    "bandwidth": 0,
                    "cacheHitCount": 0,
                    "cacheMissCount": 0,
                    "valueCacheHitCount": 0,
                    "valueCacheMissCount": 0,
                    "apiTimeAvg": 0,
                    "apiTimeMin": 0,
                    "apiTimeMax": 0,
                    "serviceTimeAvg": 0,
                    "serviceTimeMin": 0,
                    "serviceTimeMax": 0
                },
                {
                    "name": "Http Bin",
                    "apiId": "/apis/http-bin",
                    "callCountSuccess": 0,
                    "callCountBlocked": 0,
                    "callCountFailed": 0,
                    "callCountOther": 0,
                    "callCountTotal": 0,
                    "bandwidth": 0,
                    "cacheHitCount": 0,
                    "cacheMissCount": 0,
                    "valueCacheHitCount": 0,
                    "valueCacheMissCount": 0,
                    "apiTimeAvg": 0,
                    "apiTimeMin": 0,
                    "apiTimeMax": 0,
                    "serviceTimeAvg": 0,
                    "serviceTimeMin": 0,
                    "serviceTimeMax": 0
                }
            ],
            "count": 3,
            "nextLink": null
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999/reports/bySubscription": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [],
            "count": 0,
            "nextLink": null
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999/reports/byTime": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "timestamp": "2022-02-01T12:30:00Z",
                    "interval": "PT3H15M",
                    "callCountSuccess": 1,
                    "callCountBlocked": 0,
                    "callCountFailed": 0,
                    "callCountOther": 0,
                    "callCountTotal": 1,
                    "bandwidth": 0,
                    "cacheHitCount": 0,
                    "cacheMissCount": 0,
                    "valueCacheHitCount": 0,
                    "valueCacheMissCount": 0,
                    "apiTimeAvg": 2404.5187,
                    "apiTimeMin": 2404.5187,
                    "apiTimeMax": 2404.5187,
                    "serviceTimeAvg": 880.7705000000001,
                    "serviceTimeMin": 880.7705000000001,
                    "serviceTimeMax": 880.7705000000001
                }
            ],
            "count": 1,
            "nextLink": null
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999/reports/byProduct": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "name": "Unlimited",
                    "productId": "/products/unlimited",
                    "callCountSuccess": 0,
                    "callCountBlocked": 0,
                    "callCountFailed": 0,
                    "callCountOther": 0,
                    "callCountTotal": 0,
                    "bandwidth": 0,
                    "cacheHitCount": 0,
                    "cacheMissCount": 0,
                    "valueCacheHitCount": 0,
                    "valueCacheMissCount": 0,
                    "apiTimeAvg": 0,
                    "apiTimeMin": 0,
                    "apiTimeMax": 0,
                    "serviceTimeAvg": 0,
                    "serviceTimeMin": 0,
                    "serviceTimeMax": 0
                }
            ],
            "count": 1,
            "nextLink": null
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999",
            "type": "Microsoft.ApiManagement/service/users",
            "name": "6189460d4634612164e10999",
            "properties": {
                "firstName": "name",
                "lastName": "surname",
                "email": "name.surname@contoso.com",
                "state": "active",
                "registrationDate": "2021-11-08T15:45:18.01Z",
                "note": null,
                "groups": [],
                "identities": [
                    {
                        "provider": "Basic",
                        "id": "name.surname@contoso.com"
                    }
                ]
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/identity": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            },
            {
                "name": "ocp-apim-sas-token",
                "value": "token=\"6189460d4634612164e10999&292202041536&FWpHkq3S32Bxrgs+Mq0i8XTe6eOkv7zbABcdKAg1mofztdVAY7E8DUdFWC/7991FMuH5I5W1RfuJ0GzUjVsEqQ==\",refresh=\"true\""
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "6189460d4634612164e10999"
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            },
            {
                "name": "location",
                "value": "https://contoso.management.azure-api.net/users/61fd2d42463461148c193140?api-version=2021-04-01-preview"
            }
        ],
        "statusCode": 201,
        "statusText": "Created",
        "body": {
            "id": "/users/61fd2d42463461148c193140",
            "firstName": "abc",
            "lastName": "cba",
            "email": "namesurname@contoso.ro",
            "state": "pending",
            "registrationDate": "2022-02-04T13:42:26.36Z",
            "note": null,
            "groups": [
                {
                    "id": "/groups/developers",
                    "name": "Developers",
                    "description": "Developers is a built-in group. Its membership is managed by the system. Signed-in users fall into this group.",
                    "builtIn": true,
                    "type": "system",
                    "externalId": null
                }
            ],
            "identities": []
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/apis/echo-api/operationsByTags": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "operation": {
                        "id": "/apis/echo-api/operations/create-resource",
                        "apiName": "Echo API",
                        "apiRevision": "1",
                        "apiVersion": null,
                        "name": "Create resource",
                        "method": "POST",
                        "urlTemplate": "/resource",
                        "description": "A demonstration of a POST call based on the echo backend above. The request body is expected to contain JSON-formatted data (see example below). A policy is used to automatically transform any request sent in JSON directly to XML. In a real-world scenario this could be used to enable modern clients to speak to a legacy backend."
                    }
                },
                {
                    "operation": {
                        "id": "/apis/echo-api/operations/modify-resource",
                        "apiName": "Echo API",
                        "apiRevision": "1",
                        "apiVersion": null,
                        "name": "Modify Resource",
                        "method": "PUT",
                        "urlTemplate": "/resource",
                        "description": "A demonstration of a PUT call handled by the same \"echo\" backend as above. You can now specify a request body in addition to headers and it will be returned as well."
                    }
                },
                {
                    "operation": {
                        "id": "/apis/echo-api/operations/remove-resource",
                        "apiName": "Echo API",
                        "apiRevision": "1",
                        "apiVersion": null,
                        "name": "Remove resource",
                        "method": "DELETE",
                        "urlTemplate": "/resource",
                        "description": "A demonstration of a DELETE call which traditionally deletes the resource. It is based on the same \"echo\" backend as in all other operations so nothing is actually deleted."
                    }
                },
                {
                    "operation": {
                        "id": "/apis/echo-api/operations/retrieve-header-only",
                        "apiName": "Echo API",
                        "apiRevision": "1",
                        "apiVersion": null,
                        "name": "Retrieve header only",
                        "method": "HEAD",
                        "urlTemplate": "/resource",
                        "description": "The HEAD operation returns only headers. In this demonstration a policy is used to set additional headers when the response is returned and to enable JSONP."
                    }
                },
                {
                    "operation": {
                        "id": "/apis/echo-api/operations/retrieve-resource",
                        "apiName": "Echo API",
                        "apiRevision": "1",
                        "apiVersion": null,
                        "name": "Retrieve resource",
                        "method": "GET",
                        "urlTemplate": "/resource",
                        "description": "A demonstration of a GET call on a sample resource. It is handled by an \"echo\" backend which returns a response equal to the request (the supplied headers and body are being returned as received)."
                    }
                },
                {
                    "operation": {
                        "id": "/apis/echo-api/operations/retrieve-resource-cached",
                        "apiName": "Echo API",
                        "apiRevision": "1",
                        "apiVersion": null,
                        "name": "Retrieve resource (cached)",
                        "method": "GET",
                        "urlTemplate": "/resource-cached",
                        "description": "A demonstration of a GET call with caching enabled on the same \"echo\" backend as above. Cache TTL is set to 1 hour. When you make the first request the headers you supplied will be cached. Subsequent calls will return the same headers as the first time even if you change them in your request."
                    }
                }
            ],
            "count": 6,
            "nextLink": null
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999/reports/byOperation": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "name": "Retrieve resource",
                    "apiId": "/apis/echo-api",
                    "operationId": "/apis/echo-api/operations/retrieve-resource",
                    "callCountSuccess": 0,
                    "callCountBlocked": 0,
                    "callCountFailed": 0,
                    "callCountOther": 0,
                    "callCountTotal": 0,
                    "bandwidth": 0,
                    "cacheHitCount": 0,
                    "cacheMissCount": 0,
                    "valueCacheHitCount": 0,
                    "valueCacheMissCount": 0,
                    "apiTimeAvg": 0,
                    "apiTimeMin": 0,
                    "apiTimeMax": 0,
                    "serviceTimeAvg": 0,
                    "serviceTimeMin": 0,
                    "serviceTimeMax": 0
                },
                {
                    "name": "Retrieve resource (cached)",
                    "apiId": "/apis/echo-api",
                    "operationId": "/apis/echo-api/operations/retrieve-resource-cached",
                    "callCountSuccess": 0,
                    "callCountBlocked": 0,
                    "callCountFailed": 0,
                    "callCountOther": 0,
                    "callCountTotal": 0,
                    "bandwidth": 0,
                    "cacheHitCount": 0,
                    "cacheMissCount": 0,
                    "valueCacheHitCount": 0,
                    "valueCacheMissCount": 0,
                    "apiTimeAvg": 0,
                    "apiTimeMin": 0,
                    "apiTimeMax": 0,
                    "serviceTimeAvg": 0,
                    "serviceTimeMin": 0,
                    "serviceTimeMax": 0
                },
                {
                    "name": "Modify Resource",
                    "apiId": "/apis/echo-api",
                    "operationId": "/apis/echo-api/operations/modify-resource",
                    "callCountSuccess": 0,
                    "callCountBlocked": 0,
                    "callCountFailed": 0,
                    "callCountOther": 0,
                    "callCountTotal": 0,
                    "bandwidth": 0,
                    "cacheHitCount": 0,
                    "cacheMissCount": 0,
                    "valueCacheHitCount": 0,
                    "valueCacheMissCount": 0,
                    "apiTimeAvg": 0,
                    "apiTimeMin": 0,
                    "apiTimeMax": 0,
                    "serviceTimeAvg": 0,
                    "serviceTimeMin": 0,
                    "serviceTimeMax": 0
                },
                {
                    "name": "Create resource",
                    "apiId": "/apis/echo-api",
                    "operationId": "/apis/echo-api/operations/create-resource",
                    "callCountSuccess": 0,
                    "callCountBlocked": 0,
                    "callCountFailed": 0,
                    "callCountOther": 0,
                    "callCountTotal": 0,
                    "bandwidth": 0,
                    "cacheHitCount": 0,
                    "cacheMissCount": 0,
                    "valueCacheHitCount": 0,
                    "valueCacheMissCount": 0,
                    "apiTimeAvg": 0,
                    "apiTimeMin": 0,
                    "apiTimeMax": 0,
                    "serviceTimeAvg": 0,
                    "serviceTimeMin": 0,
                    "serviceTimeMax": 0
                },
                {
                    "name": "Remove resource",
                    "apiId": "/apis/echo-api",
                    "operationId": "/apis/echo-api/operations/remove-resource",
                    "callCountSuccess": 0,
                    "callCountBlocked": 0,
                    "callCountFailed": 0,
                    "callCountOther": 0,
                    "callCountTotal": 0,
                    "bandwidth": 0,
                    "cacheHitCount": 0,
                    "cacheMissCount": 0,
                    "valueCacheHitCount": 0,
                    "valueCacheMissCount": 0,
                    "apiTimeAvg": 0,
                    "apiTimeMin": 0,
                    "apiTimeMax": 0,
                    "serviceTimeAvg": 0,
                    "serviceTimeMin": 0,
                    "serviceTimeMax": 0
                },
                {
                    "name": "Retrieve header only",
                    "apiId": "/apis/echo-api",
                    "operationId": "/apis/echo-api/operations/retrieve-header-only",
                    "callCountSuccess": 0,
                    "callCountBlocked": 0,
                    "callCountFailed": 0,
                    "callCountOther": 0,
                    "callCountTotal": 0,
                    "bandwidth": 0,
                    "cacheHitCount": 0,
                    "cacheMissCount": 0,
                    "valueCacheHitCount": 0,
                    "valueCacheMissCount": 0,
                    "apiTimeAvg": 0,
                    "apiTimeMin": 0,
                    "apiTimeMax": 0,
                    "serviceTimeAvg": 0,
                    "serviceTimeMin": 0,
                    "serviceTimeMax": 0
                },
                {
                    "name": "onHandshake",
                    "apiId": "/apis/test",
                    "operationId": "/apis/test/operations/onHandshake",
                    "callCountSuccess": 0,
                    "callCountBlocked": 0,
                    "callCountFailed": 0,
                    "callCountOther": 0,
                    "callCountTotal": 0,
                    "bandwidth": 0,
                    "cacheHitCount": 0,
                    "cacheMissCount": 0,
                    "valueCacheHitCount": 0,
                    "valueCacheMissCount": 0,
                    "apiTimeAvg": 0,
                    "apiTimeMin": 0,
                    "apiTimeMax": 0,
                    "serviceTimeAvg": 0,
                    "serviceTimeMin": 0,
                    "serviceTimeMax": 0
                }
            ],
            "count": 7,
            "nextLink": null
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999/reports/byGeo": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [],
            "count": 0,
            "nextLink": null
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999/subscriptions/61fd37461359a02500aad62f/regenerateSecondaryKey": {
        "headers": [],
        "statusCode": 204,
        "statusText": "No Content",
        "body": {}
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999/subscriptions/61fd37461359a02500aad62f/regeneratePrimaryKey": {
        "headers": [],
        "statusCode": 204,
        "statusText": "No Content",
        "body": {}
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999/subscriptions/61fd37461359a02500aad62f": {
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            }
        ],
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999/subscriptions/61fd37461359a02500aad62f",
            "type": "Microsoft.ApiManagement/service/users/subscriptions",
            "name": "61fd37461359a02500aad62f",
            "properties": {
                "ownerId": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/users/6189460d4634612164e10999",
                "scope": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/products/unlimited",
                "displayName": "test subscription  ",
                "state": "submitted",
                "createdDate": "2022-02-04T14:25:11.157Z",
                "startDate": null,
                "expirationDate": null,
                "endDate": null,
                "notificationDate": null,
                "stateComment": null
            }
        }
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/identityProviders": {
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/identityProviders/Aad",
                    "type": "Microsoft.ApiManagement/service/identityProviders",
                    "name": "Aad",
                    "properties": {
                        "clientId": "e87c98aa-6f4b-4a72-95d0-fc830a64ee06",
                        "type": "aad",
                        "authority": "login.microsoftonline.com",
                        "allowedTenants": [
                            "microsoft.com"
                        ]
                    }
                }
            ],
            "count": 1
        },
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            },
            {
                "name": "strict-transport-security",
                "value": "max-age=31536000; includeSubDomains"
            },
            {
                "name": "x-content-type-options",
                "value": "nosniff"
            }
        ]
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/portalsettings/signup": {
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/portalsettings/signup",
            "type": "Microsoft.ApiManagement/service/portalsettings",
            "name": "signup",
            "properties": {
                "url": null,
                "validationKey": null,
                "subscriptions": null,
                "userRegistration": null,
                "enabled": true,
                "termsOfService": {
                    "text": "",
                    "enabled": false,
                    "consentRequired": false
                }
            }
        },
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            },
            {
                "name": "strict-transport-security",
                "value": "max-age=31536000; includeSubDomains"
            },
            {
                "name": "x-content-type-options",
                "value": "nosniff"
            }
        ]
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/authorizationServers": {
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/authorizationServers/test",
                    "type": "Microsoft.ApiManagement/service/authorizationServers",
                    "name": "test",
                    "properties": {
                        "displayName": "test",
                        "description": "test",
                        "clientRegistrationEndpoint": "http://localhost",
                        "authorizationEndpoint": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
                        "authorizationMethods": [
                            "GET",
                            "POST"
                        ],
                        "clientAuthenticationMethod": [
                            "Body"
                        ],
                        "tokenBodyParameters": [],
                        "tokenEndpoint": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
                        "supportState": false,
                        "defaultScope": "api://00000000-0000-0000-0000-000000000000/blabla2",
                        "grantTypes": [
                            "authorizationCode"
                        ],
                        "bearerTokenSendingMethods": [
                            "authorizationHeader"
                        ],
                        "clientId": "00000000-0000-0000-0000-000000000000"
                    }
                }
            ],
            "count": 2
        },
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            },
            {
                "name": "strict-transport-security",
                "value": "max-age=31536000; includeSubDomains"
            },
            {
                "name": "x-content-type-options",
                "value": "nosniff"
            }
        ]
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/openidConnectProviders": {
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [],
            "count": 0
        },
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            },
            {
                "name": "strict-transport-security",
                "value": "max-age=31536000; includeSubDomains"
            },
            {
                "name": "x-content-type-options",
                "value": "nosniff"
            }
        ]
    },
    "ADD IMAGES": {},
    "https://apimdeveloperportal.blob.core.windows.net/content/c5d2da83-b255-245c-144b-cd3c242e9791": {
        "statusCode": 200,
        "statusText": "OK",
        "body": {},
        "headers": [
            {
                "name": "content-type",
                "value": "image/jpeg"
            },
            {
                "name": "content-md5",
                "value": "Pqzrasvz666/s1FC6+A9ww=="
            },
            {
                "name": "last-modified",
                "value": "Thu, 30 May 2019 23:12:22 GMT"
            },
            {
                "name": "server",
                "value": "Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0"
            },
            {
                "name": "x-ms-request-id",
                "value": "7fc677a5-801e-0073-06dc-1de5ce000000"
            },
            {
                "name": "x-ms-version",
                "value": "2009-09-19"
            },
            {
                "name": "x-ms-lease-status",
                "value": "unlocked"
            },
            {
                "name": "x-ms-blob-type",
                "value": "BlockBlob"
            },
            {
                "name": "access-control-expose-headers",
                "value": "x-ms-request-id,Server,x-ms-version,Content-Type,Last-Modified,ETag,Content-MD5,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding"
            },
            {
                "name": "access-control-allow-origin",
                "value": "*"
            }
        ]
    },
    "https://apimdeveloperportal.blob.core.windows.net/content/ed8e43d0-5f8e-af38-5536-8f0274656ce4": {
        "statusCode": 200,
        "statusText": "OK",
        "body": {},
        "headers": [
            {
                "name": "content-type",
                "value": "image/jpeg"
            },
            {
                "name": "content-md5",
                "value": "6mgBrgStr2n7AFlg7yU2dQ=="
            },
            {
                "name": "last-modified",
                "value": "Thu, 30 May 2019 23:12:30 GMT"
            },
            {
                "name": "server",
                "value": "Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0"
            },
            {
                "name": "x-ms-request-id",
                "value": "e8307212-e01e-008d-36dc-1dd9ab000000"
            },
            {
                "name": "x-ms-version",
                "value": "2009-09-19"
            },
            {
                "name": "x-ms-lease-status",
                "value": "unlocked"
            },
            {
                "name": "x-ms-blob-type",
                "value": "BlockBlob"
            },
            {
                "name": "access-control-expose-headers",
                "value": "x-ms-request-id,Server,x-ms-version,Content-Type,Last-Modified,ETag,Content-MD5,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding"
            },
            {
                "name": "access-control-allow-origin",
                "value": "*"
            }
        ]
    },
    "https://apimdeveloperportal.blob.core.windows.net/content/a2514081-47cb-95b1-ef0b-aef128c7a7ed": {
        "statusCode": 200,
        "statusText": "OK",
        "body": {},
        "headers": [
            {
                "name": "content-type",
                "value": "image/jpeg"
            },
            {
                "name": "content-md5",
                "value": "qMtzstjNo97gl0ELUaCyEQ=="
            },
            {
                "name": "last-modified",
                "value": "Thu, 30 May 2019 23:12:12 GMT"
            },
            {
                "name": "server",
                "value": "Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0"
            },
            {
                "name": "x-ms-request-id",
                "value": "284afa6e-a01e-00a8-7edc-1d4118000000"
            },
            {
                "name": "x-ms-version",
                "value": "2009-09-19"
            },
            {
                "name": "x-ms-lease-status",
                "value": "unlocked"
            },
            {
                "name": "x-ms-blob-type",
                "value": "BlockBlob"
            },
            {
                "name": "access-control-expose-headers",
                "value": "x-ms-request-id,Server,x-ms-version,Content-Type,Last-Modified,ETag,Content-MD5,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding"
            },
            {
                "name": "access-control-allow-origin",
                "value": "*"
            }
        ]
    },
    "https://apimdeveloperportal.blob.core.windows.net/content/70add409-0933-e01e-acef-99999a71167e": {
        "statusCode": 200,
        "statusText": "OK",
        "body": {},
        "headers": [
            {
                "name": "content-type",
                "value": "image/png"
            },
            {
                "name": "content-md5",
                "value": "w5Xh8bN4q4P3zlH7c+aH4A=="
            },
            {
                "name": "last-modified",
                "value": "Thu, 30 May 2019 23:12:04 GMT"
            },
            {
                "name": "server",
                "value": "Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0"
            },
            {
                "name": "x-ms-request-id",
                "value": "15c3ec5d-d01e-0060-44dc-1dd02f000000"
            },
            {
                "name": "x-ms-version",
                "value": "2009-09-19"
            },
            {
                "name": "x-ms-lease-status",
                "value": "unlocked"
            },
            {
                "name": "x-ms-blob-type",
                "value": "BlockBlob"
            },
            {
                "name": "access-control-expose-headers",
                "value": "x-ms-request-id,Server,x-ms-version,Content-Type,Last-Modified,ETag,Content-MD5,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding"
            },
            {
                "name": "access-control-allow-origin",
                "value": "*"
            }
        ]
    },
    "https://apimdeveloperportal.blob.core.windows.net/content/4cac439d-5a3d-4b03-38bb-197d32256ee0": {
        "statusCode": 200,
        "statusText": "OK",
        "body": {},
        "headers": [
            {
                "name": "content-type",
                "value": "image/png"
            },
            {
                "name": "content-md5",
                "value": "lcr1pbWljnx1jq+7c9ew8A=="
            },
            {
                "name": "last-modified",
                "value": "Thu, 30 May 2019 23:10:33 GMT"
            },
            {
                "name": "server",
                "value": "Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0"
            },
            {
                "name": "x-ms-request-id",
                "value": "312797f3-a01e-0081-58dc-1d375a000000"
            },
            {
                "name": "x-ms-version",
                "value": "2009-09-19"
            },
            {
                "name": "x-ms-lease-status",
                "value": "unlocked"
            },
            {
                "name": "x-ms-blob-type",
                "value": "BlockBlob"
            },
            {
                "name": "access-control-expose-headers",
                "value": "x-ms-request-id,Server,x-ms-version,Content-Type,Last-Modified,ETag,Content-MD5,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding"
            },
            {
                "name": "access-control-allow-origin",
                "value": "*"
            }
        ]
    },
    "https://apimdeveloperportal.blob.core.windows.net/content/09879768-b2c8-afbd-a945-934c046b3c2d": {
        "statusCode": 200,
        "statusText": "OK",
        "body": {},
        "headers": [
            {
                "name": "content-type",
                "value": "image/jpeg"
            },
            {
                "name": "content-md5",
                "value": "N9xBeWuIvqGdfOx+Jvjigg=="
            },
            {
                "name": "last-modified",
                "value": "Thu, 30 May 2019 23:11:44 GMT"
            },
            {
                "name": "server",
                "value": "Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0"
            },
            {
                "name": "x-ms-request-id",
                "value": "502dc853-601e-005b-56dc-1d9271000000"
            },
            {
                "name": "x-ms-version",
                "value": "2009-09-19"
            },
            {
                "name": "x-ms-lease-status",
                "value": "unlocked"
            },
            {
                "name": "x-ms-blob-type",
                "value": "BlockBlob"
            },
            {
                "name": "access-control-expose-headers",
                "value": "x-ms-request-id,Server,x-ms-version,Content-Type,Last-Modified,ETag,Content-MD5,x-ms-lease-status,x-ms-blob-type,Content-Length,Date,Transfer-Encoding"
            },
            {
                "name": "access-control-allow-origin",
                "value": "*"
            }
        ]
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/contentTypes/blob/contentItems": {
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/contentTypes/blob/contentItems/09879768-b2c8-afbd-a945-934c046b3c2d",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "09879768-b2c8-afbd-a945-934c046b3c2d",
                    "properties": {
                        "blobId": "",
                        "fileName": "hero-gradient.jpg",
                        "description": "",
                        "keywords": "",
                        "downloadUrl": "https://apimdeveloperportal.blob.core.windows.net/content/09879768-b2c8-afbd-a945-934c046b3c2d",
                        "permalink": "/content/hero-gradient.jpg",
                        "mimeType": "image/jpeg"
                    }
                },
                {
                    "id": "/contentTypes/blob/contentItems/c5d2da83-b255-245c-144b-cd3c242e9791",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "c5d2da83-b255-245c-144b-cd3c242e9791",
                    "properties": {
                        "blobId": "",
                        "fileName": "featured-1.jpg",
                        "description": "",
                        "keywords": "",
                        "downloadUrl": "https://apimdeveloperportal.blob.core.windows.net/content/c5d2da83-b255-245c-144b-cd3c242e9791",
                        "permalink": "/content/featured-1.jpg",
                        "mimeType": "image/jpeg"
                    }
                },
                {
                    "id": "/contentTypes/blob/contentItems/a2514081-47cb-95b1-ef0b-aef128c7a7ed",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "a2514081-47cb-95b1-ef0b-aef128c7a7ed",
                    "properties": {
                        "blobId": "",
                        "fileName": "featured-2.jpg",
                        "description": "",
                        "keywords": "",
                        "downloadUrl": "https://apimdeveloperportal.blob.core.windows.net/content/a2514081-47cb-95b1-ef0b-aef128c7a7ed",
                        "permalink": "/content/featured-2.jpg",
                        "mimeType": "image/jpeg"
                    }
                },
                {
                    "id": "/contentTypes/blob/contentItems/ed8e43d0-5f8e-af38-5536-8f0274656ce4",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "ed8e43d0-5f8e-af38-5536-8f0274656ce4",
                    "properties": {
                        "blobId": "",
                        "fileName": "featured-3.jpg",
                        "description": "",
                        "keywords": "",
                        "downloadUrl": "https://apimdeveloperportal.blob.core.windows.net/content/ed8e43d0-5f8e-af38-5536-8f0274656ce4",
                        "permalink": "/content/featured-3.jpg",
                        "mimeType": "image/jpeg"
                    }
                },
                {
                    "id": "/contentTypes/blob/contentItems/70add409-0933-e01e-acef-99999a71167e",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "70add409-0933-e01e-acef-99999a71167e",
                    "properties": {
                        "blobId": "",
                        "fileName": "logo-contoso-small.png",
                        "description": "",
                        "keywords": "",
                        "downloadUrl": "https://apimdeveloperportal.blob.core.windows.net/content/70add409-0933-e01e-acef-99999a71167e",
                        "permalink": "/content/logo-contoso-small.png",
                        "mimeType": "image/png"
                    }
                },
                {
                    "id": "/contentTypes/blob/contentItems/4cac439d-5a3d-4b03-38bb-197d32256ee0",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "4cac439d-5a3d-4b03-38bb-197d32256ee0",
                    "properties": {
                        "fileName": "contoso-black.png",
                        "blobId": "",
                        "description": "",
                        "keywords": "",
                        "permalink": "/content/contoso-black.png",
                        "mimeType": "image/png",
                        "downloadUrl": "https://apimdeveloperportal.blob.core.windows.net/content/4cac439d-5a3d-4b03-38bb-197d32256ee0"
                    }
                }
            ],
            "count": 6
        },
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            },
            {
                "name": "strict-transport-security",
                "value": "max-age=31536000; includeSubDomains"
            },
            {
                "name": "x-content-type-options",
                "value": "nosniff"
            }
        ]
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/contentTypes/page/contentItems": {
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/contentTypes/page/contentItems/4e3cf6a5-574a-ba08-1f23-2e7a38faa6d8",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "4e3cf6a5-574a-ba08-1f23-2e7a38faa6d8",
                    "properties": {
                        "en_us": {
                            "title": "User: Profile",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/4e3cf6a5-574a-ba08-1f23-2e7a38faa6d8",
                            "permalink": "/profile"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/81b0cd55-fb1a-12ee-e41a-d2d6b851ac60",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "81b0cd55-fb1a-12ee-e41a-d2d6b851ac60",
                    "properties": {
                        "en_us": {
                            "title": "Sign in",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/81b0cd55-fb1a-12ee-e41a-d2d6b851ac60",
                            "permalink": "/signin"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/f95c292b-b40b-e2cd-b5dc-71fffc97083d",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "f95c292b-b40b-e2cd-b5dc-71fffc97083d",
                    "properties": {
                        "en_us": {
                            "title": "Errors: 404 Page not found",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/f95c292b-b40b-e2cd-b5dc-71fffc97083d",
                            "permalink": "/404"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/0145411a-2c82-325a-4390-76cff184530b",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "0145411a-2c82-325a-4390-76cff184530b",
                    "properties": {
                        "en_us": {
                            "title": "Sign up",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/0145411a-2c82-325a-4390-76cff184530b",
                            "permalink": "/signup"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/085eb170-7cd7-476f-da11-85b04e265b84",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "085eb170-7cd7-476f-da11-85b04e265b84",
                    "properties": {
                        "en_us": {
                            "title": "Products: Details",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/085eb170-7cd7-476f-da11-85b04e265b84",
                            "permalink": "/product"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/e0987ca1-f458-b546-7697-7be594b35583",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "e0987ca1-f458-b546-7697-7be594b35583",
                    "properties": {
                        "en_us": {
                            "title": "Home",
                            "description": "",
                            "keywords": "",
                            "permalink": "/",
                            "documentId": "contentTypes/document/contentItems/e0987ca1-f458-b546-7697-7be594b35583"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/1b2a9e4c-d53b-99d1-e363-348630d982b5",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "1b2a9e4c-d53b-99d1-e363-348630d982b5",
                    "properties": {
                        "en_us": {
                            "title": "APIs: Details",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/1b2a9e4c-d53b-99d1-e363-348630d982b5",
                            "permalink": "/api-details"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/38b4a583-e611-dbf8-b945-a2d591c61614",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "38b4a583-e611-dbf8-b945-a2d591c61614",
                    "properties": {
                        "en_us": {
                            "title": "APIs: List",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/38b4a583-e611-dbf8-b945-a2d591c61614",
                            "permalink": "/apis"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/89bb02ae-194e-828f-d595-df5675f5e6d1",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "89bb02ae-194e-828f-d595-df5675f5e6d1",
                    "properties": {
                        "en_us": {
                            "title": "User: Reports",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/89bb02ae-194e-828f-d595-df5675f5e6d1",
                            "permalink": "/reports"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/933ce351-2259-d7b7-3f4f-5c33f3ad328a",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "933ce351-2259-d7b7-3f4f-5c33f3ad328a",
                    "properties": {
                        "en_us": {
                            "title": "APIs: Changelog",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/933ce351-2259-d7b7-3f4f-5c33f3ad328a",
                            "permalink": "/api-changelog"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/9862f795-6e36-217e-6dc7-cf7226591267",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "9862f795-6e36-217e-6dc7-cf7226591267",
                    "properties": {
                        "en_us": {
                            "title": "Products: List",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/9862f795-6e36-217e-6dc7-cf7226591267",
                            "permalink": "/products"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/3bc2e097-114e-cd8d-dc51-4139bcbdb8c0",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "3bc2e097-114e-cd8d-dc51-4139bcbdb8c0",
                    "properties": {
                        "en_us": {
                            "title": "Errors: 500 Internal error",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/3bc2e097-114e-cd8d-dc51-4139bcbdb8c0",
                            "permalink": "/500"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/0fa17e1c-6497-f6a9-cf19-02b02b59bbf0",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "0fa17e1c-6497-f6a9-cf19-02b02b59bbf0",
                    "properties": {
                        "en_us": {
                            "title": "Reset password",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/0fa17e1c-6497-f6a9-cf19-02b02b59bbf0",
                            "permalink": "/reset-password"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/bc0b16ea-592d-c4c2-e5b6-ccef526cf42a",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "bc0b16ea-592d-c4c2-e5b6-ccef526cf42a",
                    "properties": {
                        "en_us": {
                            "title": "Confirm password",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/bc0b16ea-592d-c4c2-e5b6-ccef526cf42a",
                            "permalink": "/confirm-password"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/5aafc9ee-a4a8-a062-9949-937c0e2b3734",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "5aafc9ee-a4a8-a062-9949-937c0e2b3734",
                    "properties": {
                        "en_us": {
                            "title": "Change password",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/5aafc9ee-a4a8-a062-9949-937c0e2b3734",
                            "permalink": "/change-password"
                        }
                    }
                },
                {
                    "id": "/contentTypes/page/contentItems/23cfb598-29dd-fd28-7b05-c8ffe801980c",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "23cfb598-29dd-fd28-7b05-c8ffe801980c",
                    "properties": {
                        "en_us": {
                            "title": "Sign up with OAuth",
                            "description": "",
                            "keywords": "",
                            "documentId": "contentTypes/document/contentItems/23cfb598-29dd-fd28-7b05-c8ffe801980c",
                            "permalink": "/signup-oauth"
                        }
                    }
                }
            ],
            "count": 16
        },
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            },
            {
                "name": "strict-transport-security",
                "value": "max-age=31536000; includeSubDomains"
            },
            {
                "name": "x-content-type-options",
                "value": "nosniff"
            }
        ]
    },
    "https://contoso.management.azure-api.net/subscriptions/sid/resourceGroups/rgid/providers/Microsoft.ApiManagement/service/sid/contentTypes/layout/contentItems": {
        "statusCode": 200,
        "statusText": "OK",
        "body": {
            "value": [
                {
                    "id": "/contentTypes/layout/contentItems/default",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "default",
                    "properties": {
                        "en_us": {
                            "title": "Home",
                            "description": "Layout for the home page",
                            "permalinkTemplate": "/",
                            "documentId": "contentTypes/document/contentItems/home-page-layout"
                        }
                    }
                },
                {
                    "id": "/contentTypes/layout/contentItems/default-page-layout",
                    "type": "Microsoft.ApiManagement/service/contentTypes/contentItems",
                    "name": "default-page-layout",
                    "properties": {
                        "en_us": {
                            "title": "Default",
                            "description": "",
                            "documentId": "contentTypes/document/contentItems/default-page-layout",
                            "permalinkTemplate": "/*"
                        }
                    }
                }
            ],
            "count": 2
        },
        "headers": [
            {
                "name": "content-type",
                "value": "application/json; charset=utf-8"
            },
            {
                "name": "strict-transport-security",
                "value": "max-age=31536000; includeSubDomains"
            },
            {
                "name": "x-content-type-options",
                "value": "nosniff"
            }
        ]
    }
}